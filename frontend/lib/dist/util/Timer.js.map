{"version":3,"file":"Timer.js","names":["Timer","constructor","timerHandle","duration","startTime","running","isRunning","remainingTime","elapsed","Date","now","Math","max","setTimeout","handler","time","cancel","window","undefined","clearTimeout"],"sources":["../../src/util/Timer.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A wrapper around setTimeout that adds some useful features, like getting the\n * remaining time.\n */\nexport class Timer {\n  private timerHandle?: number\n\n  private duration = 0\n\n  private startTime = 0\n\n  private running = false\n\n  /** True if the timer is currently running */\n  public get isRunning(): boolean {\n    return this.running\n  }\n\n  /** Remaining time before timeout, or 0 if the timer is not running */\n  public get remainingTime(): number {\n    if (!this.running) {\n      return 0\n    }\n    const elapsed = Date.now() - this.startTime\n    return Math.max(this.duration - elapsed, 0)\n  }\n\n  /**\n   * Starts the Timer with the given callback.\n   * If the Timer is already running, it will be canceled first.\n   */\n  public setTimeout(handler: () => void, time: number): void {\n    this.cancel()\n    this.startTime = Date.now()\n    this.duration = time\n    this.running = true\n    this.timerHandle = window.setTimeout(() => {\n      this.running = false\n      handler()\n    }, time)\n  }\n\n  /** Cancels the Timer. If the Timer is not already running, this is a no-op. */\n  public cancel(): void {\n    if (this.timerHandle !== undefined) {\n      window.clearTimeout(this.timerHandle)\n      this.timerHandle = undefined\n      this.running = false\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,KAAK,CAAC;EAAAC,YAAA;IAAA,KACTC,WAAW;IAAA,KAEXC,QAAQ,GAAG,CAAC;IAAA,KAEZC,SAAS,GAAG,CAAC;IAAA,KAEbC,OAAO,GAAG,KAAK;EAAA;EAEvB;EACA,IAAWC,SAASA,CAAA,EAAY;IAC9B,OAAO,IAAI,CAACD,OAAO;EACrB;;EAEA;EACA,IAAWE,aAAaA,CAAA,EAAW;IACjC,IAAI,CAAC,IAAI,CAACF,OAAO,EAAE;MACjB,OAAO,CAAC;IACV;IACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACN,SAAS;IAC3C,OAAOO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,GAAGK,OAAO,EAAE,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;EACSK,UAAUA,CAACC,OAAmB,EAAEC,IAAY,EAAQ;IACzD,IAAI,CAACC,MAAM,CAAC,CAAC;IACb,IAAI,CAACZ,SAAS,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAACP,QAAQ,GAAGY,IAAI;IACpB,IAAI,CAACV,OAAO,GAAG,IAAI;IACnB,IAAI,CAACH,WAAW,GAAGe,MAAM,CAACJ,UAAU,CAAC,MAAM;MACzC,IAAI,CAACR,OAAO,GAAG,KAAK;MACpBS,OAAO,CAAC,CAAC;IACX,CAAC,EAAEC,IAAI,CAAC;EACV;;EAEA;EACOC,MAAMA,CAAA,EAAS;IACpB,IAAI,IAAI,CAACd,WAAW,KAAKgB,SAAS,EAAE;MAClCD,MAAM,CAACE,YAAY,CAAC,IAAI,CAACjB,WAAW,CAAC;MACrC,IAAI,CAACA,WAAW,GAAGgB,SAAS;MAC5B,IAAI,CAACb,OAAO,GAAG,KAAK;IACtB;EACF;AACF"}