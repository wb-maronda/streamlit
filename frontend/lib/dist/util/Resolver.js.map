{"version":3,"file":"Resolver.js","names":["Resolver","constructor","resolve","reject","promise","Promise","resFn","rejFn"],"sources":["../../src/util/Resolver.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A promise wrapper that makes resolve/reject functions public.\n */\nexport default class Resolver<T> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n\n  public readonly reject: (reason?: any) => void | Promise<any>\n\n  public readonly promise: Promise<T>\n\n  constructor() {\n    // Initialize to something so that TS is happy, then use @ts-expect-error\n    // so that we can assign the actually desired values to resolve and reject.\n    //\n    // This is necessary because TS isn't able to deduce that resolve and\n    // reject will always be set in the callback passed to the Promise\n    // constructor below.\n    this.resolve = () => {}\n    this.reject = () => {}\n\n    this.promise = new Promise<T>((resFn, rejFn) => {\n      // @ts-expect-error\n      this.resolve = resFn\n      // @ts-expect-error\n      this.reject = rejFn\n    })\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,MAAMA,QAAQ,CAAI;EAO/BC,WAAWA,CAAA,EAAG;IAAA,KANEC,OAAO;IAAA,KAEPC,MAAM;IAAA,KAENC,OAAO;IAGrB;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACF,OAAO,GAAG,MAAM,CAAC,CAAC;IACvB,IAAI,CAACC,MAAM,GAAG,MAAM,CAAC,CAAC;IAEtB,IAAI,CAACC,OAAO,GAAG,IAAIC,OAAO,CAAI,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC9C;MACA,IAAI,CAACL,OAAO,GAAGI,KAAK;MACpB;MACA,IAAI,CAACH,MAAM,GAAGI,KAAK;IACrB,CAAC,CAAC;EACJ;AACF"}