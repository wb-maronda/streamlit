{"version":3,"file":"assertNever.js","names":["assertNever","x","Error"],"sources":["../../src/util/assertNever.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that a given value is of type `never`. This function is useful for\n * ensuring exhaustive checks in TypeScript. If the function is called, it\n * throws an error indicating that a non-exhaustive branch was reached.\n *\n * @param {never} x - The value that should be of type `never`.\n * @throws {Error} Throws an error if a non-exhaustive branch is reached.\n * @returns {never} This function never returns a value.\n */\nexport const assertNever = (x: never): never => {\n  throw new Error(`Reached a branch with non-exhaustive item: ${x}`)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,GAAIC,CAAQ,IAAY;EAC9C,MAAM,IAAIC,KAAK,CAAE,8CAA6CD,CAAE,EAAC,CAAC;AACpE,CAAC"}