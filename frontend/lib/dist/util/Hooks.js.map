{"version":3,"file":"Hooks.js","names":["useCallback","useEffect","useRef","useState","usePrevious","value","ref","current","useIsOverflowing","expanded","isOverflowing","setIsOverflowing","checkOverflowing","scrollHeight","clientHeight","window","addEventListener","removeEventListener"],"sources":["../../src/util/Hooks.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\nexport const usePrevious = (value: any): any => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport const useIsOverflowing = (\n  ref: MutableRefObject<HTMLElement | null>,\n  expanded?: boolean\n): boolean => {\n  const { current } = ref\n  const [isOverflowing, setIsOverflowing] = useState(false)\n  const checkOverflowing = useCallback(() => {\n    if (current) {\n      const { scrollHeight, clientHeight } = current\n\n      setIsOverflowing(scrollHeight > clientHeight)\n    }\n  }, [current])\n\n  // We want to double check if the element is overflowing\n  // when the expanded state changes or the height of the\n  // element changes\n  useEffect(() => {\n    checkOverflowing()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expanded, current?.clientHeight])\n\n  // Window resizing can also affect the overflow state\n  // so we need to check it as well\n  useEffect(() => {\n    window.addEventListener(\"resize\", checkOverflowing)\n\n    return () => {\n      window.removeEventListener(\"resize\", checkOverflowing)\n    }\n  }, [checkOverflowing])\n\n  return isOverflowing\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAEEA,WAAW,EACXC,SAAS,EACTC,MAAM,EACNC,QAAQ,QACH,OAAO;AAEd,OAAO,MAAMC,WAAW,GAAIC,KAAU,IAAU;EAC9C,MAAMC,GAAG,GAAGJ,MAAM,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACdK,GAAG,CAACC,OAAO,GAAGF,KAAK;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAOC,GAAG,CAACC,OAAO;AACpB,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAC9BF,GAAyC,EACzCG,QAAkB,KACN;EACZ,MAAM;IAAEF;EAAQ,CAAC,GAAGD,GAAG;EACvB,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMS,gBAAgB,GAAGZ,WAAW,CAAC,MAAM;IACzC,IAAIO,OAAO,EAAE;MACX,MAAM;QAAEM,YAAY;QAAEC;MAAa,CAAC,GAAGP,OAAO;MAE9CI,gBAAgB,CAACE,YAAY,GAAGC,YAAY,CAAC;IAC/C;EACF,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;;EAEb;EACA;EACA;EACAN,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACH,QAAQ,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,YAAY,CAAC,CAAC;;EAErC;EACA;EACAb,SAAS,CAAC,MAAM;IACdc,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEJ,gBAAgB,CAAC;IAEnD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEL,gBAAgB,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,OAAOF,aAAa;AACtB,CAAC"}