{"version":3,"file":"utils.test.js","names":["CustomThemeConfig","LocalStore","baseTheme","createAutoTheme","darkTheme","lightTheme","fonts","AUTO_THEME_NAME","bgColorToBaseString","computeSpacingStyle","createEmotionTheme","createTheme","CUSTOM_THEME_NAME","fontEnumToString","fontToEnum","getCachedTheme","getDefaultTheme","getHostSpecifiedTheme","getSystemTheme","getWrappedHeadersStyle","hasLightBackgroundColor","isColor","isPresetTheme","removeCachedTheme","setCachedTheme","toThemeInput","matchMediaFillers","onchange","addListener","jest","fn","removeListener","addEventListener","removeEventListener","dispatchEvent","windowLocationSearch","search","location","windowMatchMedia","theme","matchMedia","query","matches","media","mockWindow","_len","arguments","length","overrides","Array","_key","localStorage","window","windowSpy","spyOn","mockImplementation","Object","assign","describe","test","expect","emotion","toEqual","it","presetThemes","forEach","themeConfig","toBe","customTheme","primaryColor","secondaryBackgroundColor","font","FontFamily","SERIF","breakLocalStorage","__proto__","Error","afterEach","restoreAllMocks","clear","getItemSpy","not","toHaveBeenCalled","setItem","CACHED_THEME_BASE_KEY","JSON","stringify","name","ACTIVE_THEME","themeInput","backgroundColor","textColor","removeItemSpy","setItemSpy","toHaveBeenCalledTimes","toHaveBeenCalledWith","cachedTheme","parse","getItem","customThemeConfig","colors","primary","secondaryBg","genericFonts","bodyFont","serif","bgColor","inSidebar","base","BaseTheme","DARK","warning","LIGHT","mockRestore","defaultTheme","MONOSPACE","bodyText","monospace","headingFont","codeFont","SANS_SERIF","sansSerif","undefined","testCases","description","expectedResult","_ref","headersStyle","headers","themeFontSizes","values","fontSizes","header","headerStyle","toBeDefined","toContain","fontSize","fontWeight","beforeEach","resetModules","__streamlit","LIGHT_THEME","DARK_THEME","module","getMergedLightTheme","getMergedDarkTheme"],"sources":["../../src/theme/utils.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CustomThemeConfig } from \"@streamlit/lib/src/proto\"\nimport { LocalStore } from \"@streamlit/lib/src/util/storageUtils\"\nimport {\n  baseTheme,\n  createAutoTheme,\n  darkTheme,\n  lightTheme,\n} from \"@streamlit/lib/src/theme/index\"\nimport { ThemeConfig } from \"@streamlit/lib/src/theme/types\"\nimport { fonts } from \"@streamlit/lib/src/theme/primitives/typography\"\n\nimport {\n  AUTO_THEME_NAME,\n  bgColorToBaseString,\n  computeSpacingStyle,\n  createEmotionTheme,\n  createTheme,\n  CUSTOM_THEME_NAME,\n  fontEnumToString,\n  fontToEnum,\n  getCachedTheme,\n  getDefaultTheme,\n  getHostSpecifiedTheme,\n  getSystemTheme,\n  getWrappedHeadersStyle,\n  hasLightBackgroundColor,\n  isColor,\n  isPresetTheme,\n  removeCachedTheme,\n  setCachedTheme,\n  toThemeInput,\n} from \"./utils\"\n\nconst matchMediaFillers = {\n  onchange: null,\n  addListener: jest.fn(), // deprecated\n  removeListener: jest.fn(), // deprecated\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n  dispatchEvent: jest.fn(),\n}\n\nconst windowLocationSearch = (search: string): any => ({\n  location: {\n    search,\n  },\n})\n\nconst windowMatchMedia = (theme: \"light\" | \"dark\"): any => ({\n  matchMedia: (query: any) => ({\n    matches: query === `(prefers-color-scheme: ${theme})`,\n    media: query,\n    ...matchMediaFillers,\n  }),\n})\n\nconst mockWindow = (...overrides: object[]): jest.SpyInstance => {\n  const localStorage = window.localStorage\n  const windowSpy = jest.spyOn(window, \"window\", \"get\")\n\n  windowSpy.mockImplementation(() => ({\n    localStorage,\n    ...windowLocationSearch(\"\"),\n    ...windowMatchMedia(\"light\"),\n    ...Object.assign({}, ...overrides),\n  }))\n\n  return windowSpy\n}\n\ndescribe(\"Styling utils\", () => {\n  describe(\"computeSpacingStyle\", () => {\n    test(\"pulls correct theme values\", async () => {\n      expect(computeSpacingStyle(\"sm md lg none\", lightTheme.emotion)).toEqual(\n        \"0.5rem 0.75rem 1rem 0\"\n      )\n      expect(computeSpacingStyle(\"xs  0  px  lg\", lightTheme.emotion)).toEqual(\n        \"0.375rem 0 1px 1rem\"\n      )\n    })\n  })\n})\n\ndescribe(\"isPresetTheme\", () => {\n  it(\"returns true for the light, dark, and auto themes\", () => {\n    const presetThemes = [lightTheme, darkTheme, createAutoTheme()]\n\n    presetThemes.forEach((themeConfig: ThemeConfig) => {\n      expect(isPresetTheme(themeConfig)).toBe(true)\n    })\n  })\n\n  it(\"returns false for custom themes\", () => {\n    const customTheme = createTheme(\n      CUSTOM_THEME_NAME,\n      new CustomThemeConfig({\n        primaryColor: \"red\",\n        secondaryBackgroundColor: \"blue\",\n        font: CustomThemeConfig.FontFamily.SERIF,\n      })\n    )\n\n    expect(isPresetTheme(customTheme)).toBe(false)\n  })\n})\n\ndescribe(\"Cached theme helpers\", () => {\n  // NOTE: localStorage is weird, and calling .spyOn(window.localStorage, \"setItem\")\n  // doesn't work. Accessing .__proto__ here isn't too bad of a crime since\n  // it's test code.\n  const breakLocalStorage = (): void => {\n    jest\n      // eslint-disable-next-line no-proto\n      .spyOn(window.localStorage.__proto__, \"setItem\")\n      .mockImplementation(() => {\n        throw new Error(\"boom\")\n      })\n  }\n\n  afterEach(() => {\n    jest.restoreAllMocks()\n    window.localStorage.clear()\n  })\n\n  describe(\"getCachedTheme\", () => {\n    it(\"returns null if localStorage is not available\", () => {\n      breakLocalStorage()\n\n      // eslint-disable-next-line no-proto\n      const getItemSpy = jest.spyOn(window.localStorage.__proto__, \"getItem\")\n      expect(getCachedTheme()).toBe(null)\n      expect(getItemSpy).not.toHaveBeenCalled()\n    })\n\n    it(\"returns null if no theme is set in localStorage\", () => {\n      expect(getCachedTheme()).toBe(null)\n    })\n\n    it(\"does not find cached themes with older versions, so returns null\", () => {\n      // Save a cachedTheme in LocalStorage with the key of a previous version.\n      window.localStorage.setItem(\n        LocalStore.CACHED_THEME_BASE_KEY,\n        JSON.stringify({ name: darkTheme.name })\n      )\n      expect(getCachedTheme()).toBe(null)\n    })\n\n    it(\"returns preset cached theme if localStorage is available and one is set\", () => {\n      window.localStorage.setItem(\n        LocalStore.ACTIVE_THEME,\n        JSON.stringify({ name: darkTheme.name })\n      )\n      expect(getCachedTheme()).toEqual(darkTheme)\n    })\n\n    it(\"returns a custom cached theme if localStorage is available and one is set\", () => {\n      const themeInput: Partial<CustomThemeConfig> = {\n        primaryColor: \"red\",\n        backgroundColor: \"orange\",\n        secondaryBackgroundColor: \"yellow\",\n        textColor: \"green\",\n        font: CustomThemeConfig.FontFamily.SERIF,\n      }\n\n      const customTheme = createTheme(CUSTOM_THEME_NAME, themeInput)\n\n      window.localStorage.setItem(\n        LocalStore.ACTIVE_THEME,\n        JSON.stringify({ name: CUSTOM_THEME_NAME, themeInput })\n      )\n\n      expect(getCachedTheme()).toEqual(customTheme)\n    })\n  })\n\n  describe(\"removeCachedTheme\", () => {\n    it(\"does nothing if localStorage is not available\", () => {\n      breakLocalStorage()\n\n      const removeItemSpy = jest.spyOn(\n        // eslint-disable-next-line no-proto\n        window.localStorage.__proto__,\n        \"removeItem\"\n      )\n      removeCachedTheme()\n      expect(removeItemSpy).not.toHaveBeenCalled()\n    })\n\n    it(\"removes theme if localStorage\", () => {\n      const removeItemSpy = jest.spyOn(\n        // eslint-disable-next-line no-proto\n        window.localStorage.__proto__,\n        \"removeItem\"\n      )\n\n      removeCachedTheme()\n      expect(removeItemSpy).toHaveBeenCalled()\n    })\n  })\n\n  describe(\"setCachedTheme\", () => {\n    const themeInput: Partial<CustomThemeConfig> = {\n      primaryColor: \"red\",\n      backgroundColor: \"orange\",\n      secondaryBackgroundColor: \"yellow\",\n      textColor: \"green\",\n      font: CustomThemeConfig.FontFamily.SERIF,\n    }\n    const customTheme = createTheme(CUSTOM_THEME_NAME, themeInput)\n\n    it(\"does nothing if localStorage is not available\", () => {\n      breakLocalStorage()\n\n      // eslint-disable-next-line no-proto\n      const setItemSpy = jest.spyOn(window.localStorage.__proto__, \"setItem\")\n\n      setCachedTheme(darkTheme)\n      // This looks a bit funny and is the way it is because the way we know\n      // that localStorage is broken is that setItem throws an error at us.\n      expect(setItemSpy).toHaveBeenCalledTimes(1)\n      expect(setItemSpy).toHaveBeenCalledWith(\"testData\", \"testData\")\n    })\n\n    it(\"sets a preset theme with just its name if localStorage is available\", () => {\n      setCachedTheme(darkTheme)\n      const cachedTheme = JSON.parse(\n        window.localStorage.getItem(LocalStore.ACTIVE_THEME) as string\n      )\n      expect(cachedTheme).toEqual({ name: darkTheme.name })\n    })\n\n    it(\"deletes cached themes with older versions\", () => {\n      window.localStorage.setItem(\"stActiveTheme\", \"I should get deleted :|\")\n\n      window.localStorage.setItem(\n        LocalStore.CACHED_THEME_BASE_KEY,\n        \"I should get deleted too :|\"\n      )\n\n      setCachedTheme(customTheme)\n\n      expect(window.localStorage.getItem(\"stActiveTheme\")).toBe(null)\n      expect(\n        window.localStorage.getItem(LocalStore.CACHED_THEME_BASE_KEY)\n      ).toBe(null)\n    })\n\n    it(\"sets a custom theme with its name and themeInput if localStorage is available\", () => {\n      setCachedTheme(customTheme)\n\n      const cachedTheme = JSON.parse(\n        window.localStorage.getItem(LocalStore.ACTIVE_THEME) as string\n      )\n\n      expect(cachedTheme).toEqual({\n        name: customTheme.name,\n        themeInput,\n      })\n    })\n  })\n})\n\ndescribe(\"createTheme\", () => {\n  it(\"returns a theme\", () => {\n    const customThemeConfig = new CustomThemeConfig({\n      primaryColor: \"red\",\n      secondaryBackgroundColor: \"blue\",\n      font: CustomThemeConfig.FontFamily.SERIF,\n    })\n    const customTheme = createTheme(CUSTOM_THEME_NAME, customThemeConfig)\n    expect(customTheme.name).toBe(CUSTOM_THEME_NAME)\n    expect(customTheme.emotion.colors.primary).toBe(\"red\")\n    expect(customTheme.emotion.colors.secondaryBg).toBe(\"blue\")\n    expect(customTheme.emotion.genericFonts.bodyFont).toBe(\n      lightTheme.emotion.fonts.serif\n    )\n    // If it is not provided, use the default\n    expect(customTheme.emotion.colors.bgColor).toBe(\n      lightTheme.emotion.colors.bgColor\n    )\n  })\n\n  it(\"returns a theme based on a different theme\", () => {\n    const customThemeConfig = new CustomThemeConfig({\n      primaryColor: \"red\",\n      secondaryBackgroundColor: \"blue\",\n      font: CustomThemeConfig.FontFamily.SERIF,\n    })\n    const customTheme = createTheme(\n      CUSTOM_THEME_NAME,\n      customThemeConfig,\n      darkTheme,\n      // inSidebar\n      true\n    )\n    expect(customTheme.name).toBe(CUSTOM_THEME_NAME)\n    expect(customTheme.emotion.colors.primary).toBe(\"red\")\n    expect(customTheme.emotion.colors.secondaryBg).toBe(\"blue\")\n    expect(customTheme.emotion.genericFonts.bodyFont).toBe(\n      darkTheme.emotion.fonts.serif\n    )\n    // If it is not provided, use the default\n    expect(customTheme.emotion.colors.bgColor).toBe(\n      darkTheme.emotion.colors.bgColor\n    )\n    expect(customTheme.emotion.inSidebar).toBe(true)\n    expect(darkTheme.emotion.inSidebar).toBe(false)\n  })\n\n  it(\"handles hex values without #\", () => {\n    const customThemeConfig = new CustomThemeConfig({\n      primaryColor: \"eee\",\n      secondaryBackgroundColor: \"fc9231\",\n      font: CustomThemeConfig.FontFamily.SERIF,\n    })\n    const customTheme = createTheme(\n      CUSTOM_THEME_NAME,\n      customThemeConfig,\n      darkTheme\n    )\n    expect(customTheme.name).toBe(CUSTOM_THEME_NAME)\n    expect(customTheme.emotion.colors.primary).toBe(\"#eee\")\n    expect(customTheme.emotion.colors.secondaryBg).toBe(\"#fc9231\")\n    expect(customTheme.emotion.genericFonts.bodyFont).toBe(\n      customTheme.emotion.fonts.serif\n    )\n    // If it is not provided, use the default\n    expect(customTheme.emotion.colors.bgColor).toBe(\n      darkTheme.emotion.colors.bgColor\n    )\n  })\n\n  it(\"sets unspecified theme options using the given BaseTheme\", () => {\n    const customTheme = createTheme(\n      CUSTOM_THEME_NAME,\n      new CustomThemeConfig({\n        base: CustomThemeConfig.BaseTheme.DARK,\n        primaryColor: \"blue\",\n      })\n    )\n\n    expect(customTheme.emotion.colors.bgColor).toBe(\n      darkTheme.emotion.colors.bgColor\n    )\n    expect(customTheme.emotion.colors.primary).toBe(\"blue\")\n    // Auxiliary colors should be those of the Dark theme.\n    expect(customTheme.emotion.colors.warning).toBe(\n      darkTheme.emotion.colors.warning\n    )\n  })\n\n  it(\"sets auxiliary colors based on backgroundColor over the BaseTheme\", () => {\n    const customTheme = createTheme(\n      CUSTOM_THEME_NAME,\n      new CustomThemeConfig({\n        backgroundColor: \"black\",\n        base: CustomThemeConfig.BaseTheme.LIGHT,\n      })\n    )\n\n    expect(customTheme.emotion.colors.bgColor).toBe(\"black\")\n    // Auxiliary colors should be picked to be ones that work well with the\n    // black background even though the user set the base theme to light.\n    expect(customTheme.emotion.colors.warning).toBe(\n      darkTheme.emotion.colors.warning\n    )\n    // Theme options should be inherited from the light theme as defined by the\n    // user.\n    expect(customTheme.emotion.colors.secondaryBg).toBe(\n      lightTheme.emotion.colors.secondaryBg\n    )\n  })\n})\n\ndescribe(\"getSystemTheme\", () => {\n  let windowSpy: jest.SpyInstance\n\n  afterEach(() => {\n    windowSpy.mockRestore()\n    window.localStorage.clear()\n  })\n\n  it(\"returns lightTheme when matchMedia does *not* match dark\", () => {\n    windowSpy = mockWindow()\n\n    expect(getSystemTheme().name).toBe(\"Light\")\n  })\n\n  it(\"returns darkTheme when matchMedia does match dark\", () => {\n    windowSpy = mockWindow(windowMatchMedia(\"dark\"))\n\n    expect(getSystemTheme().name).toBe(\"Dark\")\n  })\n})\n\ndescribe(\"getHostSpecifiedTheme\", () => {\n  let windowSpy: jest.SpyInstance\n\n  afterEach(() => {\n    windowSpy.mockRestore()\n    window.localStorage.clear()\n  })\n\n  it(\"sets default to the auto theme when there is no theme preference\", () => {\n    windowSpy = mockWindow()\n    const defaultTheme = getHostSpecifiedTheme()\n\n    expect(defaultTheme.name).toBe(AUTO_THEME_NAME)\n    // Also verify that the theme is our lightTheme.\n    expect(defaultTheme.emotion.colors).toEqual(lightTheme.emotion.colors)\n  })\n\n  it(\"sets the auto theme correctly when the OS preference is dark\", () => {\n    mockWindow(windowSpy, windowMatchMedia(\"dark\"))\n\n    const defaultTheme = getHostSpecifiedTheme()\n\n    expect(defaultTheme.name).toBe(AUTO_THEME_NAME)\n    expect(defaultTheme.emotion.colors).toEqual(darkTheme.emotion.colors)\n  })\n\n  it(\"sets default to the light theme when an embed query parameter is set\", () => {\n    windowSpy = mockWindow(\n      windowLocationSearch(\"?embed=true&embed_options=light_theme\")\n    )\n    const defaultTheme = getHostSpecifiedTheme()\n\n    expect(defaultTheme.name).toBe(\"Light\")\n    // Also verify that the theme is our lightTheme.\n    expect(defaultTheme.emotion.colors).toEqual(lightTheme.emotion.colors)\n  })\n\n  it(\"sets default to the dark theme when an embed query parameter is set\", () => {\n    windowSpy = mockWindow(\n      windowLocationSearch(\"?embed=true&embed_options=dark_theme\")\n    )\n    const defaultTheme = getHostSpecifiedTheme()\n\n    expect(defaultTheme.name).toBe(\"Dark\")\n    // Also verify that the theme is our darkTheme.\n    expect(defaultTheme.emotion.colors).toEqual(darkTheme.emotion.colors)\n  })\n\n  it(\"respects embed query parameter is set over system theme\", () => {\n    windowSpy = mockWindow(\n      windowMatchMedia(\"dark\"),\n      windowLocationSearch(\"?embed=true&embed_options=light_theme\")\n    )\n    const defaultTheme = getHostSpecifiedTheme()\n\n    expect(defaultTheme.name).toBe(\"Light\")\n    // Also verify that the theme is our lightTheme.\n    expect(defaultTheme.emotion.colors).toEqual(lightTheme.emotion.colors)\n  })\n})\n\ndescribe(\"getDefaultTheme\", () => {\n  let windowSpy: jest.SpyInstance\n\n  afterEach(() => {\n    windowSpy.mockRestore()\n    window.localStorage.clear()\n  })\n\n  it(\"sets default to the auto theme when there is no cached theme\", () => {\n    windowSpy = mockWindow()\n    const defaultTheme = getDefaultTheme()\n\n    expect(defaultTheme.name).toBe(AUTO_THEME_NAME)\n    // Also verify that the theme is our lightTheme.\n    expect(defaultTheme.emotion.colors).toEqual(lightTheme.emotion.colors)\n  })\n\n  it(\"sets the auto theme correctly when the OS preference is dark\", () => {\n    mockWindow(windowSpy, windowMatchMedia(\"dark\"))\n\n    const defaultTheme = getDefaultTheme()\n\n    expect(defaultTheme.name).toBe(AUTO_THEME_NAME)\n    expect(defaultTheme.emotion.colors).toEqual(darkTheme.emotion.colors)\n  })\n\n  it(\"sets the default to the user preference when one is set\", () => {\n    windowSpy = mockWindow()\n    setCachedTheme(darkTheme)\n\n    const defaultTheme = getDefaultTheme()\n\n    expect(defaultTheme.name).toBe(\"Dark\")\n    expect(defaultTheme.emotion.colors).toEqual(darkTheme.emotion.colors)\n  })\n\n  it(\"sets default to the light theme when an embed query parameter is set\", () => {\n    windowSpy = mockWindow(\n      windowLocationSearch(\"?embed=true&embed_options=light_theme\")\n    )\n    const defaultTheme = getDefaultTheme()\n\n    expect(defaultTheme.name).toBe(\"Light\")\n    // Also verify that the theme is our lightTheme.\n    expect(defaultTheme.emotion.colors).toEqual(lightTheme.emotion.colors)\n  })\n\n  it(\"sets default to the dark theme when an embed query parameter is set\", () => {\n    windowSpy = mockWindow(\n      windowLocationSearch(\"?embed=true&embed_options=dark_theme\")\n    )\n    const defaultTheme = getDefaultTheme()\n\n    expect(defaultTheme.name).toBe(\"Dark\")\n    // Also verify that the theme is our darkTheme.\n    expect(defaultTheme.emotion.colors).toEqual(darkTheme.emotion.colors)\n  })\n\n  it(\"respects embed query parameter is set over system theme\", () => {\n    windowSpy = mockWindow(\n      windowMatchMedia(\"dark\"),\n      windowLocationSearch(\"?embed=true&embed_options=light_theme\")\n    )\n    const defaultTheme = getDefaultTheme()\n\n    expect(defaultTheme.name).toBe(\"Light\")\n    // Also verify that the theme is our lightTheme.\n    expect(defaultTheme.emotion.colors).toEqual(lightTheme.emotion.colors)\n  })\n})\n\ndescribe(\"isColor\", () => {\n  // https://www.w3schools.com/cssref/css_colors_legal.asp\n  it(\"works with valid colors\", () => {\n    expect(isColor(\"#fff\")).toBe(true)\n    expect(isColor(\"#ffffff\")).toBe(true)\n    expect(isColor(\"#ffffff0\")).toBe(true)\n    expect(isColor(\"#000\")).toBe(true)\n    expect(isColor(\"#000000\")).toBe(true)\n    expect(isColor(\"#fafafa\")).toBe(true)\n    expect(isColor(\"red\")).toBe(true)\n    expect(isColor(\"coral\")).toBe(true)\n    expect(isColor(\"transparent\")).toBe(true)\n    expect(isColor(\"rgb(0,0,0)\")).toBe(true)\n    expect(isColor(\"rgb(-1, 0, -255)\")).toBe(true)\n    expect(isColor(\"rgba(0,0,0,.5)\")).toBe(true)\n    expect(isColor(\"hsl(120,50%,40%)\")).toBe(true)\n    expect(isColor(\"hsl(120,50%,40%, .4)\")).toBe(true)\n    expect(isColor(\"currentColor\")).toBe(true)\n  })\n\n  it(\"works with invalid colors\", () => {\n    expect(isColor(\"fff\")).toBe(false)\n    expect(isColor(\"cookies are delicious\")).toBe(false)\n    expect(isColor(\"\")).toBe(false)\n    expect(isColor(\"hsl(120,50,40)\")).toBe(false)\n  })\n})\n\ndescribe(\"createEmotionTheme\", () => {\n  it(\"sets to light when matchMedia does not match dark\", () => {\n    const themeInput: Partial<CustomThemeConfig> = {\n      font: CustomThemeConfig.FontFamily.MONOSPACE,\n      primaryColor: \"red\",\n      backgroundColor: \"pink\",\n      secondaryBackgroundColor: \"blue\",\n      textColor: \"orange\",\n    }\n\n    const theme = createEmotionTheme(themeInput)\n\n    expect(theme.colors.primary).toBe(\"red\")\n    expect(theme.colors.bgColor).toBe(\"pink\")\n    expect(theme.colors.secondaryBg).toBe(\"blue\")\n    expect(theme.colors.bodyText).toBe(\"orange\")\n    expect(theme.genericFonts.bodyFont).toBe(theme.fonts.monospace)\n    expect(theme.genericFonts.headingFont).toBe(theme.fonts.monospace)\n    expect(theme.genericFonts.codeFont).toBe(theme.fonts.monospace)\n  })\n\n  it(\"defaults to base if missing value\", () => {\n    const themeInput: Partial<CustomThemeConfig> = {\n      primaryColor: \"red\",\n    }\n\n    const theme = createEmotionTheme(themeInput)\n\n    expect(theme.colors.primary).toBe(\"red\")\n    expect(theme.colors.bgColor).toBe(baseTheme.emotion.colors.bgColor)\n    expect(theme.colors.secondaryBg).toBe(baseTheme.emotion.colors.secondaryBg)\n    expect(theme.colors.bodyText).toBe(baseTheme.emotion.colors.bodyText)\n    expect(theme.genericFonts.bodyFont).toBe(\n      baseTheme.emotion.genericFonts.bodyFont\n    )\n    expect(theme.genericFonts.headingFont).toBe(\n      baseTheme.emotion.genericFonts.headingFont\n    )\n    expect(theme.genericFonts.codeFont).toBe(\n      baseTheme.emotion.genericFonts.codeFont\n    )\n  })\n})\n\ndescribe(\"toThemeInput\", () => {\n  it(\"converts from emotion theme to what a custom component expects\", () => {\n    const { colors } = lightTheme.emotion\n    expect(toThemeInput(lightTheme.emotion)).toEqual({\n      primaryColor: colors.primary,\n      backgroundColor: colors.bgColor,\n      secondaryBackgroundColor: colors.secondaryBg,\n      textColor: colors.bodyText,\n      font: CustomThemeConfig.FontFamily.SANS_SERIF,\n    })\n  })\n})\n\ndescribe(\"converting font <> enum\", () => {\n  it(\"fontEnumToString converts to enum\", () => {\n    expect(fontEnumToString(CustomThemeConfig.FontFamily.SANS_SERIF)).toBe(\n      fonts.sansSerif\n    )\n    expect(fontEnumToString(CustomThemeConfig.FontFamily.SERIF)).toBe(\n      fonts.serif\n    )\n    expect(fontEnumToString(CustomThemeConfig.FontFamily.MONOSPACE)).toBe(\n      fonts.monospace\n    )\n  })\n\n  it(\"fontToEnum converts to string\", () => {\n    expect(fontToEnum(fonts.monospace)).toBe(\n      CustomThemeConfig.FontFamily.MONOSPACE\n    )\n    expect(fontToEnum(fonts.sansSerif)).toBe(\n      CustomThemeConfig.FontFamily.SANS_SERIF\n    )\n    expect(fontToEnum(fonts.serif)).toBe(CustomThemeConfig.FontFamily.SERIF)\n  })\n})\n\ndescribe(\"bgColorToBaseString\", () => {\n  it(\"returns 'light' if passed undefined\", () => {\n    expect(bgColorToBaseString(undefined)).toBe(\"light\")\n  })\n\n  it(\"returns 'light' for a light background color\", () => {\n    expect(bgColorToBaseString(\"#FFFFFF\")).toBe(\"light\")\n  })\n\n  it(\"returns 'dark' for a dark background color\", () => {\n    expect(bgColorToBaseString(\"#000000\")).toBe(\"dark\")\n  })\n})\n\ndescribe(\"hasLightBackgroundColor\", () => {\n  const testCases = [\n    {\n      description: \"works for default light theme\",\n      theme: lightTheme,\n      expectedResult: true,\n    },\n    {\n      description: \"works for default dark theme\",\n      theme: darkTheme,\n      expectedResult: false,\n    },\n    {\n      description: \"works for custom light theme\",\n      theme: createTheme(\n        CUSTOM_THEME_NAME,\n        new CustomThemeConfig({ backgroundColor: \"yellow\" })\n      ),\n      expectedResult: true,\n    },\n    {\n      description: \"works for custom dark theme\",\n      theme: createTheme(\n        CUSTOM_THEME_NAME,\n        new CustomThemeConfig({ backgroundColor: \"navy\" })\n      ),\n      expectedResult: false,\n    },\n  ]\n\n  testCases.forEach(({ description, theme, expectedResult }) => {\n    it(`${description}`, () => {\n      expect(hasLightBackgroundColor(theme.emotion)).toBe(expectedResult)\n    })\n  })\n})\n\ndescribe(\"getWrappedHeadersStyle\", () => {\n  const headersStyle = getWrappedHeadersStyle(lightTheme.emotion)\n\n  const headers = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]\n  const themeFontSizes = Object.values(baseTheme.emotion.fontSizes)\n\n  headers.forEach(header => {\n    it(`test header '${header}'`, () => {\n      const headerStyle = headersStyle[`& ${header}`]\n      expect(headerStyle).toBeDefined()\n      expect(themeFontSizes).toContain(headerStyle.fontSize)\n      expect(headerStyle.fontWeight).toBe(600)\n    })\n  })\n})\n\ndescribe(\"theme overrides\", () => {\n  beforeEach(async () => {\n    jest.resetModules()\n    window.__streamlit = undefined\n  })\n\n  afterEach(() => {\n    jest.resetModules()\n    window.__streamlit = undefined\n  })\n\n  it(\"honors the window variables set\", async () => {\n    window.__streamlit = {\n      LIGHT_THEME: {\n        primaryColor: \"purple\",\n      },\n      DARK_THEME: {\n        primaryColor: \"yellow\",\n      },\n    }\n\n    const module = await import(\"./utils\")\n    // Ensure we are not working with the same object\n    expect(module.getMergedLightTheme()).not.toEqual(lightTheme)\n    expect(module.getMergedDarkTheme()).not.toEqual(darkTheme)\n\n    expect(module.getMergedLightTheme().emotion.colors.primary).toEqual(\n      \"purple\"\n    )\n    expect(module.getMergedDarkTheme().emotion.colors.primary).toEqual(\n      \"yellow\"\n    )\n  })\n\n  it(\"maintains original theme if no global themes are specified\", async () => {\n    const module = await import(\"./utils\")\n    expect(module.getMergedLightTheme()).toEqual(lightTheme)\n    expect(module.getMergedDarkTheme()).toEqual(darkTheme)\n  })\n})\n"],"mappings":"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"}