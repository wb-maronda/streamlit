{"version":3,"file":"utils.js","names":["getLuminance","transparentize","camelcase","decamelize","cloneDeep","merge","CustomThemeConfig","logError","LocalStore","localStorageAvailable","baseTheme","darkTheme","lightTheme","isLightTheme","isDarkTheme","fonts","computeDerivedColors","createEmotionColors","createBaseUiTheme","AUTO_THEME_NAME","CUSTOM_THEME_NAME","getSystemTheme","window","matchMedia","matches","createAutoTheme","name","createPresetThemes","isPresetTheme","themeConfig","presetThemeNames","map","t","includes","fontToEnum","font","fontStyle","Object","keys","find","fontType","defaultFont","FontFamily","SANS_SERIF","parsedFontStyle","toUpperCase","fontEnumToString","undefined","toString","bgColorToBaseString","bgColor","isColor","strColor","s","Option","style","color","createEmotionTheme","themeInput","baseThemeConfig","arguments","length","genericColors","genericFonts","emotion","radii","fontSizes","customColors","parsedFont","parsedColors","entries","reduce","colors","_ref","key","concat","secondaryBackgroundColor","secondaryBg","backgroundColor","primaryColor","primary","textColor","bodyText","skeletonBackgroundColor","widgetBackgroundColor","widgetBorderColor","newGenericColors","conditionalOverrides","checkboxRadius","md","addPxUnit","baseWidgetRadius","lg","tinyFontSize","twoSm","twoSmPx","smallFontSize","sm","smPx","baseFontSize","mdPx","bodyFont","headingFont","codeFont","toThemeInput","theme","toExportedTheme","base","completeThemeInput","partialInput","createTheme","themeName","inSidebar","BaseTheme","DARK","startingTheme","basewebTheme","primitives","getCachedTheme","cachedThemeStr","localStorage","getItem","ACTIVE_THEME","JSON","parse","deleteOldCachedThemes","CACHED_THEME_VERSION","CACHED_THEME_BASE_KEY","removeItem","i","setCachedTheme","cachedTheme","setItem","stringify","removeCachedTheme","getDefaultTheme","whiteSpace","computeSpacingStyle","value","split","marginValue","spacing","none","join","hasLightBackgroundColor","getDividerColors","blue","blue60","blue90","green","green60","green90","orange","orange60","orange90","red","red60","red90","violet","purple60","purple80","gray","gray40","gray70","grey","rainbow","getMarkdownTextColors","red80","red70","orange100","yellow","yellow100","yellow40","blue80","blue50","purple50","purple","purple100","gray80","getMarkdownBgColors","redbg","orangebg","yellow70","yellowbg","greenbg","bluebg","violetbg","purplebg","graybg","getGray70","gray30","getGray30","gray85","getGray90","gray90","gray10","getBlueArrayAsc","blue10","blue20","blue30","blue40","blue70","blue100","getBlueArrayDesc","getSequentialColorsArray","getDivergingColorsArray","red100","red50","red30","getCategoricalColorsArray","red40","blueGreen80","green40","orange80","orange50","getDecreasingRed","getIncreasingGreen","getWrappedHeadersStyle","fontSize","xl","fontWeight","mdLg","n"],"sources":["../../src/theme/utils.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLuminance, transparentize } from \"color2k\"\nimport camelcase from \"camelcase\"\nimport decamelize from \"decamelize\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport merge from \"lodash/merge\"\n\nimport {\n  CustomThemeConfig,\n  ICustomThemeConfig,\n} from \"@streamlit/lib/src/proto\"\nimport { logError } from \"@streamlit/lib/src/util/log\"\nimport {\n  LocalStore,\n  localStorageAvailable,\n} from \"@streamlit/lib/src/util/storageUtils\"\nimport {\n  baseTheme,\n  CachedTheme,\n  darkTheme,\n  lightTheme,\n  EmotionTheme,\n  ThemeConfig,\n  ThemeSpacing,\n} from \"@streamlit/lib/src/theme\"\n\nimport { isLightTheme, isDarkTheme } from \"@streamlit/lib/src/util/utils\"\n\nimport { fonts } from \"./primitives/typography\"\nimport {\n  computeDerivedColors,\n  createEmotionColors,\n  DerivedColors,\n} from \"./getColors\"\nimport { createBaseUiTheme } from \"./createThemeUtil\"\n\nexport const AUTO_THEME_NAME = \"Use system setting\"\nexport const CUSTOM_THEME_NAME = \"Custom Theme\"\n\nexport const getSystemTheme = (): ThemeConfig => {\n  return window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ? darkTheme\n    : lightTheme\n}\n\nexport const createAutoTheme = (): ThemeConfig => ({\n  ...getSystemTheme(),\n  name: AUTO_THEME_NAME,\n})\n\n// Update auto theme in case it has changed\nexport const createPresetThemes = (): ThemeConfig[] => [\n  createAutoTheme(),\n  lightTheme,\n  darkTheme,\n]\n\nexport const isPresetTheme = (themeConfig: ThemeConfig): boolean => {\n  const presetThemeNames = createPresetThemes().map((t: ThemeConfig) => t.name)\n  return presetThemeNames.includes(themeConfig.name)\n}\n\nexport const fontToEnum = (font: string): CustomThemeConfig.FontFamily => {\n  const fontStyle = Object.keys(fonts).find(\n    (fontType: string) => fonts[fontType] === font\n  )\n  const defaultFont = CustomThemeConfig.FontFamily.SANS_SERIF\n  if (fontStyle) {\n    const parsedFontStyle = decamelize(fontStyle).toUpperCase()\n    return parsedFontStyle in CustomThemeConfig.FontFamily\n      ? // @ts-expect-error\n        CustomThemeConfig.FontFamily[parsedFontStyle]\n      : defaultFont\n  }\n  return defaultFont\n}\n\nexport const fontEnumToString = (\n  font: CustomThemeConfig.FontFamily | null | undefined\n): string | undefined =>\n  font !== null &&\n  font !== undefined && // font can be 0 for sans serif\n  font in CustomThemeConfig.FontFamily\n    ? fonts[\n        camelcase(\n          CustomThemeConfig.FontFamily[font].toString()\n        ) as keyof typeof fonts\n      ]\n    : undefined\n\nexport const bgColorToBaseString = (bgColor?: string): string =>\n  bgColor === undefined || getLuminance(bgColor) > 0.5 ? \"light\" : \"dark\"\n\nexport const isColor = (strColor: string): boolean => {\n  const s = new Option().style\n  s.color = strColor\n  return s.color !== \"\"\n}\n\nexport const createEmotionTheme = (\n  themeInput: Partial<ICustomThemeConfig>,\n  baseThemeConfig = baseTheme\n): EmotionTheme => {\n  const { genericColors, genericFonts } = baseThemeConfig.emotion\n  const { font, radii, fontSizes, ...customColors } = themeInput\n\n  const parsedFont = fontEnumToString(font)\n\n  const parsedColors = Object.entries(customColors).reduce(\n    (colors: Record<string, string>, [key, color]) => {\n      // @ts-expect-error\n      if (isColor(color)) {\n        // @ts-expect-error\n        colors[key] = color\n      } else if (isColor(`#${color}`)) {\n        colors[key] = `#${color}`\n      }\n      return colors\n    },\n    {}\n  )\n\n  // TODO: create an enum for this. Updating everything if a\n  // config option changes is a pain\n  // Mapping from CustomThemeConfig to color primitives\n  const {\n    secondaryBackgroundColor: secondaryBg,\n    backgroundColor: bgColor,\n    primaryColor: primary,\n    textColor: bodyText,\n    skeletonBackgroundColor,\n    widgetBackgroundColor,\n    widgetBorderColor,\n  } = parsedColors\n\n  const newGenericColors = { ...genericColors }\n\n  if (primary) newGenericColors.primary = primary\n  if (bodyText) newGenericColors.bodyText = bodyText\n  if (secondaryBg) newGenericColors.secondaryBg = secondaryBg\n  if (bgColor) newGenericColors.bgColor = bgColor\n  if (widgetBackgroundColor)\n    newGenericColors.widgetBackgroundColor = widgetBackgroundColor\n  if (widgetBorderColor) newGenericColors.widgetBorderColor = widgetBorderColor\n  if (skeletonBackgroundColor)\n    newGenericColors.skeletonBackgroundColor = skeletonBackgroundColor\n\n  const conditionalOverrides: any = {}\n\n  if (radii) {\n    conditionalOverrides.radii = {\n      ...baseThemeConfig.emotion.radii,\n    }\n\n    if (radii.checkboxRadius)\n      conditionalOverrides.radii.md = addPxUnit(radii.checkboxRadius)\n    if (radii.baseWidgetRadius)\n      conditionalOverrides.radii.lg = addPxUnit(radii.baseWidgetRadius)\n  }\n\n  if (fontSizes) {\n    conditionalOverrides.fontSizes = {\n      ...baseThemeConfig.emotion.fontSizes,\n    }\n\n    if (fontSizes.tinyFontSize) {\n      conditionalOverrides.fontSizes.twoSm = addPxUnit(fontSizes.tinyFontSize)\n      conditionalOverrides.fontSizes.twoSmPx = fontSizes.tinyFontSize\n    }\n\n    if (fontSizes.smallFontSize) {\n      conditionalOverrides.fontSizes.sm = addPxUnit(fontSizes.smallFontSize)\n      conditionalOverrides.fontSizes.smPx = fontSizes.smallFontSize\n    }\n\n    if (fontSizes.baseFontSize) {\n      conditionalOverrides.fontSizes.md = addPxUnit(fontSizes.baseFontSize)\n      conditionalOverrides.fontSizes.mdPx = fontSizes.baseFontSize\n    }\n  }\n\n  return {\n    ...baseThemeConfig.emotion,\n    colors: createEmotionColors(newGenericColors),\n    genericColors: newGenericColors,\n    genericFonts: {\n      ...genericFonts,\n      ...(parsedFont && {\n        bodyFont: themeInput.bodyFont ? themeInput.bodyFont : parsedFont,\n        headingFont: themeInput.bodyFont ? themeInput.bodyFont : parsedFont,\n        codeFont: themeInput.codeFont\n          ? themeInput.codeFont\n          : genericFonts.codeFont,\n      }),\n    },\n    ...conditionalOverrides,\n  }\n}\n\nexport const toThemeInput = (\n  theme: EmotionTheme\n): Partial<CustomThemeConfig> => {\n  const { colors, genericFonts } = theme\n  return {\n    primaryColor: colors.primary,\n    backgroundColor: colors.bgColor,\n    secondaryBackgroundColor: colors.secondaryBg,\n    textColor: colors.bodyText,\n    font: fontToEnum(genericFonts.bodyFont),\n  }\n}\n\nexport type ExportedTheme = {\n  base: string\n  primaryColor: string\n  backgroundColor: string\n  secondaryBackgroundColor: string\n  textColor: string\n  font: string\n} & DerivedColors\n\nexport const toExportedTheme = (theme: EmotionTheme): ExportedTheme => {\n  const { genericColors } = theme\n  const themeInput = toThemeInput(theme)\n\n  // At this point, we know that all of the fields of themeInput are populated\n  // (since we went \"backwards\" from a theme -> themeInput), but typescript\n  // doesn't know this, so we have to cast each field to string.\n  return {\n    primaryColor: themeInput.primaryColor as string,\n    backgroundColor: themeInput.backgroundColor as string,\n    secondaryBackgroundColor: themeInput.secondaryBackgroundColor as string,\n    textColor: themeInput.textColor as string,\n\n    base: bgColorToBaseString(themeInput.backgroundColor),\n    font: fontEnumToString(themeInput.font) as string,\n\n    ...computeDerivedColors(genericColors),\n  }\n}\n\nconst completeThemeInput = (\n  partialInput: Partial<CustomThemeConfig>,\n  baseTheme: ThemeConfig\n): CustomThemeConfig => {\n  return new CustomThemeConfig({\n    ...toThemeInput(baseTheme.emotion),\n    ...partialInput,\n  })\n}\n\nexport const createTheme = (\n  themeName: string,\n  themeInput: Partial<CustomThemeConfig>,\n  baseThemeConfig?: ThemeConfig,\n  inSidebar = false\n): ThemeConfig => {\n  if (baseThemeConfig) {\n    themeInput = completeThemeInput(themeInput, baseThemeConfig)\n  } else if (themeInput.base === CustomThemeConfig.BaseTheme.DARK) {\n    themeInput = completeThemeInput(themeInput, darkTheme)\n  } else {\n    themeInput = completeThemeInput(themeInput, lightTheme)\n  }\n\n  // We use startingTheme to pick a set of \"auxiliary colors\" for widgets like\n  // the success/info/warning/error boxes and others; these need to have their\n  // colors tweaked to work well with the background.\n  //\n  // For our auxiliary colors, we pick colors that look reasonable based on the\n  // theme's backgroundColor instead of picking them using themeInput.base.\n  // This way, things will look good even if a user sets\n  // themeInput.base === LIGHT and themeInput.backgroundColor === \"black\".\n  const bgColor = themeInput.backgroundColor as string\n  const startingTheme = merge(\n    cloneDeep(\n      baseThemeConfig\n        ? baseThemeConfig\n        : getLuminance(bgColor) > 0.5\n        ? lightTheme\n        : darkTheme\n    ),\n    { emotion: { inSidebar } }\n  )\n\n  const emotion = createEmotionTheme(themeInput, startingTheme)\n\n  return {\n    ...startingTheme,\n    name: themeName,\n    emotion,\n    basewebTheme: createBaseUiTheme(emotion, startingTheme.primitives),\n  }\n}\n\nexport const getCachedTheme = (): ThemeConfig | null => {\n  if (!localStorageAvailable()) {\n    return null\n  }\n\n  const cachedThemeStr = window.localStorage.getItem(LocalStore.ACTIVE_THEME)\n  if (!cachedThemeStr) {\n    return null\n  }\n\n  const { name: themeName, themeInput }: CachedTheme =\n    JSON.parse(cachedThemeStr)\n  switch (themeName) {\n    case lightTheme.name:\n      return lightTheme\n    case darkTheme.name:\n      return darkTheme\n    default:\n      // At this point we're guaranteed that themeInput is defined.\n      return createTheme(themeName, themeInput as Partial<CustomThemeConfig>)\n  }\n}\n\nconst deleteOldCachedThemes = (): void => {\n  const { CACHED_THEME_VERSION, CACHED_THEME_BASE_KEY } = LocalStore\n  const { localStorage } = window\n\n  // Pre-release versions of theming stored cached themes under the key\n  // \"stActiveTheme\".\n  localStorage.removeItem(\"stActiveTheme\")\n\n  // The first version of cached themes had keys of the form\n  // `stActiveTheme-${window.location.pathname}` with no version number.\n  localStorage.removeItem(CACHED_THEME_BASE_KEY)\n\n  for (let i = 1; i < CACHED_THEME_VERSION; i++) {\n    localStorage.removeItem(\n      `${CACHED_THEME_BASE_KEY}-v${CACHED_THEME_VERSION}`\n    )\n  }\n}\n\nexport const setCachedTheme = (themeConfig: ThemeConfig): void => {\n  if (!localStorageAvailable()) {\n    return\n  }\n\n  deleteOldCachedThemes()\n\n  const cachedTheme: CachedTheme = {\n    name: themeConfig.name,\n    ...(!isPresetTheme(themeConfig) && {\n      themeInput: toThemeInput(themeConfig.emotion),\n    }),\n  }\n\n  window.localStorage.setItem(\n    LocalStore.ACTIVE_THEME,\n    JSON.stringify(cachedTheme)\n  )\n}\n\nexport const removeCachedTheme = (): void => {\n  if (!localStorageAvailable()) {\n    return\n  }\n\n  window.localStorage.removeItem(LocalStore.ACTIVE_THEME)\n}\n\nexport const getDefaultTheme = (): ThemeConfig => {\n  // Priority for default theme\n  const cachedTheme = getCachedTheme()\n\n  // 1. Previous user preference\n  // We shouldn't ever have auto saved in our storage in case\n  // OS theme changes but we explicitly check in case!\n  if (cachedTheme && cachedTheme.name !== AUTO_THEME_NAME) {\n    return cachedTheme\n  }\n\n  // 2. Embed Parameter preference\n  if (isLightTheme()) {\n    return lightTheme\n  }\n\n  if (isDarkTheme()) {\n    return darkTheme\n  }\n\n  // 3. OS preference\n  return createAutoTheme()\n}\n\nconst whiteSpace = /\\s+/\nexport function computeSpacingStyle(\n  value: string,\n  theme: EmotionTheme\n): string {\n  if (value === \"\") {\n    return \"\"\n  }\n\n  return value\n    .split(whiteSpace)\n    .map(marginValue => {\n      if (marginValue === \"0\") {\n        return theme.spacing.none\n      }\n\n      if (!(marginValue in theme.spacing)) {\n        logError(`Invalid spacing value: ${marginValue}`)\n        return theme.spacing.none\n      }\n\n      return theme.spacing[marginValue as ThemeSpacing]\n    })\n    .join(\" \")\n}\n\nexport function hasLightBackgroundColor(theme: EmotionTheme): boolean {\n  return getLuminance(theme.colors.bgColor) > 0.5\n}\n\nexport function getDividerColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n  const blue = lightTheme ? theme.colors.blue60 : theme.colors.blue90\n  const green = lightTheme ? theme.colors.green60 : theme.colors.green90\n  const orange = lightTheme ? theme.colors.orange60 : theme.colors.orange90\n  const red = lightTheme ? theme.colors.red60 : theme.colors.red90\n  const violet = lightTheme ? theme.colors.purple60 : theme.colors.purple80\n  const gray = lightTheme ? theme.colors.gray40 : theme.colors.gray70\n\n  return {\n    blue: blue,\n    green: green,\n    orange: orange,\n    red: red,\n    violet: violet,\n    gray: gray,\n    grey: gray,\n    rainbow: `linear-gradient(to right, ${red}, ${orange}, ${green}, ${blue}, ${violet})`,\n  }\n}\n\nexport function getMarkdownTextColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n  const red = lightTheme ? theme.colors.red80 : theme.colors.red70\n  const orange = lightTheme ? theme.colors.orange100 : theme.colors.orange60\n  const yellow = lightTheme ? theme.colors.yellow100 : theme.colors.yellow40\n  const green = lightTheme ? theme.colors.green90 : theme.colors.green60\n  const blue = lightTheme ? theme.colors.blue80 : theme.colors.blue50\n  const violet = lightTheme ? theme.colors.purple80 : theme.colors.purple50\n  const purple = lightTheme ? theme.colors.purple100 : theme.colors.purple80\n  const gray = lightTheme ? theme.colors.gray80 : theme.colors.gray70\n  return {\n    red: red,\n    orange: orange,\n    yellow: yellow,\n    green: green,\n    blue: blue,\n    violet: violet,\n    purple: purple,\n    gray: gray,\n  }\n}\n\nexport function getMarkdownBgColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n\n  return {\n    redbg: transparentize(\n      theme.colors[lightTheme ? \"red80\" : \"red60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    orangebg: transparentize(theme.colors.yellow70, lightTheme ? 0.9 : 0.7),\n    yellowbg: transparentize(\n      theme.colors[lightTheme ? \"yellow70\" : \"yellow50\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    greenbg: transparentize(\n      theme.colors[lightTheme ? \"green70\" : \"green60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    bluebg: transparentize(\n      theme.colors[lightTheme ? \"blue70\" : \"blue60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    violetbg: transparentize(\n      theme.colors[lightTheme ? \"purple70\" : \"purple60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    purplebg: transparentize(\n      theme.colors[lightTheme ? \"purple90\" : \"purple80\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    graybg: transparentize(\n      theme.colors[lightTheme ? \"gray70\" : \"gray50\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n  }\n}\n\nexport function getGray70(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray70\n    : theme.colors.gray30\n}\n\nexport function getGray30(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray30\n    : theme.colors.gray85\n}\n\nexport function getGray90(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray90\n    : theme.colors.gray10\n}\n\nfunction getBlueArrayAsc(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.blue10,\n    colors.blue20,\n    colors.blue30,\n    colors.blue40,\n    colors.blue50,\n    colors.blue60,\n    colors.blue70,\n    colors.blue80,\n    colors.blue90,\n    colors.blue100,\n  ]\n}\n\nfunction getBlueArrayDesc(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.blue100,\n    colors.blue90,\n    colors.blue80,\n    colors.blue70,\n    colors.blue60,\n    colors.blue50,\n    colors.blue40,\n    colors.blue30,\n    colors.blue20,\n    colors.blue10,\n  ]\n}\n\nexport function getSequentialColorsArray(theme: EmotionTheme): string[] {\n  return hasLightBackgroundColor(theme)\n    ? getBlueArrayAsc(theme)\n    : getBlueArrayDesc(theme)\n}\n\nexport function getDivergingColorsArray(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.red100,\n    colors.red90,\n    colors.red70,\n    colors.red50,\n    colors.red30,\n    colors.blue30,\n    colors.blue50,\n    colors.blue70,\n    colors.blue90,\n    colors.blue100,\n  ]\n}\n\nexport function getCategoricalColorsArray(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return hasLightBackgroundColor(theme)\n    ? [\n        colors.blue80,\n        colors.blue40,\n        colors.red80,\n        colors.red40,\n        colors.blueGreen80,\n        colors.green40,\n        colors.orange80,\n        colors.orange50,\n        colors.purple80,\n        colors.gray40,\n      ]\n    : [\n        colors.blue40,\n        colors.blue80,\n        colors.red40,\n        colors.red80,\n        colors.green40,\n        colors.blueGreen80,\n        colors.orange50,\n        colors.orange80,\n        colors.purple80,\n        colors.gray40,\n      ]\n}\n\nexport function getDecreasingRed(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.red80\n    : theme.colors.red40\n}\n\nexport function getIncreasingGreen(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.blueGreen80\n    : theme.colors.green40\n}\n\n/**\n * Return a @emotion/styled-like css dictionary to update the styles of headers, such as h1, h2, ...\n * Used for st.title, st.header, ... that are wrapped in the Sidebar or Dialogs.\n */\nexport function getWrappedHeadersStyle(theme: EmotionTheme): {\n  [cssSelector: string]: { fontSize: string; fontWeight: number }\n} {\n  return {\n    \"& h1\": {\n      fontSize: theme.fontSizes.xl,\n      fontWeight: 600,\n    },\n\n    \"& h2\": {\n      fontSize: theme.fontSizes.lg,\n      fontWeight: 600,\n    },\n\n    \"& h3\": {\n      fontSize: theme.fontSizes.mdLg,\n      fontWeight: 600,\n    },\n\n    \"& h4\": {\n      fontSize: theme.fontSizes.md,\n      fontWeight: 600,\n    },\n\n    \"& h5\": {\n      fontSize: theme.fontSizes.sm,\n      fontWeight: 600,\n    },\n\n    \"& h6\": {\n      fontSize: theme.fontSizes.twoSm,\n      fontWeight: 600,\n    },\n  }\n}\n\nfunction addPxUnit(n: number): string {\n  return `${n}px`\n}\n"],"mappings":"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"}