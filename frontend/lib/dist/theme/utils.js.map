{"version":3,"file":"utils.js","names":["camelcase","getLuminance","transparentize","decamelize","cloneDeep","isObject","merge","once","CustomThemeConfig","baseTheme","darkTheme","lightTheme","logError","localStorageAvailable","LocalStore","isDarkThemeInQueryParams","isLightThemeInQueryParams","createBaseUiTheme","computeDerivedColors","createEmotionColors","fonts","AUTO_THEME_NAME","CUSTOM_THEME_NAME","mergeTheme","theme","injectedTheme","themeConfigProto","createTheme","name","getMergedLightTheme","window","__streamlit","LIGHT_THEME","getMergedDarkTheme","DARK_THEME","getSystemTheme","matchMedia","matches","createAutoTheme","createPresetThemes","isPresetTheme","themeConfig","presetThemeNames","map","t","includes","fontToEnum","font","fontStyle","Object","keys","find","fontType","defaultFont","FontFamily","SANS_SERIF","parsedFontStyle","toUpperCase","fontEnumToString","undefined","toString","bgColorToBaseString","bgColor","isColor","strColor","s","Option","style","color","createEmotionTheme","themeInput","baseThemeConfig","arguments","length","genericColors","genericFonts","emotion","radii","fontSizes","customColors","parsedFont","parsedColors","entries","reduce","colors","_ref","key","secondaryBackgroundColor","secondaryBg","backgroundColor","primaryColor","primary","textColor","bodyText","skeletonBackgroundColor","widgetBackgroundColor","widgetBorderColor","newGenericColors","conditionalOverrides","checkboxRadius","md","addPxUnit","baseWidgetRadius","lg","tinyFontSize","twoSm","twoSmPx","smallFontSize","sm","smPx","baseFontSize","mdPx","bodyFont","headingFont","codeFont","toThemeInput","toExportedTheme","base","completeThemeInput","partialInput","themeName","inSidebar","BaseTheme","DARK","startingTheme","basewebTheme","primitives","getCachedTheme","cachedThemeStr","localStorage","getItem","ACTIVE_THEME","JSON","parse","deleteOldCachedThemes","CACHED_THEME_VERSION","CACHED_THEME_BASE_KEY","removeItem","i","setCachedTheme","cachedTheme","setItem","stringify","removeCachedTheme","getHostSpecifiedTheme","getDefaultTheme","whiteSpace","computeSpacingStyle","value","split","marginValue","spacing","none","join","hasLightBackgroundColor","getDividerColors","blue","blue60","blue90","green","green60","green90","orange","orange60","orange90","red","red60","red90","violet","purple60","purple80","gray","gray40","gray70","grey","rainbow","getMarkdownTextColors","red80","red70","orange100","yellow","yellow100","yellow40","blue80","blue50","purple50","purple","purple100","gray80","getMarkdownBgColors","redbg","orangebg","yellow70","yellowbg","greenbg","bluebg","violetbg","purplebg","graybg","getGray70","gray30","getGray30","gray85","getGray90","gray90","gray10","getBlueArrayAsc","blue10","blue20","blue30","blue40","blue70","blue100","getBlueArrayDesc","getSequentialColorsArray","getDivergingColorsArray","red100","red50","red30","getCategoricalColorsArray","red40","blueGreen80","green40","orange80","orange50","getDecreasingRed","getIncreasingGreen","getWrappedHeadersStyle","fontSize","xl","fontWeight","fontWeights","bold","mdLg","n"],"sources":["../../src/theme/utils.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport camelcase from \"camelcase\"\nimport { getLuminance, transparentize } from \"color2k\"\nimport decamelize from \"decamelize\"\nimport cloneDeep from \"lodash/cloneDeep\"\nimport isObject from \"lodash/isObject\"\nimport merge from \"lodash/merge\"\nimport once from \"lodash/once\"\n\nimport {\n  CustomThemeConfig,\n  ICustomThemeConfig,\n} from \"@streamlit/lib/src/proto\"\nimport {\n  baseTheme,\n  CachedTheme,\n  darkTheme,\n  EmotionTheme,\n  lightTheme,\n  ThemeConfig,\n  ThemeSpacing,\n} from \"@streamlit/lib/src/theme\"\nimport { logError } from \"@streamlit/lib/src/util/log\"\nimport {\n  localStorageAvailable,\n  LocalStore,\n} from \"@streamlit/lib/src/util/storageUtils\"\nimport {\n  isDarkThemeInQueryParams,\n  isLightThemeInQueryParams,\n} from \"@streamlit/lib/src/util/utils\"\n\nimport { createBaseUiTheme } from \"./createThemeUtil\"\nimport {\n  computeDerivedColors,\n  createEmotionColors,\n  DerivedColors,\n} from \"./getColors\"\nimport { fonts } from \"./primitives/typography\"\n\nexport const AUTO_THEME_NAME = \"Use system setting\"\nexport const CUSTOM_THEME_NAME = \"Custom Theme\"\n\ndeclare global {\n  interface Window {\n    __streamlit?: {\n      LIGHT_THEME: ICustomThemeConfig\n      DARK_THEME: ICustomThemeConfig\n    }\n  }\n}\n\nfunction mergeTheme(\n  theme: ThemeConfig,\n  injectedTheme: ICustomThemeConfig | undefined\n): ThemeConfig {\n  // We confirm the injectedTheme is a valid object before merging it\n  // since the type makes assumption about the implementation of the\n  // injected object.\n  if (injectedTheme && isObject(injectedTheme)) {\n    const themeConfigProto = new CustomThemeConfig(injectedTheme)\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return createTheme(theme.name, themeConfigProto, theme)\n  }\n\n  return theme\n}\n\nexport const getMergedLightTheme = once(() =>\n  mergeTheme(lightTheme, window.__streamlit?.LIGHT_THEME)\n)\nexport const getMergedDarkTheme = once(() =>\n  mergeTheme(darkTheme, window.__streamlit?.DARK_THEME)\n)\n\nexport const getSystemTheme = (): ThemeConfig => {\n  return window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ? getMergedDarkTheme()\n    : getMergedLightTheme()\n}\n\nexport const createAutoTheme = (): ThemeConfig => ({\n  ...getSystemTheme(),\n  name: AUTO_THEME_NAME,\n})\n\n// Update auto theme in case it has changed\nexport const createPresetThemes = (): ThemeConfig[] => [\n  createAutoTheme(),\n  getMergedLightTheme(),\n  getMergedDarkTheme(),\n]\n\nexport const isPresetTheme = (themeConfig: ThemeConfig): boolean => {\n  const presetThemeNames = createPresetThemes().map((t: ThemeConfig) => t.name)\n  return presetThemeNames.includes(themeConfig.name)\n}\n\nexport const fontToEnum = (font: string): CustomThemeConfig.FontFamily => {\n  const fontStyle = Object.keys(fonts).find(\n    (fontType: string) => fonts[fontType] === font\n  )\n  const defaultFont = CustomThemeConfig.FontFamily.SANS_SERIF\n  if (fontStyle) {\n    const parsedFontStyle = decamelize(fontStyle).toUpperCase()\n    return parsedFontStyle in CustomThemeConfig.FontFamily\n      ? // @ts-expect-error\n        CustomThemeConfig.FontFamily[parsedFontStyle]\n      : defaultFont\n  }\n  return defaultFont\n}\n\nexport const fontEnumToString = (\n  font: CustomThemeConfig.FontFamily | null | undefined\n): string | undefined =>\n  font !== null &&\n  font !== undefined && // font can be 0 for sans serif\n  font in CustomThemeConfig.FontFamily\n    ? fonts[\n        camelcase(\n          CustomThemeConfig.FontFamily[font].toString()\n        ) as keyof typeof fonts\n      ]\n    : undefined\n\nexport const bgColorToBaseString = (bgColor?: string): string =>\n  bgColor === undefined || getLuminance(bgColor) > 0.5 ? \"light\" : \"dark\"\n\nexport const isColor = (strColor: string): boolean => {\n  const s = new Option().style\n  s.color = strColor\n  return s.color !== \"\"\n}\n\nexport const createEmotionTheme = (\n  themeInput: Partial<ICustomThemeConfig>,\n  baseThemeConfig = baseTheme\n): EmotionTheme => {\n  const { genericColors, genericFonts } = baseThemeConfig.emotion\n  const { font, radii, fontSizes, ...customColors } = themeInput\n\n  const parsedFont = fontEnumToString(font)\n\n  const parsedColors = Object.entries(customColors).reduce(\n    (colors: Record<string, string>, [key, color]) => {\n      // @ts-expect-error\n      if (isColor(color)) {\n        // @ts-expect-error\n        colors[key] = color\n      } else if (isColor(`#${color}`)) {\n        colors[key] = `#${color}`\n      }\n      return colors\n    },\n    {}\n  )\n\n  // TODO: create an enum for this. Updating everything if a\n  // config option changes is a pain\n  // Mapping from CustomThemeConfig to color primitives\n  const {\n    secondaryBackgroundColor: secondaryBg,\n    backgroundColor: bgColor,\n    primaryColor: primary,\n    textColor: bodyText,\n    skeletonBackgroundColor,\n    widgetBackgroundColor,\n    widgetBorderColor,\n  } = parsedColors\n\n  const newGenericColors = { ...genericColors }\n\n  if (primary) newGenericColors.primary = primary\n  if (bodyText) newGenericColors.bodyText = bodyText\n  if (secondaryBg) newGenericColors.secondaryBg = secondaryBg\n  if (bgColor) newGenericColors.bgColor = bgColor\n  if (widgetBackgroundColor)\n    newGenericColors.widgetBackgroundColor = widgetBackgroundColor\n  if (widgetBorderColor) newGenericColors.widgetBorderColor = widgetBorderColor\n  if (skeletonBackgroundColor)\n    newGenericColors.skeletonBackgroundColor = skeletonBackgroundColor\n\n  const conditionalOverrides: any = {}\n\n  if (radii) {\n    conditionalOverrides.radii = {\n      ...baseThemeConfig.emotion.radii,\n    }\n\n    if (radii.checkboxRadius)\n      conditionalOverrides.radii.md = addPxUnit(radii.checkboxRadius)\n    if (radii.baseWidgetRadius)\n      conditionalOverrides.radii.lg = addPxUnit(radii.baseWidgetRadius)\n  }\n\n  if (fontSizes) {\n    conditionalOverrides.fontSizes = {\n      ...baseThemeConfig.emotion.fontSizes,\n    }\n\n    if (fontSizes.tinyFontSize) {\n      conditionalOverrides.fontSizes.twoSm = addPxUnit(fontSizes.tinyFontSize)\n      conditionalOverrides.fontSizes.twoSmPx = fontSizes.tinyFontSize\n    }\n\n    if (fontSizes.smallFontSize) {\n      conditionalOverrides.fontSizes.sm = addPxUnit(fontSizes.smallFontSize)\n      conditionalOverrides.fontSizes.smPx = fontSizes.smallFontSize\n    }\n\n    if (fontSizes.baseFontSize) {\n      conditionalOverrides.fontSizes.md = addPxUnit(fontSizes.baseFontSize)\n      conditionalOverrides.fontSizes.mdPx = fontSizes.baseFontSize\n    }\n  }\n\n  return {\n    ...baseThemeConfig.emotion,\n    colors: createEmotionColors(newGenericColors),\n    genericColors: newGenericColors,\n    genericFonts: {\n      ...genericFonts,\n      ...(parsedFont && {\n        bodyFont: themeInput.bodyFont ? themeInput.bodyFont : parsedFont,\n        headingFont: themeInput.bodyFont ? themeInput.bodyFont : parsedFont,\n        codeFont: themeInput.codeFont\n          ? themeInput.codeFont\n          : genericFonts.codeFont,\n      }),\n    },\n    ...conditionalOverrides,\n  }\n}\n\nexport const toThemeInput = (\n  theme: EmotionTheme\n): Partial<CustomThemeConfig> => {\n  const { colors, genericFonts } = theme\n  return {\n    primaryColor: colors.primary,\n    backgroundColor: colors.bgColor,\n    secondaryBackgroundColor: colors.secondaryBg,\n    textColor: colors.bodyText,\n    font: fontToEnum(genericFonts.bodyFont),\n  }\n}\n\nexport type ExportedTheme = {\n  base: string\n  primaryColor: string\n  backgroundColor: string\n  secondaryBackgroundColor: string\n  textColor: string\n  font: string\n} & DerivedColors\n\nexport const toExportedTheme = (theme: EmotionTheme): ExportedTheme => {\n  const { genericColors } = theme\n  const themeInput = toThemeInput(theme)\n\n  // At this point, we know that all of the fields of themeInput are populated\n  // (since we went \"backwards\" from a theme -> themeInput), but typescript\n  // doesn't know this, so we have to cast each field to string.\n  return {\n    primaryColor: themeInput.primaryColor as string,\n    backgroundColor: themeInput.backgroundColor as string,\n    secondaryBackgroundColor: themeInput.secondaryBackgroundColor as string,\n    textColor: themeInput.textColor as string,\n\n    base: bgColorToBaseString(themeInput.backgroundColor),\n    font: fontEnumToString(themeInput.font) as string,\n\n    ...computeDerivedColors(genericColors),\n  }\n}\n\nconst completeThemeInput = (\n  partialInput: Partial<CustomThemeConfig>,\n  baseTheme: ThemeConfig\n): CustomThemeConfig => {\n  return new CustomThemeConfig({\n    ...toThemeInput(baseTheme.emotion),\n    ...partialInput,\n  })\n}\n\nexport const createTheme = (\n  themeName: string,\n  themeInput: Partial<CustomThemeConfig>,\n  baseThemeConfig?: ThemeConfig,\n  inSidebar = false\n): ThemeConfig => {\n  if (baseThemeConfig) {\n    themeInput = completeThemeInput(themeInput, baseThemeConfig)\n  } else if (themeInput.base === CustomThemeConfig.BaseTheme.DARK) {\n    themeInput = completeThemeInput(themeInput, darkTheme)\n  } else {\n    themeInput = completeThemeInput(themeInput, lightTheme)\n  }\n\n  // We use startingTheme to pick a set of \"auxiliary colors\" for widgets like\n  // the success/info/warning/error boxes and others; these need to have their\n  // colors tweaked to work well with the background.\n  //\n  // For our auxiliary colors, we pick colors that look reasonable based on the\n  // theme's backgroundColor instead of picking them using themeInput.base.\n  // This way, things will look good even if a user sets\n  // themeInput.base === LIGHT and themeInput.backgroundColor === \"black\".\n  const bgColor = themeInput.backgroundColor as string\n  const startingTheme = merge(\n    cloneDeep(\n      baseThemeConfig\n        ? baseThemeConfig\n        : getLuminance(bgColor) > 0.5\n        ? lightTheme\n        : darkTheme\n    ),\n    { emotion: { inSidebar } }\n  )\n\n  const emotion = createEmotionTheme(themeInput, startingTheme)\n\n  return {\n    ...startingTheme,\n    name: themeName,\n    emotion,\n    basewebTheme: createBaseUiTheme(emotion, startingTheme.primitives),\n  }\n}\n\nexport const getCachedTheme = (): ThemeConfig | null => {\n  if (!localStorageAvailable()) {\n    return null\n  }\n\n  const cachedThemeStr = window.localStorage.getItem(LocalStore.ACTIVE_THEME)\n  if (!cachedThemeStr) {\n    return null\n  }\n\n  const { name: themeName, themeInput }: CachedTheme =\n    JSON.parse(cachedThemeStr)\n  switch (themeName) {\n    case lightTheme.name:\n      return getMergedLightTheme()\n    case darkTheme.name:\n      return getMergedDarkTheme()\n    default:\n      // At this point we're guaranteed that themeInput is defined.\n      return createTheme(themeName, themeInput as Partial<CustomThemeConfig>)\n  }\n}\n\nconst deleteOldCachedThemes = (): void => {\n  const { CACHED_THEME_VERSION, CACHED_THEME_BASE_KEY } = LocalStore\n  const { localStorage } = window\n\n  // Pre-release versions of theming stored cached themes under the key\n  // \"stActiveTheme\".\n  localStorage.removeItem(\"stActiveTheme\")\n\n  // The first version of cached themes had keys of the form\n  // `stActiveTheme-${window.location.pathname}` with no version number.\n  localStorage.removeItem(CACHED_THEME_BASE_KEY)\n\n  for (let i = 1; i <= CACHED_THEME_VERSION; i++) {\n    localStorage.removeItem(`${CACHED_THEME_BASE_KEY}-v${i}`)\n  }\n}\n\nexport const setCachedTheme = (themeConfig: ThemeConfig): void => {\n  if (!localStorageAvailable()) {\n    return\n  }\n\n  deleteOldCachedThemes()\n\n  // Do not set the theme if the app has a pre-defined theme from the embedder\n  if (isLightThemeInQueryParams() || isDarkThemeInQueryParams()) {\n    return\n  }\n\n  const cachedTheme: CachedTheme = {\n    name: themeConfig.name,\n    ...(!isPresetTheme(themeConfig) && {\n      themeInput: toThemeInput(themeConfig.emotion),\n    }),\n  }\n\n  window.localStorage.setItem(\n    LocalStore.ACTIVE_THEME,\n    JSON.stringify(cachedTheme)\n  )\n}\n\nexport const removeCachedTheme = (): void => {\n  if (!localStorageAvailable()) {\n    return\n  }\n\n  window.localStorage.removeItem(LocalStore.ACTIVE_THEME)\n}\n\nexport const getHostSpecifiedTheme = (): ThemeConfig => {\n  if (isLightThemeInQueryParams()) {\n    return getMergedLightTheme()\n  }\n\n  if (isDarkThemeInQueryParams()) {\n    return getMergedDarkTheme()\n  }\n\n  return createAutoTheme()\n}\n\nexport const getDefaultTheme = (): ThemeConfig => {\n  // Priority for default theme\n  const cachedTheme = getCachedTheme()\n\n  // We shouldn't ever have auto saved in our storage in case\n  // OS theme changes but we explicitly check in case!\n  if (cachedTheme && cachedTheme.name !== AUTO_THEME_NAME) {\n    return cachedTheme\n  }\n\n  return getHostSpecifiedTheme()\n}\n\nconst whiteSpace = /\\s+/\nexport function computeSpacingStyle(\n  value: string,\n  theme: EmotionTheme\n): string {\n  if (value === \"\") {\n    return \"\"\n  }\n\n  return value\n    .split(whiteSpace)\n    .map(marginValue => {\n      if (marginValue === \"0\") {\n        return theme.spacing.none\n      }\n\n      if (!(marginValue in theme.spacing)) {\n        logError(`Invalid spacing value: ${marginValue}`)\n        return theme.spacing.none\n      }\n\n      return theme.spacing[marginValue as ThemeSpacing]\n    })\n    .join(\" \")\n}\n\nexport function hasLightBackgroundColor(theme: EmotionTheme): boolean {\n  return getLuminance(theme.colors.bgColor) > 0.5\n}\n\nexport function getDividerColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n  const blue = lightTheme ? theme.colors.blue60 : theme.colors.blue90\n  const green = lightTheme ? theme.colors.green60 : theme.colors.green90\n  const orange = lightTheme ? theme.colors.orange60 : theme.colors.orange90\n  const red = lightTheme ? theme.colors.red60 : theme.colors.red90\n  const violet = lightTheme ? theme.colors.purple60 : theme.colors.purple80\n  const gray = lightTheme ? theme.colors.gray40 : theme.colors.gray70\n\n  return {\n    blue: blue,\n    green: green,\n    orange: orange,\n    red: red,\n    violet: violet,\n    gray: gray,\n    grey: gray,\n    rainbow: `linear-gradient(to right, ${red}, ${orange}, ${green}, ${blue}, ${violet})`,\n  }\n}\n\nexport function getMarkdownTextColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n  const red = lightTheme ? theme.colors.red80 : theme.colors.red70\n  const orange = lightTheme ? theme.colors.orange100 : theme.colors.orange60\n  const yellow = lightTheme ? theme.colors.yellow100 : theme.colors.yellow40\n  const green = lightTheme ? theme.colors.green90 : theme.colors.green60\n  const blue = lightTheme ? theme.colors.blue80 : theme.colors.blue50\n  const violet = lightTheme ? theme.colors.purple80 : theme.colors.purple50\n  const purple = lightTheme ? theme.colors.purple100 : theme.colors.purple80\n  const gray = lightTheme ? theme.colors.gray80 : theme.colors.gray70\n  return {\n    red: red,\n    orange: orange,\n    yellow: yellow,\n    green: green,\n    blue: blue,\n    violet: violet,\n    purple: purple,\n    gray: gray,\n  }\n}\n\nexport function getMarkdownBgColors(theme: EmotionTheme): any {\n  const lightTheme = hasLightBackgroundColor(theme)\n\n  return {\n    redbg: transparentize(\n      theme.colors[lightTheme ? \"red80\" : \"red60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    orangebg: transparentize(theme.colors.yellow70, lightTheme ? 0.9 : 0.7),\n    yellowbg: transparentize(\n      theme.colors[lightTheme ? \"yellow70\" : \"yellow50\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    greenbg: transparentize(\n      theme.colors[lightTheme ? \"green70\" : \"green60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    bluebg: transparentize(\n      theme.colors[lightTheme ? \"blue70\" : \"blue60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    violetbg: transparentize(\n      theme.colors[lightTheme ? \"purple70\" : \"purple60\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    purplebg: transparentize(\n      theme.colors[lightTheme ? \"purple90\" : \"purple80\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n    graybg: transparentize(\n      theme.colors[lightTheme ? \"gray70\" : \"gray50\"],\n      lightTheme ? 0.9 : 0.7\n    ),\n  }\n}\n\nexport function getGray70(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray70\n    : theme.colors.gray30\n}\n\nexport function getGray30(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray30\n    : theme.colors.gray85\n}\n\nexport function getGray90(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.gray90\n    : theme.colors.gray10\n}\n\nfunction getBlueArrayAsc(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.blue10,\n    colors.blue20,\n    colors.blue30,\n    colors.blue40,\n    colors.blue50,\n    colors.blue60,\n    colors.blue70,\n    colors.blue80,\n    colors.blue90,\n    colors.blue100,\n  ]\n}\n\nfunction getBlueArrayDesc(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.blue100,\n    colors.blue90,\n    colors.blue80,\n    colors.blue70,\n    colors.blue60,\n    colors.blue50,\n    colors.blue40,\n    colors.blue30,\n    colors.blue20,\n    colors.blue10,\n  ]\n}\n\nexport function getSequentialColorsArray(theme: EmotionTheme): string[] {\n  return hasLightBackgroundColor(theme)\n    ? getBlueArrayAsc(theme)\n    : getBlueArrayDesc(theme)\n}\n\nexport function getDivergingColorsArray(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return [\n    colors.red100,\n    colors.red90,\n    colors.red70,\n    colors.red50,\n    colors.red30,\n    colors.blue30,\n    colors.blue50,\n    colors.blue70,\n    colors.blue90,\n    colors.blue100,\n  ]\n}\n\nexport function getCategoricalColorsArray(theme: EmotionTheme): string[] {\n  const { colors } = theme\n  return hasLightBackgroundColor(theme)\n    ? [\n        colors.blue80,\n        colors.blue40,\n        colors.red80,\n        colors.red40,\n        colors.blueGreen80,\n        colors.green40,\n        colors.orange80,\n        colors.orange50,\n        colors.purple80,\n        colors.gray40,\n      ]\n    : [\n        colors.blue40,\n        colors.blue80,\n        colors.red40,\n        colors.red80,\n        colors.green40,\n        colors.blueGreen80,\n        colors.orange50,\n        colors.orange80,\n        colors.purple80,\n        colors.gray40,\n      ]\n}\n\nexport function getDecreasingRed(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.red80\n    : theme.colors.red40\n}\n\nexport function getIncreasingGreen(theme: EmotionTheme): string {\n  return hasLightBackgroundColor(theme)\n    ? theme.colors.blueGreen80\n    : theme.colors.green40\n}\n\n/**\n * Return a @emotion/styled-like css dictionary to update the styles of headers, such as h1, h2, ...\n * Used for st.title, st.header, ... that are wrapped in the Sidebar or Dialogs.\n */\nexport function getWrappedHeadersStyle(theme: EmotionTheme): {\n  [cssSelector: string]: { fontSize: string; fontWeight: number }\n} {\n  return {\n    \"& h1\": {\n      fontSize: theme.fontSizes.xl,\n      fontWeight: theme.fontWeights.bold,\n    },\n\n    \"& h2\": {\n      fontSize: theme.fontSizes.lg,\n      fontWeight: theme.fontWeights.bold,\n    },\n\n    \"& h3\": {\n      fontSize: theme.fontSizes.mdLg,\n      fontWeight: theme.fontWeights.bold,\n    },\n\n    \"& h4\": {\n      fontSize: theme.fontSizes.md,\n      fontWeight: theme.fontWeights.bold,\n    },\n\n    \"& h5\": {\n      fontSize: theme.fontSizes.sm,\n      fontWeight: theme.fontWeights.bold,\n    },\n\n    \"& h6\": {\n      fontSize: theme.fontSizes.twoSm,\n      fontWeight: theme.fontWeights.bold,\n    },\n  }\n}\n\nfunction addPxUnit(n: number): string {\n  return `${n}px`\n}\n"],"mappings":"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"}