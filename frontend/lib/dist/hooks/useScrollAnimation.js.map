{"version":3,"file":"useScrollAnimation.js","names":["useCallback","useLayoutEffect","useRef","squareStepper","current","to","sign","Math","step","sqrt","abs","next","min","max","from","stepper","index","i","useScrollAnimation","target","onEnd","isAnimating","animator","animate","start","arguments","length","undefined","Date","now","cancelAnimationFrame","requestAnimationFrame","toNumber","scrollHeight","offsetHeight","nextValue","scrollTop","handleCancelAnimation","addEventListener","passive","removeEventListener"],"sources":["../../src/hooks/useScrollAnimation.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useLayoutEffect, useRef } from \"react\"\n\n/**\n * Computes next step in a square-root based animation sequence. Step size is\n * square root of absolute difference between current and target values. Can be\n * used as a stepper function for other higher-level stepping functions.\n *\n * @param {number} current - Current value in animation sequence.\n * @param {number} to - Target value of animation sequence.\n * @returns {number} Next value in animation sequence.\n */\nfunction squareStepper(current: number, to: number): number {\n  const sign = Math.sign(to - current)\n  const step = Math.sqrt(Math.abs(to - current))\n  const next = current + step * sign\n\n  if (sign > 0) {\n    return Math.min(to, next)\n  }\n\n  return Math.max(to, next)\n}\n\n/**\n * Computes sequence of steps in animation by repeatedly applying a stepper\n * function.\n *\n * @param {number} from - Initial value in animation sequence.\n * @param {number} to - Target value of animation sequence.\n * @param {function} stepper - Function computing next value given current\n *                             and target values.\n * @param {number} index - Number of steps to compute.\n * @returns {number} Value at given index in animation sequence.\n */\nfunction step(\n  from: number,\n  to: number,\n  stepper: (x: number, y: number) => number,\n  index: number\n): number {\n  let next = from\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to)\n  }\n\n  return next\n}\n\n/**\n * Handles scroll animation for a given target HTMLElement. Uses a square-root\n * based stepping function to compute scroll animation. Stops animation if\n * target's scrollTop has reached scrollHeight or if user interacts with target\n * (mousedown or mousewheel). Can also be cancelled by caller.\n *\n * @export\n * @param {HTMLElement | null} target - HTML element to animate scroll of. If\n *                                      null, no animation is performed.\n * @param {() => void} onEnd - Callback when animation ends or is cancelled.\n * @param {boolean} isAnimating - Boolean to start or stop animation. If false,\n *                                no animation is performed.\n * @returns {void}\n */\nexport default function useScrollAnimation(\n  target: HTMLElement | null,\n  onEnd: () => void,\n  isAnimating: boolean\n): void {\n  const animator = useRef(0)\n\n  const animate = useCallback(\n    (from: number, index: number, start = Date.now()) => {\n      cancelAnimationFrame(animator.current)\n\n      animator.current = requestAnimationFrame(() => {\n        if (target) {\n          const toNumber = target.scrollHeight - target.offsetHeight\n          let nextValue = step(\n            from,\n            toNumber,\n            squareStepper,\n            (Date.now() - start) / 5\n          )\n\n          if (Math.abs(toNumber - nextValue) < 1.5) {\n            nextValue = toNumber\n          }\n\n          target.scrollTop = nextValue\n\n          if (toNumber === nextValue) {\n            onEnd()\n          } else {\n            animate(from, index + 1, start)\n          }\n        }\n      })\n    },\n    [animator, onEnd, target]\n  )\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator.current)\n    onEnd()\n  }, [onEnd])\n\n  useLayoutEffect(() => {\n    if (!target || !isAnimating) {\n      return\n    }\n    animate(target.scrollTop, 1)\n\n    if (target) {\n      target.addEventListener(\"pointerdown\", handleCancelAnimation, {\n        passive: true,\n      })\n      target.addEventListener(\"wheel\", handleCancelAnimation, {\n        passive: true,\n      })\n\n      return () => {\n        target.removeEventListener(\"pointerdown\", handleCancelAnimation)\n        target.removeEventListener(\"wheel\", handleCancelAnimation)\n        cancelAnimationFrame(animator.current)\n      }\n    }\n\n    return () => cancelAnimationFrame(animator.current)\n  }, [animate, animator, handleCancelAnimation, target, isAnimating])\n}\n"],"mappings":"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"}