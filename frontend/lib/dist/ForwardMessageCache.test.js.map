{"version":3,"file":"ForwardMessageCache.test.js","names":["ForwardMsg","ForwardMsgCache","createCache","mockFetchCachedForwardMsg","jest","fn","cache","buildComponentURL","buildMediaURL","buildFileUploadURL","buildAppPageURL","uploadFileUploaderFile","deleteFileAtURL","fetchCachedForwardMsg","getCachedMessage","hash","createForwardMsg","cacheable","arguments","length","undefined","fromObject","metadata","deltaId","createRefMsg","msg","refHash","test","msg1","encodedMsg1","encode","finish","processMessagePayload","expect","toEqual","msg2","encodedMsg2","toBeUndefined","msg3","deltaPath","ref","encodedRefMsg","unreferenced","not","toBe","_getCachedMessage","_getCachedMessage$del","_getCachedMessage$del2","_getCachedMessage2","_getCachedMessage2$me","delta","newElement","text","body","encodedMsg","refMsg","mockResolvedValue","Uint8Array","resolves","mockRejectedValue","Error","rejects","toThrow","maybeCacheMessage","incrementRunCount"],"sources":["../src/ForwardMessageCache.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ForwardMsg } from \"./proto\"\nimport { ForwardMsgCache } from \"./ForwardMessageCache\"\n\ninterface MockCache {\n  cache: ForwardMsgCache\n  getCachedMessage: (hash: string) => ForwardMsg | undefined\n  mockFetchCachedForwardMsg: jest.Mock\n}\n\nfunction createCache(): MockCache {\n  const mockFetchCachedForwardMsg = jest.fn()\n\n  const cache = new ForwardMsgCache({\n    buildComponentURL: jest.fn(),\n    buildMediaURL: jest.fn(),\n    buildFileUploadURL: jest.fn(),\n    buildAppPageURL: jest.fn(),\n    uploadFileUploaderFile: jest.fn(),\n    deleteFileAtURL: jest.fn(),\n    fetchCachedForwardMsg: mockFetchCachedForwardMsg,\n  })\n\n  const getCachedMessage = (hash: string): ForwardMsg | undefined =>\n    // @ts-expect-error (accessing internals for testing)\n    cache.getCachedMessage(hash, false)\n\n  return { cache, getCachedMessage, mockFetchCachedForwardMsg }\n}\n\n/**\n * Create a mock ForwardMsg with the given hash\n */\nfunction createForwardMsg(hash: string, cacheable = true): ForwardMsg {\n  return ForwardMsg.fromObject({\n    hash,\n    metadata: { cacheable, deltaId: 0 },\n  })\n}\n\n/**\n * Create a mock reference ForwardMsg\n */\nfunction createRefMsg(msg: ForwardMsg): ForwardMsg {\n  return ForwardMsg.fromObject({\n    hash: \"reference\",\n    metadata: msg.metadata,\n    refHash: msg.hash,\n  })\n}\n\ntest(\"caches messages correctly\", async () => {\n  const { cache, getCachedMessage } = createCache()\n\n  // Cacheable messages should be cached\n  const msg1 = createForwardMsg(\"Cacheable\", true)\n  const encodedMsg1 = ForwardMsg.encode(msg1).finish()\n  await cache.processMessagePayload(msg1, encodedMsg1)\n  expect(getCachedMessage(\"Cacheable\")).toEqual(msg1)\n\n  // Uncacheable ones shouldn't!\n  const msg2 = createForwardMsg(\"Uncacheable\", false)\n  const encodedMsg2 = ForwardMsg.encode(msg2).finish()\n  await cache.processMessagePayload(msg2, encodedMsg2)\n  expect(getCachedMessage(\"Uncacheable\")).toBeUndefined()\n\n  // Ref messages should never be cached\n  const msg3 = createForwardMsg(\"Cacheable\", true)\n  if (msg3.metadata) {\n    msg3.metadata.deltaPath = [2]\n  }\n  const ref = createRefMsg(msg3)\n  const encodedRefMsg = ForwardMsg.encode(ref).finish()\n  const unreferenced = await cache.processMessagePayload(ref, encodedRefMsg)\n  expect(getCachedMessage(ref.hash)).toBeUndefined()\n  expect(unreferenced).toEqual(msg3)\n\n  // Test that our uncached messages are copies\n  expect(unreferenced).not.toBe(msg3)\n})\n\ntest(\"caches messages as a deep copy\", async () => {\n  const { cache, getCachedMessage } = createCache()\n\n  const msg = ForwardMsg.fromObject({\n    hash: \"Cacheable\",\n    delta: { newElement: { text: { body: \"test\" } } },\n    metadata: { cacheable: true, deltaPath: [2] },\n  })\n\n  const encodedMsg = ForwardMsg.encode(msg).finish()\n\n  await cache.processMessagePayload(msg, encodedMsg)\n\n  // Check if message is correctly cached\n  expect(getCachedMessage(\"Cacheable\")).toEqual(msg)\n\n  // Modify specific values inside the message structure:\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  msg.delta!.newElement!.text.body = \"foo\"\n  // eslint-disable-next-line  @typescript-eslint/no-non-null-assertion\n  msg.metadata!.deltaPath = [10]\n\n  // Check that it does not impact the cached message\n  expect(getCachedMessage(\"Cacheable\")?.delta?.newElement?.text.body).toEqual(\n    \"test\"\n  )\n  expect(getCachedMessage(\"Cacheable\")?.metadata?.deltaPath).toEqual([2])\n  // It should not be equal to the changed message\n  expect(getCachedMessage(\"Cacheable\")).not.toEqual(msg)\n})\n\ntest(\"fetches uncached messages from server\", async () => {\n  const msg = createForwardMsg(\"Cacheable\", true)\n  const refMsg = createRefMsg(msg)\n  const encodedRefMsg = ForwardMsg.encode(refMsg).finish()\n\n  const { cache, getCachedMessage, mockFetchCachedForwardMsg } = createCache()\n  mockFetchCachedForwardMsg.mockResolvedValue(\n    new Uint8Array(ForwardMsg.encode(msg).finish())\n  )\n\n  // processMessagePayload on a reference message whose\n  // original version does *not* exist in our local cache. We\n  // should hit the server's /message endpoint to fetch it.\n  await expect(\n    cache.processMessagePayload(refMsg, encodedRefMsg)\n  ).resolves.toEqual(msg)\n\n  // The fetched message should now be cached\n  expect(getCachedMessage(\"Cacheable\")).toEqual(msg)\n})\n\ntest(\"errors when uncached message is not on server\", async () => {\n  const msg = createForwardMsg(\"Cacheable\", true)\n  const refMsg = createRefMsg(msg)\n  const encodedRefMsg = ForwardMsg.encode(refMsg).finish()\n\n  const { cache, mockFetchCachedForwardMsg } = createCache()\n  mockFetchCachedForwardMsg.mockRejectedValue(new Error(\"404\"))\n\n  await expect(\n    cache.processMessagePayload(refMsg, encodedRefMsg)\n  ).rejects.toThrow()\n})\n\ntest(\"removes expired messages\", () => {\n  const { cache, getCachedMessage } = createCache()\n  const msg = createForwardMsg(\"Cacheable\", true)\n  const encodedMsg = ForwardMsg.encode(msg).finish()\n\n  // Add the message to the cache\n  // @ts-expect-error accessing into internals for testing\n  cache.maybeCacheMessage(msg, encodedMsg)\n  expect(getCachedMessage(msg.hash)).toEqual(msg)\n\n  // Increment our age. Our message should still exist.\n  cache.incrementRunCount(1)\n  expect(getCachedMessage(msg.hash)).toEqual(msg)\n\n  // Bump our age over the expiration threshold.\n  cache.incrementRunCount(1)\n  expect(getCachedMessage(msg.hash)).toBeUndefined()\n})\n"],"mappings":"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"}