{"version":3,"file":"Audio.test.js","names":["React","screen","render","Audio","AudioProto","mockEndpoints","jsx","_jsx","describe","buildMediaURL","jest","fn","mockReturnValue","mockSetElementState","mockGetElementState","elementMgrMock","setElementState","getElementState","sendRerunBackMsg","formsDataChanged","getProps","elementProps","arguments","length","undefined","element","create","startTime","url","endpoints","width","elementMgr","it","audioElement","getByTestId","expect","toBeInTheDocument","toHaveClass","toHaveAttribute","toHaveBeenCalledWith","beforeEach","clearAllMocks","mockReturnValueOnce","props","autoplay","id","not","toHaveBeenCalledTimes","toHaveBeenCalled","rerender","currentTime","toBe","newProps"],"sources":["../../../../src/components/elements/Audio/Audio.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { Audio as AudioProto } from \"@streamlit/lib/src/proto\"\nimport { mockEndpoints } from \"@streamlit/lib/src/mocks/mocks\"\nimport { WidgetStateManager as ElementStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\nimport Audio, { AudioProps } from \"./Audio\"\n\ndescribe(\"Audio Element\", () => {\n  const buildMediaURL = jest.fn().mockReturnValue(\"https://mock.media.url\")\n\n  const mockSetElementState = jest.fn()\n  const mockGetElementState = jest.fn()\n  const elementMgrMock = {\n    setElementState: mockSetElementState,\n    getElementState: mockGetElementState,\n    sendRerunBackMsg: jest.fn(),\n    formsDataChanged: jest.fn(),\n  }\n\n  const getProps = (elementProps: Partial<AudioProto> = {}): AudioProps => ({\n    element: AudioProto.create({\n      startTime: 0,\n      url: \"/media/mockAudioFile.wav\",\n      ...elementProps,\n    }),\n    endpoints: mockEndpoints({ buildMediaURL: buildMediaURL }),\n    width: 0,\n    elementMgr: elementMgrMock as unknown as ElementStateManager,\n  })\n\n  it(\"renders without crashing\", () => {\n    render(<Audio {...getProps()} />)\n    const audioElement = screen.getByTestId(\"stAudio\")\n    expect(audioElement).toBeInTheDocument()\n    expect(audioElement).toHaveClass(\"stAudio\")\n  })\n\n  it(\"has controls\", () => {\n    render(<Audio {...getProps()} />)\n    expect(screen.getByTestId(\"stAudio\")).toHaveAttribute(\"controls\")\n  })\n\n  it(\"creates its `src` attribute using buildMediaURL\", () => {\n    render(<Audio {...getProps()} />)\n    const audioElement = screen.getByTestId(\"stAudio\")\n    expect(buildMediaURL).toHaveBeenCalledWith(\"/media/mockAudioFile.wav\")\n    expect(audioElement).toHaveAttribute(\"src\", \"https://mock.media.url\")\n  })\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n    mockGetElementState.mockReturnValue(false) // By default, assume autoplay is not prevented\n  })\n\n  it(\"does not autoplay if preventAutoplay is set\", () => {\n    mockGetElementState.mockReturnValueOnce(true) // Autoplay should be prevented\n    const props = getProps({ autoplay: true, id: \"uniqueAudioId\" })\n    render(<Audio {...props} />)\n    const audioElement = screen.getByTestId(\"stAudio\")\n    expect(audioElement).not.toHaveAttribute(\"autoPlay\")\n  })\n\n  it(\"autoplays if preventAutoplay is not set and autoplay is true\", () => {\n    mockGetElementState.mockReturnValueOnce(false) // Autoplay is not prevented\n    const props = getProps({ autoplay: true, id: \"uniqueAudioId\" })\n    render(<Audio {...props} />)\n    const audioElement = screen.getByTestId(\"stAudio\")\n    expect(audioElement).toHaveAttribute(\"autoPlay\")\n  })\n\n  it(\"calls setElementState to prevent future autoplay on first autoplay\", () => {\n    mockGetElementState.mockReturnValueOnce(false) // Autoplay is not prevented initially\n    const props = getProps({ autoplay: true, id: \"uniqueAudioId\" })\n    render(<Audio {...props} />)\n    expect(mockSetElementState).toHaveBeenCalledTimes(1)\n    expect(mockSetElementState).toHaveBeenCalledWith(\n      props.element.id,\n      \"preventAutoplay\",\n      true\n    )\n  })\n\n  // Test to ensure that setElementState is not called again if autoplay is already prevented\n  it(\"does not call setElementState again if autoplay is already prevented\", () => {\n    mockGetElementState.mockReturnValueOnce(true) // Autoplay is already prevented\n    const props = getProps({ autoplay: true, id: \"uniqueAudioId\" })\n    render(<Audio {...props} />)\n    expect(mockSetElementState).not.toHaveBeenCalled()\n  })\n\n  it(\"updates time when the prop is changed\", () => {\n    const props = getProps({\n      url: \"http://localhost:80/media/sound.wav\",\n    })\n\n    const { rerender } = render(<Audio {...props} />)\n    let audioElement = screen.getByTestId(\"stAudio\") as HTMLAudioElement\n\n    expect(audioElement.currentTime).toBe(0)\n\n    const newProps = getProps({ startTime: 10 })\n    rerender(<Audio {...newProps} />)\n\n    audioElement = screen.getByTestId(\"stAudio\") as HTMLAudioElement\n\n    expect(audioElement.currentTime).toBe(10)\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,2BAA2B;AAClC,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,MAAM;AACf,SAASC,KAAK,IAAIC,UAAU;AAC5B,SAASC,aAAa;AAGtB,OAAOF,KAAK;AAA+B,SAAAG,GAAA,IAAAC,IAAA;AAE3CC,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC9B,MAAMC,aAAa,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,eAAe,CAAC,wBAAwB,CAAC;EAEzE,MAAMC,mBAAmB,GAAGH,IAAI,CAACC,EAAE,CAAC,CAAC;EACrC,MAAMG,mBAAmB,GAAGJ,IAAI,CAACC,EAAE,CAAC,CAAC;EACrC,MAAMI,cAAc,GAAG;IACrBC,eAAe,EAAEH,mBAAmB;IACpCI,eAAe,EAAEH,mBAAmB;IACpCI,gBAAgB,EAAER,IAAI,CAACC,EAAE,CAAC,CAAC;IAC3BQ,gBAAgB,EAAET,IAAI,CAACC,EAAE,CAAC;EAC5B,CAAC;EAED,MAAMS,QAAQ,GAAG,SAAAA,CAAA;IAAA,IAACC,YAAiC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,OAAkB;MACxEG,OAAO,EAAErB,UAAU,CAACsB,MAAM,CAAC;QACzBC,SAAS,EAAE,CAAC;QACZC,GAAG,EAAE,0BAA0B;QAC/B,GAAGP;MACL,CAAC,CAAC;MACFQ,SAAS,EAAExB,aAAa,CAAC;QAAEI,aAAa,EAAEA;MAAc,CAAC,CAAC;MAC1DqB,KAAK,EAAE,CAAC;MACRC,UAAU,EAAEhB;IACd,CAAC;EAAA,CAAC;EAEFiB,EAAE,CAAC,0BAA0B,EAAE,MAAM;IACnC9B,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKiB,QAAQ,CAAC;IAAC,CAAG,CAAC,CAAC;IACjC,MAAMa,YAAY,GAAGhC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAC;IAClDC,MAAM,CAACF,YAAY,CAAC,CAACG,iBAAiB,CAAC,CAAC;IACxCD,MAAM,CAACF,YAAY,CAAC,CAACI,WAAW,CAAC,SAAS,CAAC;EAC7C,CAAC,CAAC;EAEFL,EAAE,CAAC,cAAc,EAAE,MAAM;IACvB9B,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKiB,QAAQ,CAAC;IAAC,CAAG,CAAC,CAAC;IACjCe,MAAM,CAAClC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAC,CAAC,CAACI,eAAe,CAAC,UAAU,CAAC;EACnE,CAAC,CAAC;EAEFN,EAAE,CAAC,iDAAiD,EAAE,MAAM;IAC1D9B,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKiB,QAAQ,CAAC;IAAC,CAAG,CAAC,CAAC;IACjC,MAAMa,YAAY,GAAGhC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAC;IAClDC,MAAM,CAAC1B,aAAa,CAAC,CAAC8B,oBAAoB,CAAC,0BAA0B,CAAC;IACtEJ,MAAM,CAACF,YAAY,CAAC,CAACK,eAAe,CAAC,KAAK,EAAE,wBAAwB,CAAC;EACvE,CAAC,CAAC;EAEFE,UAAU,CAAC,MAAM;IACf9B,IAAI,CAAC+B,aAAa,CAAC,CAAC;IACpB3B,mBAAmB,CAACF,eAAe,CAAC,KAAK,CAAC,EAAC;EAC7C,CAAC,CAAC;EAEFoB,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtDlB,mBAAmB,CAAC4B,mBAAmB,CAAC,IAAI,CAAC,EAAC;IAC9C,MAAMC,KAAK,GAAGvB,QAAQ,CAAC;MAAEwB,QAAQ,EAAE,IAAI;MAAEC,EAAE,EAAE;IAAgB,CAAC,CAAC;IAC/D3C,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKwC;IAAK,CAAG,CAAC,CAAC;IAC5B,MAAMV,YAAY,GAAGhC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAC;IAClDC,MAAM,CAACF,YAAY,CAAC,CAACa,GAAG,CAACR,eAAe,CAAC,UAAU,CAAC;EACtD,CAAC,CAAC;EAEFN,EAAE,CAAC,8DAA8D,EAAE,MAAM;IACvElB,mBAAmB,CAAC4B,mBAAmB,CAAC,KAAK,CAAC,EAAC;IAC/C,MAAMC,KAAK,GAAGvB,QAAQ,CAAC;MAAEwB,QAAQ,EAAE,IAAI;MAAEC,EAAE,EAAE;IAAgB,CAAC,CAAC;IAC/D3C,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKwC;IAAK,CAAG,CAAC,CAAC;IAC5B,MAAMV,YAAY,GAAGhC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAC;IAClDC,MAAM,CAACF,YAAY,CAAC,CAACK,eAAe,CAAC,UAAU,CAAC;EAClD,CAAC,CAAC;EAEFN,EAAE,CAAC,oEAAoE,EAAE,MAAM;IAC7ElB,mBAAmB,CAAC4B,mBAAmB,CAAC,KAAK,CAAC,EAAC;IAC/C,MAAMC,KAAK,GAAGvB,QAAQ,CAAC;MAAEwB,QAAQ,EAAE,IAAI;MAAEC,EAAE,EAAE;IAAgB,CAAC,CAAC;IAC/D3C,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKwC;IAAK,CAAG,CAAC,CAAC;IAC5BR,MAAM,CAACtB,mBAAmB,CAAC,CAACkC,qBAAqB,CAAC,CAAC,CAAC;IACpDZ,MAAM,CAACtB,mBAAmB,CAAC,CAAC0B,oBAAoB,CAC9CI,KAAK,CAAClB,OAAO,CAACoB,EAAE,EAChB,iBAAiB,EACjB,IACF,CAAC;EACH,CAAC,CAAC;;EAEF;EACAb,EAAE,CAAC,sEAAsE,EAAE,MAAM;IAC/ElB,mBAAmB,CAAC4B,mBAAmB,CAAC,IAAI,CAAC,EAAC;IAC9C,MAAMC,KAAK,GAAGvB,QAAQ,CAAC;MAAEwB,QAAQ,EAAE,IAAI;MAAEC,EAAE,EAAE;IAAgB,CAAC,CAAC;IAC/D3C,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKwC;IAAK,CAAG,CAAC,CAAC;IAC5BR,MAAM,CAACtB,mBAAmB,CAAC,CAACiC,GAAG,CAACE,gBAAgB,CAAC,CAAC;EACpD,CAAC,CAAC;EAEFhB,EAAE,CAAC,uCAAuC,EAAE,MAAM;IAChD,MAAMW,KAAK,GAAGvB,QAAQ,CAAC;MACrBQ,GAAG,EAAE;IACP,CAAC,CAAC;IAEF,MAAM;MAAEqB;IAAS,CAAC,GAAG/C,MAAM,eAACK,IAAA,CAACJ,KAAK;MAAA,GAAKwC;IAAK,CAAG,CAAC,CAAC;IACjD,IAAIV,YAAY,GAAGhC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAqB;IAEpEC,MAAM,CAACF,YAAY,CAACiB,WAAW,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAExC,MAAMC,QAAQ,GAAGhC,QAAQ,CAAC;MAAEO,SAAS,EAAE;IAAG,CAAC,CAAC;IAC5CsB,QAAQ,eAAC1C,IAAA,CAACJ,KAAK;MAAA,GAAKiD;IAAQ,CAAG,CAAC,CAAC;IAEjCnB,YAAY,GAAGhC,MAAM,CAACiC,WAAW,CAAC,SAAS,CAAqB;IAEhEC,MAAM,CAACF,YAAY,CAACiB,WAAW,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EAC3C,CAAC,CAAC;AACJ,CAAC,CAAC"}