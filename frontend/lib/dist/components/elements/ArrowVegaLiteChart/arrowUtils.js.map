{"version":3,"file":"arrowUtils.js","names":["isNullOrUndefined","IndexTypeName","Quiver","MagicFields","DATAFRAME_INDEX","SUPPORTED_INDEX_TYPES","Set","DatetimeIndex","Float64Index","Int64Index","RangeIndex","UInt64Index","getInlineData","el","dataProto","data","numRows","getDataArray","getDataArrays","datasets","getDataSets","datasetArrays","name","dataset","Object","entries","length","forEach","x","hasName","startIndex","arguments","undefined","isEmpty","dataArr","dataRows","rows","dataColumns","cols","dimensions","indexType","getTypeName","types","index","hasSupportedIndex","has","rowIndex","row","indexValue","getIndexValue","Number","colIndex","dataValue","getDataValue","dataType","typeName","Date","isFinite","startsWith","offset","getTimezoneOffset","columns","valueOf","push","dataIsAnAppendOfPrev","prevData","prevNumRows","prevNumCols","numCols","c","r"],"sources":["../../../../src/components/elements/ArrowVegaLiteChart/arrowUtils.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNullOrUndefined } from \"@streamlit/lib/src/util/utils\"\nimport { IndexTypeName, Quiver } from \"@streamlit/lib/src/dataframes/Quiver\"\n\nconst MagicFields = {\n  DATAFRAME_INDEX: \"(index)\",\n}\n\n/** Types of dataframe-indices that are supported as x axis. */\nconst SUPPORTED_INDEX_TYPES = new Set([\n  IndexTypeName.DatetimeIndex,\n  IndexTypeName.Float64Index,\n  IndexTypeName.Int64Index,\n  IndexTypeName.RangeIndex,\n  IndexTypeName.UInt64Index,\n])\n\n/** All of the data that makes up a VegaLite chart. */\nexport interface VegaLiteChartElement {\n  /**\n   * The dataframe that will be used as the chart's main data source, if\n   * specified using Vega-Lite's inline API.\n   *\n   * This is mutually exclusive with WrappedNamedDataset - if `data` is non-null,\n   * `datasets` will not be populated; if `datasets` is populated, then `data`\n   * will be null.\n   */\n  data: Quiver | null\n\n  /** The a JSON-formatted string with the Vega-Lite spec. */\n  spec: string\n\n  /**\n   * Dataframes associated with this chart using Vega-Lite's datasets API,\n   * if any.\n   */\n  datasets: WrappedNamedDataset[]\n\n  /** If True, will overwrite the chart width spec to fit to container. */\n  useContainerWidth: boolean\n\n  /** override the properties with a theme. Currently, only \"streamlit\" or None are accepted. */\n  vegaLiteTheme: string\n\n  /** The widget ID. Only set if selections are activated. */\n  id: string\n\n  /** Named selection parameters that are activated to trigger reruns. */\n  selectionMode: string[]\n\n  /** The form ID if the chart has activated selections and is used within a form. */\n  formId: string\n}\n\n/** A mapping of `ArrowNamedDataSet.proto`. */\nexport interface WrappedNamedDataset {\n  /** The dataset's optional name. */\n  name: string | null\n\n  /** True if the name field (above) was manually set. */\n  hasName: boolean\n\n  /** The data itself, wrapped in a Quiver object. */\n  data: Quiver\n}\n\nexport function getInlineData(\n  el: VegaLiteChartElement\n): { [field: string]: any }[] | null {\n  const dataProto = el.data\n\n  if (!dataProto || dataProto.data.numRows === 0) {\n    return null\n  }\n\n  return getDataArray(dataProto)\n}\n\nexport function getDataArrays(\n  el: VegaLiteChartElement\n): { [dataset: string]: any[] } | null {\n  const datasets = getDataSets(el)\n  if (isNullOrUndefined(datasets)) {\n    return null\n  }\n\n  const datasetArrays: { [dataset: string]: any[] } = {}\n\n  for (const [name, dataset] of Object.entries(datasets)) {\n    datasetArrays[name] = getDataArray(dataset)\n  }\n\n  return datasetArrays\n}\n\nexport function getDataSets(\n  el: VegaLiteChartElement\n): { [dataset: string]: Quiver } | null {\n  if (el.datasets?.length === 0) {\n    return null\n  }\n\n  const datasets: { [dataset: string]: Quiver } = {}\n\n  el.datasets.forEach((x: WrappedNamedDataset) => {\n    if (!x) {\n      return\n    }\n    const name = x.hasName ? x.name : null\n    datasets[name as string] = x.data\n  })\n\n  return datasets\n}\n\n/**\n * Retrieves an array of data from Quiver starting from a specified index.\n * Converts data values to a format compatible with VegaLite visualization.\n *\n * @param {Quiver} dataProto - The Quiver data object to extract data from.\n * @param {number} [startIndex=0] - The starting index for data extraction.\n * @returns {Array.<{ [field: string]: any }>} An array of data objects for visualization.\n */\nexport function getDataArray(\n  dataProto: Quiver,\n  startIndex = 0\n): { [field: string]: any }[] {\n  if (dataProto.isEmpty()) {\n    return []\n  }\n\n  const dataArr = []\n  const { dataRows: rows, dataColumns: cols } = dataProto.dimensions\n\n  const indexType = Quiver.getTypeName(dataProto.types.index[0])\n  const hasSupportedIndex = SUPPORTED_INDEX_TYPES.has(\n    indexType as IndexTypeName\n  )\n\n  for (let rowIndex = startIndex; rowIndex < rows; rowIndex++) {\n    const row: { [field: string]: any } = {}\n\n    if (hasSupportedIndex) {\n      const indexValue = dataProto.getIndexValue(rowIndex, 0)\n      // VegaLite can't handle BigInts, so they have to be converted to Numbers first\n      row[MagicFields.DATAFRAME_INDEX] =\n        typeof indexValue === \"bigint\" ? Number(indexValue) : indexValue\n    }\n\n    for (let colIndex = 0; colIndex < cols; colIndex++) {\n      const dataValue = dataProto.getDataValue(rowIndex, colIndex)\n      const dataType = dataProto.types.data[colIndex]\n      const typeName = Quiver.getTypeName(dataType)\n\n      if (\n        typeName !== \"datetimetz\" &&\n        (dataValue instanceof Date || Number.isFinite(dataValue)) &&\n        (typeName.startsWith(\"datetime\") || typeName === \"date\")\n      ) {\n        // For dates that do not contain timezone information.\n        // Vega JS assumes dates in the local timezone, so we need to convert\n        // UTC date to be the same date in the local timezone.\n        const offset = new Date(dataValue).getTimezoneOffset() * 60 * 1000 // minutes to milliseconds\n        row[dataProto.columns[0][colIndex]] = dataValue.valueOf() + offset\n      } else if (typeof dataValue === \"bigint\") {\n        row[dataProto.columns[0][colIndex]] = Number(dataValue)\n      } else {\n        row[dataProto.columns[0][colIndex]] = dataValue\n      }\n    }\n    dataArr.push(row)\n  }\n\n  return dataArr\n}\n\n/**\n * Checks if data looks like it's just prevData plus some appended rows.\n */\nexport function dataIsAnAppendOfPrev(\n  prevData: Quiver,\n  prevNumRows: number,\n  prevNumCols: number,\n  data: Quiver,\n  numRows: number,\n  numCols: number\n): boolean {\n  // Check whether dataframes have the same shape.\n\n  // not an append\n  if (prevNumCols !== numCols) {\n    return false\n  }\n\n  // Data can be updated, but still have the same number of rows.\n  // We consider the case an append only when the number of rows has increased\n  if (prevNumRows >= numRows) {\n    return false\n  }\n\n  // if no previous data, render from scratch\n  if (prevNumRows === 0) {\n    return false\n  }\n\n  const c = numCols - 1\n  const r = prevNumRows - 1\n\n  // Check if the new dataframe looks like it's a superset of the old one.\n  // (this is a very light check, and not guaranteed to be right!)\n  if (\n    prevData.getDataValue(0, c) !== data.getDataValue(0, c) ||\n    prevData.getDataValue(r, c) !== data.getDataValue(r, c)\n  ) {\n    return false\n  }\n\n  return true\n}\n"],"mappings":"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"}