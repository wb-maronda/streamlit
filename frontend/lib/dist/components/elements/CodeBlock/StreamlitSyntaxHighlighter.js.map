{"version":3,"file":"StreamlitSyntaxHighlighter.js","names":["React","useCallback","createElement","Prism","SyntaxHighlighter","CopyButton","StyledCodeBlock","StyledCopyButtonContainer","StyledPre","jsx","_jsx","jsxs","_jsxs","StreamlitSyntaxHighlighter","_ref","language","showLineNumbers","wrapLines","children","renderer","_ref2","rows","stylesheet","useInlineStyles","map","row","index","lineNumberElement","shift","properties","className","tagName","type","node","key","PreTag","customStyle","backgroundColor","style","lineNumberStyle","wrapLongLines","undefined","trim","text"],"sources":["../../../../src/components/elements/CodeBlock/StreamlitSyntaxHighlighter.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useCallback } from \"react\"\n\nimport {\n  createElement,\n  Prism as SyntaxHighlighter,\n} from \"react-syntax-highlighter\"\n\nimport CopyButton from \"./CopyButton\"\nimport {\n  StyledCodeBlock,\n  StyledCopyButtonContainer,\n  StyledPre,\n} from \"./styled-components\"\n\nexport interface StreamlitSyntaxHighlighterProps {\n  children: string | string[]\n  language?: string\n  showLineNumbers?: boolean\n  wrapLines?: boolean\n}\n\nexport default function StreamlitSyntaxHighlighter({\n  language,\n  showLineNumbers,\n  wrapLines,\n  children,\n}: Readonly<StreamlitSyntaxHighlighterProps>): ReactElement {\n  const renderer = useCallback(\n    ({ rows, stylesheet, useInlineStyles }: any): any =>\n      rows.map((row: any, index: any): any => {\n        const children = row.children\n\n        if (children) {\n          const lineNumberElement = children.shift()\n\n          if (lineNumberElement) {\n            row.children = [\n              lineNumberElement,\n              {\n                children,\n                properties: { className: [] },\n                tagName: \"span\",\n                type: \"element\",\n              },\n            ]\n          }\n        }\n\n        return createElement({\n          node: row,\n          stylesheet,\n          useInlineStyles,\n          key: index,\n        })\n      }),\n    []\n  )\n\n  return (\n    <StyledCodeBlock className=\"stCode\" data-testid=\"stCode\">\n      <StyledPre>\n        <SyntaxHighlighter\n          language={language}\n          PreTag=\"div\"\n          customStyle={{ backgroundColor: \"transparent\" }}\n          // We set an empty style object here because we have our own CSS styling that\n          // reacts on our theme.\n          style={{}}\n          lineNumberStyle={{}}\n          showLineNumbers={showLineNumbers}\n          wrapLongLines={wrapLines}\n          // Fix bug with wrapLongLines+showLineNumbers (see link below) by\n          // using a renderer that wraps individual lines of code in their\n          // own spans.\n          // https://github.com/react-syntax-highlighter/react-syntax-highlighter/issues/376\n          renderer={showLineNumbers && wrapLines ? renderer : undefined}\n        >\n          {children}\n        </SyntaxHighlighter>\n      </StyledPre>\n      {typeof children === \"string\" && children.trim() !== \"\" && (\n        <StyledCopyButtonContainer>\n          <CopyButton text={children} />\n        </StyledCopyButtonContainer>\n      )}\n    </StyledCodeBlock>\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAkBC,WAAW,QAAQ,OAAO;AAExD,SACEC,aAAa,EACbC,KAAK,IAAIC,iBAAiB,QACrB,0BAA0B;AAEjC,OAAOC,UAAU;AACjB,SACEC,eAAe,EACfC,yBAAyB,EACzBC,SAAS;AACiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAS5B,eAAe,SAASC,0BAA0BA,CAAAC,IAAA,EAKU;EAAA,IALT;IACjDC,QAAQ;IACRC,eAAe;IACfC,SAAS;IACTC;EACyC,CAAC,GAAAJ,IAAA;EAC1C,MAAMK,QAAQ,GAAGlB,WAAW,CAC1BmB,KAAA;IAAA,IAAC;MAAEC,IAAI;MAAEC,UAAU;MAAEC;IAAqB,CAAC,GAAAH,KAAA;IAAA,OACzCC,IAAI,CAACG,GAAG,CAAC,CAACC,GAAQ,EAAEC,KAAU,KAAU;MACtC,MAAMR,QAAQ,GAAGO,GAAG,CAACP,QAAQ;MAE7B,IAAIA,QAAQ,EAAE;QACZ,MAAMS,iBAAiB,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC;QAE1C,IAAID,iBAAiB,EAAE;UACrBF,GAAG,CAACP,QAAQ,GAAG,CACbS,iBAAiB,EACjB;YACET,QAAQ;YACRW,UAAU,EAAE;cAAEC,SAAS,EAAE;YAAG,CAAC;YAC7BC,OAAO,EAAE,MAAM;YACfC,IAAI,EAAE;UACR,CAAC,CACF;QACH;MACF;MAEA,OAAO9B,aAAa,CAAC;QACnB+B,IAAI,EAAER,GAAG;QACTH,UAAU;QACVC,eAAe;QACfW,GAAG,EAAER;MACP,CAAC,CAAC;IACJ,CAAC,CAAC;EAAA,GACJ,EACF,CAAC;EAED,oBACEd,KAAA,CAACN,eAAe;IAACwB,SAAS,EAAC,QAAQ;IAAC,eAAY,QAAQ;IAAAZ,QAAA,gBACtDR,IAAA,CAACF,SAAS;MAAAU,QAAA,eACRR,IAAA,CAACN,iBAAiB;QAChBW,QAAQ,EAAEA,QAAS;QACnBoB,MAAM,EAAC,KAAK;QACZC,WAAW,EAAE;UAAEC,eAAe,EAAE;QAAc;QAC9C;QACA;QAAA;QACAC,KAAK,EAAE,CAAC,CAAE;QACVC,eAAe,EAAE,CAAC,CAAE;QACpBvB,eAAe,EAAEA,eAAgB;QACjCwB,aAAa,EAAEvB;QACf;QACA;QACA;QACA;QAAA;QACAE,QAAQ,EAAEH,eAAe,IAAIC,SAAS,GAAGE,QAAQ,GAAGsB,SAAU;QAAAvB,QAAA,EAE7DA;MAAQ,CACQ;IAAC,CACX,CAAC,EACX,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACwB,IAAI,CAAC,CAAC,KAAK,EAAE,iBACrDhC,IAAA,CAACH,yBAAyB;MAAAW,QAAA,eACxBR,IAAA,CAACL,UAAU;QAACsC,IAAI,EAAEzB;MAAS,CAAE;IAAC,CACL,CAC5B;EAAA,CACc,CAAC;AAEtB"}