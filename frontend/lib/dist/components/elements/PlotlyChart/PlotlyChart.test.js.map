{"version":3,"file":"PlotlyChart.test.js","names":["parseLassoPath","parseBoxSelection","sendEmptySelection","handleSelection","applyTheming","WidgetStateManager","applyStreamlitTheme","layoutWithThemeDefaults","mockTheme","jest","mock","replaceTemporaryColors","fn","mockReturnValue","describe","it","pathData","result","expect","toEqual","x","y","selection","x0","y0","x1","y1","getWidgetMgr","sendRerunBackMsg","formsDataChanged","widgetMgr","spyOn","id","undefined","setStringValue","toHaveBeenCalledTimes","plotlyProto","fromUi","mockFragmentId","proto","selectionMode","not","toHaveBeenCalled","event","points","selections","pointIndex","data","legendgroup","pointIndices","toHaveBeenCalledWith","type","xref","yref","path","boxEvent","lassoEventAndBoxEvent","toHaveBeenLastCalledWith","mockPlotlyFigure","layout","frames","chartTheme","emotion"],"sources":["../../../../src/components/elements/PlotlyChart/PlotlyChart.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport \"@testing-library/jest-dom\"\n\nimport {\n  parseLassoPath,\n  parseBoxSelection,\n  sendEmptySelection,\n  handleSelection,\n  applyTheming,\n} from \"./PlotlyChart\"\nimport { PlotlyChart as PlotlyChartProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { applyStreamlitTheme, layoutWithThemeDefaults } from \"./CustomTheme\"\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\n\njest.mock(\"./CustomTheme\", () => ({\n  replaceTemporaryColors: jest.fn().mockReturnValue(\"{}\"),\n  applyStreamlitTheme: jest.fn(),\n  layoutWithThemeDefaults: jest.fn().mockReturnValue({}),\n}))\n\n/**\n * PlotlyChart.test.tsx does not contain any React-testing-library tests because Plotly doesn't support it\n * https://github.com/plotly/react-plotly.js/issues/176\n */\n\ndescribe(\"parsePlotlySelections\", () => {\n  describe(\"parseLassoPath\", () => {\n    it(\"parses a simple lasso path string into x and y coordinates\", () => {\n      const pathData = \"M100,150L200,250L300,350Z\"\n      const result = parseLassoPath(pathData)\n      expect(result).toEqual({\n        x: [100, 200, 300],\n        y: [150, 250, 350],\n      })\n    })\n\n    it(\"does not error with an empty string\", () => {\n      const result = parseLassoPath(\"\")\n      expect(result).toEqual({\n        x: [],\n        y: [],\n      })\n    })\n\n    it(\"handles path with only one point\", () => {\n      const pathData = \"M100,150Z\"\n      const result = parseLassoPath(pathData)\n      expect(result).toEqual({\n        x: [100],\n        y: [150],\n      })\n    })\n  })\n\n  describe(\"parseBoxSelection\", () => {\n    it(\"parses a box selection into x and y ranges\", () => {\n      const selection = { x0: 100, y0: 150, x1: 200, y1: 250 }\n      const result = parseBoxSelection(selection)\n      expect(result).toEqual({\n        x: [100, 200],\n        y: [150, 250],\n      })\n    })\n\n    it(\"returns an object of empty x and y\", () => {\n      const selection = {}\n      const result = parseBoxSelection(selection)\n      expect(result).toEqual({\n        x: [],\n        y: [],\n      })\n    })\n  })\n})\n\nconst getWidgetMgr = (): WidgetStateManager => {\n  const sendRerunBackMsg = jest.fn()\n  const formsDataChanged = jest.fn()\n  return new WidgetStateManager({\n    sendRerunBackMsg,\n    formsDataChanged,\n  })\n}\n\ndescribe(\"sendEmptySelection\", () => {\n  it(\"sends a rerun msg if widget_state is empty\", () => {\n    const widgetMgr = getWidgetMgr()\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    sendEmptySelection(\n      widgetMgr,\n      { id: \"plotly_chart\" } as PlotlyChartProto,\n      undefined\n    )\n\n    expect(widgetMgr.setStringValue).toHaveBeenCalledTimes(1)\n  })\n\n  it(\"does not send a rerun msg if widget_state is empty\", () => {\n    const widgetMgr = getWidgetMgr()\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    const plotlyProto = { id: \"plotly_chart\" } as PlotlyChartProto\n\n    widgetMgr.setStringValue(\n      plotlyProto,\n      '{\"selection\":{\"points\":[],\"point_indices\":[],\"box\":[],\"lasso\":[]}}',\n      { fromUi: true },\n      undefined\n    )\n\n    sendEmptySelection(\n      widgetMgr,\n      { id: \"plotly_chart\" } as PlotlyChartProto,\n      undefined\n    )\n\n    // setStringValue is not called again\n    expect(widgetMgr.setStringValue).toHaveBeenCalledTimes(1)\n  })\n})\n\ndescribe(\"handleSelection\", () => {\n  const mockFragmentId = \"testFragment\"\n  const proto = {\n    id: \"plotly_chart\",\n    selectionMode: [0, 1, 2],\n  } as PlotlyChartProto\n\n  it(\"should return early if no event is provided\", () => {\n    const widgetMgr = getWidgetMgr()\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    // @ts-expect-error\n    handleSelection(undefined, widgetMgr, proto, mockFragmentId)\n    expect(widgetMgr.setStringValue).not.toHaveBeenCalled()\n  })\n\n  it(\"should handle an event with no points or selections\", () => {\n    const event = { points: undefined, selections: undefined } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    handleSelection(event, widgetMgr, proto, mockFragmentId)\n    expect(widgetMgr.setStringValue).toHaveBeenCalledTimes(1)\n  })\n\n  it(\"should process events with points correctly\", () => {\n    const event = {\n      points: [\n        { pointIndex: 1, data: { legendgroup: \"group1\" }, pointIndices: [1] },\n      ],\n    } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    handleSelection(event, widgetMgr, proto, mockFragmentId)\n    expect(widgetMgr.setStringValue).toHaveBeenCalledWith(\n      { id: \"plotly_chart\", selectionMode: [0, 1, 2] },\n      '{\"selection\":{\"points\":[{\"point_index\":1,\"point_indices\":[1],\"legendgroup\":\"group1\"}],\"point_indices\":[1],\"box\":[],\"lasso\":[]}}',\n      { fromUi: true },\n      \"testFragment\"\n    )\n  })\n\n  it(\"should process box selections correctly\", () => {\n    const event = {\n      selections: [\n        {\n          type: \"rect\",\n          xref: \"x\",\n          yref: \"y\",\n          x0: \"0\",\n          x1: \"1\",\n          y0: \"0\",\n          y1: \"1\",\n        },\n      ],\n    } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    handleSelection(event, widgetMgr, proto, undefined)\n    expect(widgetMgr.setStringValue).toHaveBeenCalledWith(\n      { id: \"plotly_chart\", selectionMode: [0, 1, 2] },\n      '{\"selection\":{\"points\":[],\"point_indices\":[],\"box\":[{\"xref\":\"x\",\"yref\":\"y\",\"x\":[\"0\",\"1\"],\"y\":[\"0\",\"1\"]}],\"lasso\":[]}}',\n      { fromUi: true },\n      undefined\n    )\n  })\n\n  it(\"should process lasso selections correctly\", () => {\n    const event = {\n      selections: [\n        { type: \"path\", xref: \"x\", yref: \"y\", path: \"M4.0,8.0L4.0,7.8Z\" },\n      ],\n    } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    handleSelection(event, widgetMgr, proto, mockFragmentId)\n    expect(widgetMgr.setStringValue).toHaveBeenCalledWith(\n      { id: \"plotly_chart\", selectionMode: [0, 1, 2] },\n      '{\"selection\":{\"points\":[],\"point_indices\":[],\"box\":[],\"lasso\":[{\"xref\":\"x\",\"yref\":\"y\",\"x\":[4,4],\"y\":[8,7.8]}]}}',\n      { fromUi: true },\n      \"testFragment\"\n    )\n  })\n\n  it(\"should not rerun if lasso selection is present but has no lasso selection mode\", () => {\n    const event = {\n      selections: [\n        { type: \"path\", xref: \"x\", yref: \"y\", path: \"M4.0,8.0L4.0,7.8Z\" },\n      ],\n    } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    handleSelection(\n      event,\n      widgetMgr,\n      // @ts-expect-error\n      { ...proto, selectionMode: [] },\n      mockFragmentId\n    )\n    expect(widgetMgr.setStringValue).not.toHaveBeenCalled()\n  })\n\n  it(\"should not rerun if box selection is present but has no box selection mode\", () => {\n    const event = {\n      selections: [\n        {\n          type: \"rect\",\n          xref: \"x\",\n          yref: \"y\",\n          x0: \"0\",\n          x1: \"1\",\n          y0: \"0\",\n          y1: \"1\",\n        },\n      ],\n    } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    handleSelection(\n      event,\n      widgetMgr,\n      // @ts-expect-error\n      { ...proto, selectionMode: [] },\n      mockFragmentId\n    )\n    expect(widgetMgr.setStringValue).not.toHaveBeenCalled()\n  })\n\n  it(\"should not rerun if the return value is the same\", () => {\n    const event = {\n      points: [],\n      selections: [],\n    } as any\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n\n    widgetMgr.setStringValue(\n      proto,\n      '{\"selection\":{\"points\":[],\"point_indices\":[],\"box\":[],\"lasso\":[]}}',\n      { fromUi: true },\n      undefined\n    )\n\n    handleSelection(event, widgetMgr, proto, mockFragmentId)\n    expect(widgetMgr.setStringValue).toHaveBeenCalledTimes(1)\n  })\n\n  it('should rerun if there is a lasso select and a box select when selection_mode=[\"box\", \"lasso\"]', () => {\n    const boxEvent = {\n      points: [\n        {\n          pointIndex: 0,\n          data: { legendgroup: \"group2\" },\n          pointIndices: [0],\n          x: 0,\n          y: 0,\n        },\n      ],\n      selections: [\n        {\n          type: \"rect\",\n          xref: \"x\",\n          yref: \"y\",\n          x0: \"0\",\n          x1: \"1\",\n          y0: \"0\",\n          y1: \"1\",\n        },\n      ],\n    } as any\n\n    const widgetMgr = getWidgetMgr()\n\n    jest.spyOn(widgetMgr, \"setStringValue\")\n    handleSelection(\n      boxEvent,\n      widgetMgr,\n      { ...proto, selectionMode: [1, 2] } as PlotlyChartProto,\n      undefined\n    )\n    expect(widgetMgr.setStringValue).toHaveBeenCalledTimes(1)\n\n    const lassoEventAndBoxEvent = {\n      points: [\n        {\n          pointIndex: 1,\n          data: { legendgroup: \"group1\" },\n          pointIndices: [1],\n          x: 1,\n          y: 1,\n        },\n        {\n          pointIndex: 0,\n          data: { legendgroup: \"group2\" },\n          pointIndices: [0],\n          x: 0,\n          y: 0,\n        },\n      ],\n      selections: [\n        { type: \"path\", xref: \"x\", yref: \"y\", path: \"M4.0,8.0L4.0,7Z\" },\n        {\n          type: \"rect\",\n          xref: \"x\",\n          yref: \"y\",\n          x0: \"0\",\n          x1: \"1\",\n          y0: \"0\",\n          y1: \"1\",\n        },\n      ],\n    } as any\n\n    handleSelection(\n      lassoEventAndBoxEvent,\n      widgetMgr,\n      { ...proto, selectionMode: [1, 2] } as PlotlyChartProto,\n      undefined\n    )\n    expect(widgetMgr.setStringValue).toHaveBeenCalledTimes(2)\n    expect(widgetMgr.setStringValue).toHaveBeenLastCalledWith(\n      { id: \"plotly_chart\", selectionMode: [1, 2] },\n      '{\"selection\":{\"points\":[{\"point_index\":1,\"point_indices\":[1],\"x\":1,\"y\":1,\"legendgroup\":\"group1\"},{\"point_index\":0,\"point_indices\":[0],\"x\":0,\"y\":0,\"legendgroup\":\"group2\"}],\"point_indices\":[1,0],\"box\":[{\"xref\":\"x\",\"yref\":\"y\",\"x\":[\"0\",\"1\"],\"y\":[\"0\",\"1\"]}],\"lasso\":[{\"xref\":\"x\",\"yref\":\"y\",\"x\":[4,4],\"y\":[8,7]}]}}',\n      { fromUi: true },\n      undefined\n    )\n  })\n})\n\ndescribe(\"applyTheming\", () => {\n  it(\"applies Streamlit theme when theme is streamlit\", () => {\n    const mockPlotlyFigure = { data: [{}], layout: {}, frames: [] }\n    const chartTheme = \"streamlit\"\n\n    applyTheming(mockPlotlyFigure, chartTheme, mockTheme.emotion)\n\n    expect(applyStreamlitTheme).toHaveBeenCalled()\n  })\n\n  it(\"applies default theme when not using the default plotly theme\", () => {\n    const mockPlotlyFigure = { data: [{}], layout: {}, frames: [] }\n    const chartTheme = \"default\"\n\n    applyTheming(mockPlotlyFigure, chartTheme, mockTheme.emotion)\n\n    expect(layoutWithThemeDefaults).toHaveBeenCalled()\n  })\n})\n"],"mappings":"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"}