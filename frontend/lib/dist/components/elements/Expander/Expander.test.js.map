{"version":3,"file":"Expander.test.js","names":["React","fireEvent","screen","render","Block","BlockProto","Expander","jsx","_jsx","getProps","elementProps","arguments","length","undefined","props","element","Expandable","create","label","expanded","isStale","empty","describe","it","children","expanderContainer","getByTestId","expect","toBeInTheDocument","list","queryByRole","not","getByText","queryByTestId","icon","toBeVisible","click"],"sources":["../../../../src/components/elements/Expander/Expander.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { fireEvent, screen } from \"@testing-library/react\"\nimport \"@testing-library/jest-dom\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { Block as BlockProto } from \"@streamlit/lib/src/proto\"\n\nimport Expander, { ExpanderProps } from \"./Expander\"\n\nconst getProps = (\n  elementProps: Partial<BlockProto.Expandable> = {},\n  props: Partial<ExpanderProps> = {}\n): ExpanderProps => ({\n  element: BlockProto.Expandable.create({\n    label: \"hi\",\n    expanded: true,\n    ...elementProps,\n  }),\n  isStale: false,\n  empty: false,\n  ...props,\n})\n\ndescribe(\"Expander container\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    const expanderContainer = screen.getByTestId(\"stExpander\")\n    expect(expanderContainer).toBeInTheDocument()\n  })\n\n  it(\"does not render a list\", () => {\n    const props = getProps()\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    const list = screen.queryByRole(\"list\")\n    expect(list).not.toBeInTheDocument()\n  })\n\n  it(\"renders expander label as expected\", () => {\n    const props = getProps()\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByText(props.element.label)).toBeInTheDocument()\n  })\n\n  it(\"does not render collapse/expand icon if empty\", () => {\n    const props = getProps({}, { empty: true })\n    render(<Expander {...props}></Expander>)\n    expect(\n      screen.queryByTestId(\"stExpanderToggleIcon\")\n    ).not.toBeInTheDocument()\n  })\n\n  it(\"renders expander with a spinner icon\", () => {\n    const props = getProps({ icon: \"spinner\" })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByTestId(\"stExpanderIconSpinner\")).toBeInTheDocument()\n  })\n\n  it(\"renders expander with a check icon\", () => {\n    const props = getProps({ icon: \":material/check:\" })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByTestId(\"stExpanderIconCheck\")).toBeInTheDocument()\n  })\n\n  it(\"renders expander with a error icon\", () => {\n    const props = getProps({ icon: \":material/error:\" })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByTestId(\"stExpanderIconError\")).toBeInTheDocument()\n  })\n\n  it(\"renders expander with an emoji icon\", () => {\n    const props = getProps({ icon: \"ðŸš€\" })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByTestId(\"stExpanderIcon\")).toBeInTheDocument()\n    expect(screen.getByText(\"ðŸš€\")).toBeInTheDocument()\n  })\n\n  it(\"renders expander with a material icon\", () => {\n    const props = getProps({ icon: \":material/add_circle:\" })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByTestId(\"stExpanderIcon\")).toBeInTheDocument()\n    expect(screen.getByText(\"add_circle\")).toBeInTheDocument()\n  })\n\n  it(\"should render a expanded component\", () => {\n    const props = getProps()\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByText(\"test\")).toBeVisible()\n  })\n\n  it(\"should render a collapsed component\", () => {\n    const props = getProps({ expanded: false })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n    expect(screen.getByText(\"test\")).not.toBeVisible()\n  })\n\n  it(\"should render the text when expanded\", () => {\n    const props = getProps({ expanded: false })\n    render(\n      <Expander {...props}>\n        <div>test</div>\n      </Expander>\n    )\n\n    fireEvent.click(screen.getByText(\"hi\"))\n    expect(screen.getByText(\"test\")).toBeVisible()\n  })\n})\n"],"mappings":"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"}