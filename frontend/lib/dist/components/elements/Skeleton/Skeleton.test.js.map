{"version":3,"file":"Skeleton.test.js","names":["React","screen","render","Skeleton","SkeletonProto","jsx","_jsx","describe","it","props","create","element","skeletonElement","getByTestId","expect","toBeVisible","toHaveClass","height","testSkeleton","toHaveAttribute","not","style","SkeletonStyle","APP","findByTestId"],"sources":["../../../../src/components/elements/Skeleton/Skeleton.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport \"@testing-library/jest-dom\"\nimport { Skeleton as SkeletonProto } from \"@streamlit/lib/src/proto\"\n\nimport { Skeleton } from \"./Skeleton\"\n\ndescribe(\"Skeleton element\", () => {\n  it(\"renders without delay\", () => {\n    const props = SkeletonProto.create()\n    render(<Skeleton element={props} />)\n\n    // Render the skeleton immediately, without any sort of delay.\n    // (This is normal React behavior, but different from AppSkeleton, so I'm\n    // writing a very trivial test for it.)\n    const skeletonElement = screen.getByTestId(\"stSkeleton\")\n    expect(skeletonElement).toBeVisible()\n    expect(skeletonElement).toHaveClass(\"stSkeleton\")\n  })\n\n  it(\"converts properties appropriately\", () => {\n    const props = SkeletonProto.create({ height: 5 })\n\n    render(<Skeleton element={props} />)\n\n    const testSkeleton = screen.getByTestId(\"stSkeleton\")\n    expect(testSkeleton).toHaveAttribute(\"height\", \"5px\")\n    expect(testSkeleton).not.toHaveAttribute(\"width\")\n  })\n\n  it(\"renders app skeleton\", async () => {\n    const props = SkeletonProto.create({\n      style: SkeletonProto.SkeletonStyle.APP,\n    })\n    render(<Skeleton element={props} />)\n\n    // Await the skeleton to appear.\n    expect(await screen.findByTestId(\"stAppSkeleton\")).toBeVisible()\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,MAAM;AACf,OAAO,2BAA2B;AAClC,SAASC,QAAQ,IAAIC,aAAa;AAElC,SAASD,QAAQ;AAAoB,SAAAE,GAAA,IAAAC,IAAA;AAErCC,QAAQ,CAAC,kBAAkB,EAAE,MAAM;EACjCC,EAAE,CAAC,uBAAuB,EAAE,MAAM;IAChC,MAAMC,KAAK,GAAGL,aAAa,CAACM,MAAM,CAAC,CAAC;IACpCR,MAAM,eAACI,IAAA,CAACH,QAAQ;MAACQ,OAAO,EAAEF;IAAM,CAAE,CAAC,CAAC;;IAEpC;IACA;IACA;IACA,MAAMG,eAAe,GAAGX,MAAM,CAACY,WAAW,CAAC,YAAY,CAAC;IACxDC,MAAM,CAACF,eAAe,CAAC,CAACG,WAAW,CAAC,CAAC;IACrCD,MAAM,CAACF,eAAe,CAAC,CAACI,WAAW,CAAC,YAAY,CAAC;EACnD,CAAC,CAAC;EAEFR,EAAE,CAAC,mCAAmC,EAAE,MAAM;IAC5C,MAAMC,KAAK,GAAGL,aAAa,CAACM,MAAM,CAAC;MAAEO,MAAM,EAAE;IAAE,CAAC,CAAC;IAEjDf,MAAM,eAACI,IAAA,CAACH,QAAQ;MAACQ,OAAO,EAAEF;IAAM,CAAE,CAAC,CAAC;IAEpC,MAAMS,YAAY,GAAGjB,MAAM,CAACY,WAAW,CAAC,YAAY,CAAC;IACrDC,MAAM,CAACI,YAAY,CAAC,CAACC,eAAe,CAAC,QAAQ,EAAE,KAAK,CAAC;IACrDL,MAAM,CAACI,YAAY,CAAC,CAACE,GAAG,CAACD,eAAe,CAAC,OAAO,CAAC;EACnD,CAAC,CAAC;EAEFX,EAAE,CAAC,sBAAsB,EAAE,YAAY;IACrC,MAAMC,KAAK,GAAGL,aAAa,CAACM,MAAM,CAAC;MACjCW,KAAK,EAAEjB,aAAa,CAACkB,aAAa,CAACC;IACrC,CAAC,CAAC;IACFrB,MAAM,eAACI,IAAA,CAACH,QAAQ;MAACQ,OAAO,EAAEF;IAAM,CAAE,CAAC,CAAC;;IAEpC;IACAK,MAAM,CAAC,MAAMb,MAAM,CAACuB,YAAY,CAAC,eAAe,CAAC,CAAC,CAACT,WAAW,CAAC,CAAC;EAClE,CAAC,CAAC;AACJ,CAAC,CAAC"}