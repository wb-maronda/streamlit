{"version":3,"file":"ImageList.test.js","names":["React","screen","render","ImageList","ImageListProto","mockEndpoints","jsx","_jsx","describe","buildMediaURL","jest","fn","mockReturnValue","getProps","elementProps","arguments","length","undefined","element","create","imgs","caption","url","width","endpoints","isFullScreen","it","props","expect","getAllByRole","toHaveLength","images","forEach","image","toHaveStyle","toHaveBeenNthCalledWith","toHaveAttribute","captions","getAllByTestId","toHaveTextContent","height"],"sources":["../../../../src/components/elements/ImageList/ImageList.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport { ImageList as ImageListProto } from \"@streamlit/lib/src/proto\"\nimport { mockEndpoints } from \"@streamlit/lib/src/mocks/mocks\"\nimport { ImageList, ImageListProps } from \"./ImageList\"\n\ndescribe(\"ImageList Element\", () => {\n  const buildMediaURL = jest.fn().mockReturnValue(\"https://mock.media.url\")\n\n  const getProps = (\n    elementProps: Partial<ImageListProto> = {}\n  ): ImageListProps => ({\n    element: ImageListProto.create({\n      imgs: [\n        { caption: \"a\", url: \"/media/mockImage1.jpeg\" },\n        { caption: \"b\", url: \"/media/mockImage2.jpeg\" },\n      ],\n      width: -1,\n      ...elementProps,\n    }),\n    endpoints: mockEndpoints({ buildMediaURL: buildMediaURL }),\n    width: 0,\n    isFullScreen: false,\n  })\n\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(<ImageList {...props} />)\n    expect(screen.getAllByRole(\"img\")).toHaveLength(2)\n  })\n\n  it(\"renders explicit width for each image\", () => {\n    const props = getProps({ width: 300 })\n    render(<ImageList {...props} />)\n\n    const images = screen.getAllByRole(\"img\")\n    expect(images).toHaveLength(2)\n    images.forEach(image => {\n      expect(image).toHaveStyle(\"width: 300px\")\n    })\n  })\n\n  it(\"creates its `src` attribute using buildMediaURL\", () => {\n    const props = getProps()\n    render(<ImageList {...props} />)\n    const images = screen.getAllByRole(\"img\")\n    expect(images).toHaveLength(2)\n\n    expect(buildMediaURL).toHaveBeenNthCalledWith(1, \"/media/mockImage1.jpeg\")\n    expect(buildMediaURL).toHaveBeenNthCalledWith(2, \"/media/mockImage2.jpeg\")\n\n    images.forEach(image => {\n      expect(image).toHaveAttribute(\"src\", \"https://mock.media.url\")\n    })\n  })\n\n  it(\"has a caption\", () => {\n    const props = getProps()\n    render(<ImageList {...props} />)\n\n    const captions = screen.getAllByTestId(\"stImageCaption\")\n    expect(captions).toHaveLength(2)\n    expect(captions[0]).toHaveTextContent(\"a\")\n    expect(captions[1]).toHaveTextContent(\"b\")\n  })\n\n  it(\"renders explicit width for each caption\", () => {\n    const props = getProps({ width: 300 })\n    render(<ImageList {...props} />)\n\n    const captions = screen.getAllByTestId(\"stImageCaption\")\n    expect(captions).toHaveLength(2)\n    captions.forEach(caption => {\n      expect(caption).toHaveStyle(\"width: 300px\")\n    })\n  })\n\n  describe(\"fullScreen\", () => {\n    const props = { ...getProps(), isFullScreen: true, height: 100 }\n\n    it(\"has a caption\", () => {\n      render(<ImageList {...props} />)\n      expect(screen.getAllByTestId(\"stImageCaption\")).toHaveLength(2)\n    })\n\n    it(\"has the proper style\", () => {\n      render(<ImageList {...props} />)\n      const images = screen.getAllByRole(\"img\")\n\n      expect(images).toHaveLength(2)\n      images.forEach(image => {\n        expect(image).toHaveStyle(\"max-height: 100px; object-fit: contain;\")\n      })\n    })\n  })\n})\n"],"mappings":"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"}