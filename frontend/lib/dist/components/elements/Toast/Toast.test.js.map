{"version":3,"file":"Toast.test.js","names":["React","fireEvent","screen","waitFor","within","PLACEMENT","ToasterContainer","render","mockTheme","shortenMessage","Toast","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","createContainer","placement","bottomRight","autoHideDuration","overrides","Root","props","getProps","elementProps","arguments","length","undefined","themeProps","body","icon","theme","emotion","width","renderComponent","children","describe","test","toast","getByRole","closeButton","name","expandButton","queryByRole","expect","toBeInTheDocument","toHaveTextContent","not","toastElement","getByTestId","toHaveClass","toastText","toContainElement","click","collapseButton","inSidebar","toastError","shortMessage","longMessage","expectedTruncatedMessage","textContent","replace","toEqual","toHaveLength","messageWithBreaks","toastExpanded","toastCollapsed"],"sources":["../../../../src/components/elements/Toast/Toast.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport {\n  fireEvent,\n  RenderResult,\n  screen,\n  waitFor,\n  within,\n} from \"@testing-library/react\"\nimport \"@testing-library/jest-dom\"\nimport { PLACEMENT, ToasterContainer } from \"baseui/toast\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { Toast as ToastProto } from \"@streamlit/lib/src/proto\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\n\nimport { shortenMessage, Toast, ToastProps } from \"./Toast\"\n\n// A Toaster Container is required to render Toasts\n// Don't import the actual one from EventContainer as that lives on app side\nconst createContainer = (): ReactElement => (\n  <ToasterContainer\n    placement={PLACEMENT.bottomRight}\n    // increasing autoHideDuration to 10s to avoid test flakiness\n    autoHideDuration={10000}\n    overrides={{\n      Root: {\n        props: {\n          \"data-testid\": \"stToastContainer\",\n        },\n      },\n    }}\n  />\n)\n\nconst getProps = (\n  elementProps: Partial<ToastProto> = {},\n  themeProps: Partial<EmotionTheme> = {}\n): ToastProps => ({\n  body: \"This is a toast message\",\n  icon: \"🐶\",\n  theme: {\n    ...mockTheme.emotion,\n    ...themeProps,\n  },\n  width: 0,\n  ...elementProps,\n})\n\nconst renderComponent = (props: ToastProps): RenderResult =>\n  render(\n    <>\n      {createContainer()}\n      <Toast {...props} />\n    </>\n  )\n\ndescribe(\"Toast Component\", () => {\n  test(\"renders default toast\", () => {\n    const props = getProps()\n    renderComponent(props)\n\n    const toast = screen.getByRole(\"alert\")\n    const closeButton = screen.getByRole(\"button\", { name: \"Close\" })\n    const expandButton = screen.queryByRole(\"button\", { name: \"view more\" })\n\n    expect(toast).toBeInTheDocument()\n    expect(toast).toHaveTextContent(\"🐶\")\n    expect(toast).toHaveTextContent(\"This is a toast message\")\n    expect(closeButton).toBeInTheDocument()\n    expect(expandButton).not.toBeInTheDocument()\n\n    const toastElement = screen.getByTestId(\"stToast\")\n    expect(toastElement).toBeInTheDocument()\n    expect(toastElement).toHaveClass(\"stToast\")\n  })\n\n  test(\"renders long toast messages with expand option\", () => {\n    const props = getProps({\n      icon: \"\",\n      body: \"Random toast message that is a really really really really really really really really really long message, going way past the 3 line limit\",\n    })\n    renderComponent(props)\n\n    const toast = screen.getByRole(\"alert\")\n    const toastText = within(toast).getByTestId(\"stMarkdownContainer\")\n\n    const expandButton = screen.getByRole(\"button\", { name: \"view more\" })\n    expect(toast).toBeInTheDocument()\n    expect(toastText).toHaveTextContent(\n      \"Random toast message that is a really really really really really really really really really long\"\n    )\n    expect(toast).toContainElement(expandButton)\n  })\n\n  test(\"can expand to see the full toast message & collapse to truncate\", () => {\n    const props = getProps({\n      icon: \"\",\n      body: \"Random toast message that is a really really really really really really really really really long message, going way past the 3 line limit\",\n    })\n    renderComponent(props)\n\n    const toast = screen.getByRole(\"alert\")\n    const toastText = within(toast).getByTestId(\"stMarkdownContainer\")\n    const expandButton = screen.getByRole(\"button\", { name: \"view more\" })\n    // Initial state\n    expect(toast).toBeInTheDocument()\n    expect(toastText).toHaveTextContent(\n      \"Random toast message that is a really really really really really really really really really long\"\n    )\n    expect(toast).toContainElement(expandButton)\n\n    // Click view more button & expand the message\n    fireEvent.click(expandButton)\n    expect(toast).toHaveTextContent(\n      \"Random toast message that is a really really really really really really really really really long message, going way past the 3 line limit\"\n    )\n\n    // Click view less button & collapse the message\n    const collapseButton = screen.getByRole(\"button\", { name: \"view less\" })\n    expect(toast).toContainElement(collapseButton)\n    fireEvent.click(collapseButton)\n    expect(toastText).toHaveTextContent(\n      \"Random toast message that is a really really really really really really really really really long\"\n    )\n    expect(toast).toContainElement(expandButton)\n  })\n\n  test(\"can close toast\", async () => {\n    const props = getProps()\n    renderComponent(props)\n\n    const toast = screen.getByRole(\"alert\")\n    const closeButton = screen.getByRole(\"button\", { name: \"Close\" })\n    expect(toast).toBeInTheDocument()\n    expect(closeButton).toBeInTheDocument()\n    // Click close button\n    fireEvent.click(closeButton)\n    // Wait for toast to be removed from DOM\n    await waitFor(() => expect(toast).not.toBeInTheDocument())\n  })\n\n  test(\"throws an error when called via st.sidebar.toast\", async () => {\n    const props = getProps({}, { inSidebar: true })\n    renderComponent(props)\n\n    const toastError = screen.getByRole(\"alert\")\n    expect(toastError).toBeInTheDocument()\n    expect(toastError).toHaveTextContent(\"Streamlit API Error\")\n  })\n\n  test(\"shortenMessage does not truncate messages under the character limit\", () => {\n    const shortMessage = \"This message should not be truncated.\"\n    const props = getProps({ body: shortMessage })\n    renderComponent(props)\n\n    const toast = screen.getByRole(\"alert\")\n    expect(toast).toHaveTextContent(shortMessage)\n  })\n\n  test(\"shortenMessage truncates messages over the character limit without cutting words\", () => {\n    const longMessage =\n      \"This is a very long message meant to test the functionality of the shortenMessage function, ensuring it truncates properly without cutting words and respects the character limit.\"\n    const expectedTruncatedMessage = shortenMessage(longMessage)\n    const props = getProps({ icon: \"\", body: longMessage })\n    renderComponent(props)\n\n    // Get the text content of the toast, excluding the \"view more\" and \"Close\" buttons\n    const toastText = screen\n      .getByRole(\"alert\")\n      ?.textContent?.replace(\"view moreClose\", \"\")\n\n    expect(toastText).toEqual(expectedTruncatedMessage)\n    expect(toastText).toHaveLength(expectedTruncatedMessage.length)\n  })\n\n  test(\"shortenMessage handles explicit line breaks correctly\", () => {\n    const messageWithBreaks =\n      \"First line of the message.\\nSecond line of the message, which is meant to test how explicit line breaks are handled.\\nThird line, which should not be visible.\"\n    const expectedTruncatedMessage = shortenMessage(messageWithBreaks)\n    const props = getProps({ icon: \"\", body: messageWithBreaks })\n    renderComponent(props)\n\n    const toastText = screen\n      .getByRole(\"alert\")\n      ?.textContent?.replace(\"view moreClose\", \"\")\n    expect(toastText).toEqual(expectedTruncatedMessage)\n    expect(toastText).toHaveLength(expectedTruncatedMessage.length)\n  })\n\n  test(\"expands and collapses long messages with explicit line breaks correctly\", () => {\n    const messageWithBreaks =\n      \"First line of the message.\\nSecond line of the message, which is very long and meant to test the expand and collapse functionality.\\nThird line, which should initially be hidden.\"\n    const expectedTruncatedMessage = shortenMessage(messageWithBreaks)\n    const props = getProps({ icon: \"\", body: messageWithBreaks })\n    renderComponent(props)\n\n    const expandButton = screen.getByRole(\"button\", { name: \"view more\" })\n    fireEvent.click(expandButton) // Expand\n\n    const toastExpanded = screen\n      .getByRole(\"alert\")\n      ?.textContent?.replace(\"view lessClose\", \"\")\n    expect(toastExpanded).toEqual(messageWithBreaks) // Check full message is displayed\n\n    const collapseButton = screen.getByRole(\"button\", { name: \"view less\" })\n    fireEvent.click(collapseButton) // Collapse\n\n    const toastCollapsed = screen\n      .getByRole(\"alert\")\n      ?.textContent?.replace(\"view moreClose\", \"\")\n    expect(toastCollapsed).toEqual(expectedTruncatedMessage) // Check message is truncated again\n  })\n})\n"],"mappings":"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"}