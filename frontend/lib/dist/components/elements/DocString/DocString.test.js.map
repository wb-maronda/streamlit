{"version":3,"file":"DocString.test.js","names":["React","screen","DocString","DocStringProto","Member","render","jsx","_jsx","getProps","elementProps","arguments","length","undefined","element","create","name","value","docString","type","width","describe","props","it","expect","getByTestId","toBeInTheDocument","toHaveTextContent","queryByTestId","not","members","getAllByTestId","toHaveLength","member","queryByText"],"sources":["../../../../src/components/elements/DocString/DocString.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\n\nimport { DocString as DocStringProto } from \"@streamlit/lib/src/proto\"\nimport DocString, { DocStringProps, Member } from \"./DocString\"\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nconst getProps = (\n  elementProps: Partial<DocStringProto> = {}\n): DocStringProps => ({\n  element: DocStringProto.create({\n    name: \"st.balloons\",\n    value: \"streamlit.balloons()\",\n    docString: \"docstring\",\n    type: \"method\",\n    ...elementProps,\n  }),\n  width: 0,\n})\n\ndescribe(\"DocString Element\", () => {\n  const props = getProps()\n\n  it(\"renders without crashing\", () => {\n    render(<DocString {...props} />)\n    expect(screen.getByTestId(\"stDocstring\")).toBeInTheDocument()\n  })\n\n  it(\"should render a doc-string\", () => {\n    render(<DocString {...props} />)\n    expect(screen.getByTestId(\"stDocstring-Doc\")).toHaveTextContent(\n      props.element.docString\n    )\n  })\n\n  it(\"should render 'no docs' text when empty\", () => {\n    const props = getProps({\n      docString: undefined,\n    })\n    render(<DocString {...props} />)\n\n    expect(screen.getByTestId(\"stDocstring-Doc\")).toHaveTextContent(\n      \"No docs available\"\n    )\n  })\n\n  describe(\"doc-header\", () => {\n    it(\"should render a name\", () => {\n      render(<DocString {...props} />)\n      expect(screen.getByTestId(\"stDocstringName\")).toHaveTextContent(\n        \"st.balloons\"\n      )\n    })\n\n    it(\"should render value\", () => {\n      render(<DocString {...props} />)\n      expect(screen.getByTestId(\"stDocstringValue\")).toHaveTextContent(\n        \"streamlit.balloons()\"\n      )\n    })\n\n    it(\"should render a type\", () => {\n      render(<DocString {...props} />)\n      expect(screen.getByTestId(\"stDocstringType\")).toHaveTextContent(\"method\")\n    })\n\n    describe(\"should render empty when\", () => {\n      const props = getProps({\n        name: undefined,\n        value: undefined,\n        type: undefined,\n      })\n\n      it(\"there's no name\", () => {\n        render(<DocString {...props} />)\n        expect(screen.queryByTestId(\"stDocstringName\")).not.toBeInTheDocument()\n      })\n\n      it(\"there's no value\", () => {\n        render(<DocString {...props} />)\n        expect(\n          screen.queryByTestId(\"stDocstringValue\")\n        ).not.toBeInTheDocument()\n      })\n\n      it(\"there's no type\", () => {\n        render(<DocString {...props} />)\n        expect(screen.queryByTestId(\"stDocstringType\")).not.toBeInTheDocument()\n      })\n    })\n\n    // Testing cases that we expect to happen (won't test every combination)\n    it(\"should render a type and value when there's no name\", () => {\n      const props = getProps({\n        name: undefined,\n      })\n      render(<DocString {...props} />)\n\n      expect(screen.queryByTestId(\"stDocstringName\")).not.toBeInTheDocument()\n\n      expect(screen.getByTestId(\"stDocstringType\")).toHaveTextContent(\"method\")\n      expect(screen.getByTestId(\"stDocstringValue\")).toHaveTextContent(\n        \"streamlit.balloons()\"\n      )\n    })\n\n    // Testing cases that we expect to happen (won't test every combination)\n    it(\"should render a name and type when there's no value\", () => {\n      const props = getProps({\n        value: undefined,\n      })\n      render(<DocString {...props} />)\n\n      expect(screen.queryByTestId(\"stDocstringValue\")).not.toBeInTheDocument()\n\n      expect(screen.getByTestId(\"stDocstringName\")).toHaveTextContent(\n        \"st.balloons\"\n      )\n      expect(screen.getByTestId(\"stDocstringType\")).toHaveTextContent(\"method\")\n    })\n  })\n\n  describe(\"members table\", () => {\n    it(\"should render no members when there are none\", () => {\n      render(<DocString {...props} />)\n      expect(\n        screen.queryByTestId(\"stDocstringMembersTable\")\n      ).not.toBeInTheDocument()\n    })\n\n    it(\"should render members\", () => {\n      const props = getProps({\n        members: [\n          {\n            name: \"member1\",\n            value: \"value1\",\n            type: \"type1\",\n          },\n          {\n            name: \"member2\",\n            value: \"value2\",\n            type: \"type2\",\n          },\n        ],\n      })\n      render(<DocString {...props} />)\n\n      expect(screen.getByTestId(\"stDocstringMembersTable\")).toBeInTheDocument()\n      expect(screen.getAllByTestId(\"stMember\")).toHaveLength(2)\n    })\n  })\n})\n\ndescribe(\"Member Element\", () => {\n  it(\"should render value-oriented members\", () => {\n    const props = {\n      member: {\n        name: \"member1\",\n        type: \"type1\",\n        value: \"value1\",\n      },\n    }\n\n    render(<Member {...props} />)\n\n    expect(screen.getByTestId(\"stMemberDocValue\")).toHaveTextContent(\"value1\")\n    expect(screen.getByTestId(\"stMemberDocName\")).toHaveTextContent(\"member1\")\n    expect(screen.getByTestId(\"stMemberDocType\")).toHaveTextContent(\"type1\")\n  })\n\n  it(\"should render doc-oriented members\", () => {\n    const props = {\n      member: {\n        name: \"member1\",\n        type: \"type1\",\n        docString: \"docstring1\",\n      },\n    }\n\n    render(<Member {...props} />)\n\n    expect(screen.getByTestId(\"stMemberDocName\")).toHaveTextContent(\"member1\")\n    expect(screen.getByTestId(\"stMemberDocType\")).toHaveTextContent(\"type1\")\n    expect(screen.getByTestId(\"stMemberDocString\")).toHaveTextContent(\n      \"docstring1\"\n    )\n  })\n\n  it(\"should prefer value over doc\", () => {\n    const props = {\n      member: {\n        name: \"member1\",\n        type: \"type1\",\n        value: \"value1\",\n        docString: \"docstring1\",\n      },\n    }\n\n    render(<Member {...props} />)\n\n    expect(screen.getByTestId(\"stMemberDocValue\")).toHaveTextContent(\"value1\")\n    expect(screen.getByTestId(\"stMemberDocName\")).toHaveTextContent(\"member1\")\n    expect(screen.getByTestId(\"stMemberDocType\")).toHaveTextContent(\"type1\")\n    expect(screen.queryByTestId(\"stMemberDocString\")).not.toBeInTheDocument()\n    expect(screen.queryByText(\"docstring1\")).not.toBeInTheDocument()\n  })\n\n  it(\"should tell you when there are no docs\", () => {\n    const props = {\n      member: {\n        name: \"member1\",\n        type: \"type1\",\n      },\n    }\n\n    render(<Member {...props} />)\n\n    expect(screen.getByTestId(\"stMemberDocString\")).toHaveTextContent(\n      \"No docs available\"\n    )\n  })\n\n  it(\"should only show type if present\", () => {\n    const props = {\n      member: {\n        name: \"member1\",\n      },\n    }\n\n    render(<Member {...props} />)\n\n    expect(screen.queryByTestId(\"stMemberDocType\")).not.toBeInTheDocument()\n  })\n})\n"],"mappings":"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"}