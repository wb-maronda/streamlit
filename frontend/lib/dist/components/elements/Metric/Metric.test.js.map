{"version":3,"file":"Metric.test.js","names":["React","screen","render","LabelVisibilityMessage","LabelVisibilityMessageProto","Metric","MetricProto","jsx","_jsx","getProps","elementProps","arguments","length","undefined","element","create","color","MetricColor","RED","direction","MetricDirection","UP","delta","describe","it","props","metricElement","getByTestId","expect","toBeInTheDocument","toHaveClass","toHaveTextContent","label","labelVisibility","value","LabelVisibilityOptions","HIDDEN","toHaveAttribute","String","COLLAPSED","GREEN","DOWN","GRAY","NONE","queryByTestId","not","toHaveStyle","help","tooltip"],"sources":["../../../../src/components/elements/Metric/Metric.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport {\n  LabelVisibilityMessage as LabelVisibilityMessageProto,\n  Metric as MetricProto,\n} from \"@streamlit/lib/src/proto\"\n\nimport Metric, { MetricProps } from \"./Metric\"\n\nconst getProps = (elementProps: Partial<MetricProto> = {}): MetricProps => ({\n  element: MetricProto.create({\n    color: MetricProto.MetricColor.RED,\n    direction: MetricProto.MetricDirection.UP,\n    delta: \"test\",\n    ...elementProps,\n  }),\n})\n\ndescribe(\"Metric element\", () => {\n  it(\"renders metric as expected\", () => {\n    const props = getProps()\n    render(<Metric {...props} />)\n    const metricElement = screen.getByTestId(\"stMetric\")\n    expect(metricElement).toBeInTheDocument()\n    expect(metricElement).toHaveClass(\"stMetric\")\n  })\n\n  it(\"renders metric label as expected\", () => {\n    const props = getProps()\n    render(<Metric {...props} />)\n\n    expect(screen.getByTestId(\"stMetricLabel\")).toHaveTextContent(\n      props.element.label\n    )\n  })\n\n  it(\"pass labelVisibility prop to StyledMetricLabelText correctly when hidden\", () => {\n    const props = getProps({\n      labelVisibility: {\n        value: LabelVisibilityMessageProto.LabelVisibilityOptions.HIDDEN,\n      },\n    })\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricLabel\")).toHaveAttribute(\n      \"visibility\",\n      String(LabelVisibilityMessageProto.LabelVisibilityOptions.HIDDEN)\n    )\n  })\n\n  it(\"pass labelVisibility prop to StyledMetricLabelText correctly when collapsed\", () => {\n    const props = getProps({\n      labelVisibility: {\n        value: LabelVisibilityMessageProto.LabelVisibilityOptions.COLLAPSED,\n      },\n    })\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricLabel\")).toHaveAttribute(\n      \"visibility\",\n      String(LabelVisibilityMessageProto.LabelVisibilityOptions.COLLAPSED)\n    )\n  })\n\n  it(\"renders direction icon based on props - red/up\", () => {\n    const props = getProps()\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricDeltaIcon-Up\")).toBeInTheDocument()\n  })\n\n  it(\"renders direction icon based on props - green/down\", () => {\n    const props = getProps({\n      color: MetricProto.MetricColor.GREEN,\n      direction: MetricProto.MetricDirection.DOWN,\n    })\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricDeltaIcon-Down\")).toBeInTheDocument()\n  })\n\n  it(\"renders no text and icon based on props\", () => {\n    const props = getProps({\n      color: MetricProto.MetricColor.GRAY,\n      direction: MetricProto.MetricDirection.NONE,\n      delta: \"\",\n    })\n    render(<Metric {...props} />)\n    expect(screen.queryByTestId(\"stMetricDeltaIcon\")).not.toBeInTheDocument()\n    expect(screen.queryByTestId(\"stMetricDelta\")).not.toBeInTheDocument()\n  })\n\n  it(\"renders correct gray based on props\", () => {\n    const props = getProps({\n      color: MetricProto.MetricColor.GRAY,\n      direction: MetricProto.MetricDirection.NONE,\n    })\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricDelta\")).toHaveStyle(\n      \"color: rgba(49, 51, 63, 0.6);\"\n    )\n  })\n\n  it(\"renders correct green based on props\", () => {\n    const props = getProps({\n      color: MetricProto.MetricColor.GREEN,\n      direction: MetricProto.MetricDirection.DOWN,\n    })\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricDelta\")).toHaveStyle(\n      \"color: rgb(9, 171, 59);\"\n    )\n  })\n\n  it(\"renders correct red based on props\", () => {\n    const props = getProps()\n    render(<Metric {...props} />)\n    expect(screen.getByTestId(\"stMetricDelta\")).toHaveStyle(\n      \"color: rgb(255, 43, 43);\"\n    )\n  })\n\n  it(\"should render TooltipIcon if help text provided\", () => {\n    const props = getProps({ help: \"help text\" })\n    render(<Metric {...props} />)\n    const tooltip = screen.getByTestId(\"stTooltipIcon\")\n    expect(tooltip).toBeInTheDocument()\n  })\n})\n"],"mappings":"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"}