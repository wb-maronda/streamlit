{"version":3,"file":"DeckGlJsonChart.js","names":["React","useCallback","useEffect","useState","DeckGL","MapContext","NavigationControl","StaticMap","CSVLoader","GLTFLoader","registerLoaders","useTheme","Close","hasLightBackgroundColor","Toolbar","ToolbarAction","withFullScreenWrapper","DeckGlJsonChart","DeckGlJsonChartProto","assertNever","withMapboxToken","StyledDeckGlChart","StyledNavigationControlContainer","EMPTY_STATE","useDeckGl","jsx","_jsx","jsxs","_jsxs","EMPTY_SELECTION","selection","EMPTY_LAYERS","props","collapse","disabled","disableFullscreenMode","element","expand","fragmentId","height","propsHeight","isFullScreen","mapboxToken","propsMapboxToken","widgetMgr","width","propsWidth","elementMapboxToken","theme","createTooltip","data","deck","hasActiveSelection","isSelectionModeActivated","onViewStateChange","selectionMode","setSelection","viewState","isLightTheme","isInitialized","setIsInitialized","handleClick","info","undefined","index","object","layerId","layer","id","currState","isResetClick","getSelection","SelectionMode","SINGLE_OBJECT","indices","objects","MULTI_OBJECT","selectionMap","Map","map","i","has","delete","set","size","_","restIndices","__","restObjects","Array","from","keys","values","Error","newSelection","JSON","stringify","fromUi","value","handleClearSelectionClick","className","children","onExpand","onCollapse","target","locked","label","onClick","icon","layers","getTooltip","ContextProvider","Provider","controller","mapStyle","mapboxApiAccessToken","showCompass"],"sources":["../../../../src/components/elements/DeckGlJsonChart/DeckGlJsonChart.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, useCallback, useEffect, useState } from \"react\"\n\nimport { DeckGL } from \"@deck.gl/react/typed\"\nimport { MapContext, NavigationControl, StaticMap } from \"react-map-gl\"\nimport { CSVLoader } from \"@loaders.gl/csv\"\nimport { GLTFLoader } from \"@loaders.gl/gltf\"\nimport { registerLoaders } from \"@loaders.gl/core\"\nimport { LayersList, PickingInfo } from \"@deck.gl/core/typed\"\nimport { useTheme } from \"@emotion/react\"\nimport { Close } from \"@emotion-icons/material-outlined\"\n\nimport {\n  EmotionTheme,\n  hasLightBackgroundColor,\n} from \"@streamlit/lib/src/theme\"\nimport Toolbar, {\n  ToolbarAction,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\nimport { DeckGlJsonChart as DeckGlJsonChartProto } from \"@streamlit/lib/src/proto\"\nimport { assertNever } from \"@streamlit/lib/src/util/assertNever\"\n\nimport withMapboxToken from \"./withMapboxToken\"\nimport {\n  StyledDeckGlChart,\n  StyledNavigationControlContainer,\n} from \"./styled-components\"\nimport type { DeckGlElementState, DeckGLProps } from \"./types\"\nimport { EMPTY_STATE, useDeckGl } from \"./useDeckGl\"\n\nimport \"mapbox-gl/dist/mapbox-gl.css\"\n\nregisterLoaders([CSVLoader, GLTFLoader])\n\nconst EMPTY_SELECTION = EMPTY_STATE.selection\n\nconst EMPTY_LAYERS: LayersList = []\n\nexport const DeckGlJsonChart: FC<DeckGLProps> = props => {\n  const {\n    collapse,\n    disabled,\n    disableFullscreenMode,\n    element,\n    expand,\n    fragmentId,\n    height: propsHeight,\n    isFullScreen,\n    mapboxToken: propsMapboxToken,\n    widgetMgr,\n    width: propsWidth,\n  } = props\n  const { mapboxToken: elementMapboxToken } = element\n  const theme: EmotionTheme = useTheme()\n  const {\n    createTooltip,\n    data: selection,\n    deck,\n    hasActiveSelection,\n    height,\n    isSelectionModeActivated,\n    onViewStateChange,\n    selectionMode,\n    setSelection,\n    viewState,\n    width,\n  } = useDeckGl({\n    element,\n    fragmentId,\n    height: propsHeight,\n    isFullScreen,\n    isLightTheme: hasLightBackgroundColor(theme),\n    theme,\n    widgetMgr,\n    width: propsWidth,\n  })\n\n  const [isInitialized, setIsInitialized] = useState(false)\n\n  useEffect(() => {\n    // HACK: Load layers a little after loading the map, to hack around a bug\n    // where HexagonLayers were not drawing on first load but did load when the\n    // script got re-executed.\n    setIsInitialized(true)\n  }, [])\n\n  const handleClick = useCallback(\n    (info: PickingInfo) => {\n      if (selectionMode === undefined) {\n        // Safety check\n        return\n      }\n\n      const { index, object } = info\n\n      const layerId = `${info.layer?.id || null}`\n      const currState = selection\n      /** true if a user clicked outside of any layer */\n      const isResetClick = index === -1\n\n      const getSelection = (): DeckGlElementState[\"selection\"] => {\n        if (isResetClick) {\n          return EMPTY_SELECTION\n        }\n\n        switch (selectionMode) {\n          case DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT: {\n            if (currState.selection.indices[layerId]?.[0] === index) {\n              // Unselect the index\n              return EMPTY_SELECTION\n            }\n\n            return {\n              indices: { [`${layerId}`]: [index] },\n              objects: { [`${layerId}`]: [object] },\n            }\n          }\n          case DeckGlJsonChartProto.SelectionMode.MULTI_OBJECT: {\n            const selectionMap: Map<number, unknown> = new Map(\n              ((): [number, unknown][] => {\n                const indices = currState?.selection?.indices?.[layerId] || []\n\n                return indices.map((index, i) => [\n                  index,\n                  currState.selection?.objects?.[layerId]?.[i],\n                ])\n              })()\n            )\n\n            if (selectionMap.has(index)) {\n              // Unselect an existing index\n              selectionMap.delete(index)\n            } else {\n              // Add the newly selected index\n              selectionMap.set(index, object)\n            }\n\n            if (selectionMap.size === 0) {\n              // If the layer has nothing selected, remove the layer from the returned value\n              // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars\n              const { [layerId]: _, ...restIndices } =\n                currState.selection.indices\n              // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars\n              const { [layerId]: __, ...restObjects } =\n                currState.selection.objects\n\n              return {\n                indices: restIndices,\n                objects: restObjects,\n              }\n            }\n\n            return {\n              indices: {\n                ...currState.selection.indices,\n                [`${layerId}`]: Array.from(selectionMap.keys()),\n              },\n              objects: {\n                ...currState.selection.objects,\n                [`${layerId}`]: Array.from(selectionMap.values()),\n              },\n            }\n          }\n          default:\n            assertNever(selectionMode)\n            throw new Error(\"Invalid selection mode\")\n        }\n      }\n\n      const newSelection = getSelection()\n\n      if (\n        JSON.stringify(newSelection) === JSON.stringify(currState.selection)\n      ) {\n        // If the new selection is the same as the current selection, do\n        // nothing, and do not trigger a re-run\n        return\n      }\n\n      setSelection({\n        fromUi: true,\n        value: { selection: newSelection },\n      })\n    },\n    [selectionMode, selection, setSelection]\n  )\n\n  const handleClearSelectionClick = useCallback(() => {\n    setSelection({\n      value: { selection: EMPTY_SELECTION },\n      fromUi: true,\n    })\n  }, [setSelection])\n\n  return (\n    <StyledDeckGlChart\n      className=\"stDeckGlJsonChart\"\n      data-testid=\"stDeckGlJsonChart\"\n      width={width}\n      height={height}\n    >\n      <Toolbar\n        isFullScreen={isFullScreen}\n        disableFullscreenMode={disableFullscreenMode}\n        onExpand={expand}\n        onCollapse={collapse}\n        target={StyledDeckGlChart}\n        locked={hasActiveSelection && !disabled ? true : undefined}\n      >\n        {hasActiveSelection && !disabled && (\n          <ToolbarAction\n            label=\"Clear selection\"\n            onClick={handleClearSelectionClick}\n            icon={Close}\n          />\n        )}\n      </Toolbar>\n      <DeckGL\n        viewState={viewState}\n        onViewStateChange={onViewStateChange}\n        height={height}\n        width={width}\n        layers={isInitialized ? deck.layers : EMPTY_LAYERS}\n        getTooltip={createTooltip}\n        // @ts-expect-error There is a type mismatch due to our versions of the libraries\n        ContextProvider={MapContext.Provider}\n        controller\n        onClick={\n          isSelectionModeActivated && !disabled ? handleClick : undefined\n        }\n      >\n        <StaticMap\n          height={height}\n          width={width}\n          mapStyle={\n            deck.mapStyle &&\n            (typeof deck.mapStyle === \"string\"\n              ? deck.mapStyle\n              : deck.mapStyle[0])\n          }\n          mapboxApiAccessToken={elementMapboxToken || propsMapboxToken}\n        />\n        <StyledNavigationControlContainer>\n          <NavigationControl\n            data-testid=\"stDeckGlJsonChartZoomButton\"\n            showCompass={false}\n          />\n        </StyledNavigationControlContainer>\n      </DeckGL>\n    </StyledDeckGlChart>\n  )\n}\n\nexport default withMapboxToken(\"st.pydeck_chart\")(\n  withFullScreenWrapper(DeckGlJsonChart, true)\n)\n"],"mappings":"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"}