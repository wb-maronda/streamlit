{"version":3,"file":"DeckGlJsonChart.js","names":["React","PureComponent","DeckGL","JSON5","isEqual","MapContext","StaticMap","NavigationControl","withTheme","hasLightBackgroundColor","colorBins","colorCategories","colorContinuous","CartoLayer","layers","JSONConverter","geoLayers","aggregationLayers","meshLayers","CSVLoader","GLTFLoader","registerLoaders","withFullScreenWrapper","withMapboxToken","StyledDeckGlChart","StyledNavigationControlContainer","jsx","_jsx","jsxs","_jsxs","configuration","classes","functions","jsonConverter","DEFAULT_DECK_GL_HEIGHT","DeckGlJsonChart","constructor","arguments","state","viewState","bearing","pitch","zoom","initialized","initialViewState","id","undefined","pydeckJson","isFullScreen","isLightTheme","props","theme","componentDidMount","setState","createTooltip","info","element","object","tooltip","parse","html","interpolate","text","body","matchedVariables","match","forEach","variable","substring","length","hasOwnProperty","replace","properties","onViewStateChange","_ref","getDerivedStateFromProps","deck","getDeckObject","diff","Object","keys","reduce","key","render","className","width","height","children","getTooltip","ContextProvider","Provider","controller","mapStyle","mapboxApiAccessToken","mapboxToken","showCompass","_state$pydeckJson","_state$pydeckJson4","currFullScreen","json","concat","_state$pydeckJson2","assign","_state$pydeckJson3","_state$pydeckJson3$in","useContainerWidth","views","convert"],"sources":["../../../../src/components/elements/DeckGlJsonChart/DeckGlJsonChart.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent, ReactNode } from \"react\"\nimport { DeckGL } from \"deck.gl\"\nimport JSON5 from \"json5\"\nimport isEqual from \"lodash/isEqual\"\nimport { MapContext, StaticMap, NavigationControl } from \"react-map-gl\"\nimport { withTheme } from \"@emotion/react\"\nimport {\n  hasLightBackgroundColor,\n  EmotionTheme,\n} from \"@streamlit/lib/src/theme\"\n// We don't have Typescript defs for these imports, which makes ESLint unhappy\n/* eslint-disable import/no-extraneous-dependencies */\nimport {\n  colorBins,\n  colorCategories,\n  colorContinuous,\n  CartoLayer,\n} from \"@deck.gl/carto\"\nimport * as layers from \"@deck.gl/layers\"\nimport { JSONConverter } from \"@deck.gl/json\"\nimport * as geoLayers from \"@deck.gl/geo-layers\"\nimport * as aggregationLayers from \"@deck.gl/aggregation-layers\"\nimport * as meshLayers from \"@deck.gl/mesh-layers\"\n/* eslint-enable */\n\nimport { CSVLoader } from \"@loaders.gl/csv\"\nimport { GLTFLoader } from \"@loaders.gl/gltf\"\nimport { registerLoaders } from \"@loaders.gl/core\"\n\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\nimport withMapboxToken from \"./withMapboxToken\"\n\nimport { DeckGlJsonChart as DeckGlJsonChartProto } from \"@streamlit/lib/src/proto\"\nimport {\n  StyledDeckGlChart,\n  StyledNavigationControlContainer,\n} from \"./styled-components\"\n\nimport \"mapbox-gl/dist/mapbox-gl.css\"\n\ninterface PickingInfo {\n  object: {\n    [key: string]: any\n  }\n}\n\ninterface DeckObject {\n  initialViewState: {\n    height: number\n    width: number\n  }\n  layers: Record<string, unknown>[]\n  mapStyle?: string | Array<string>\n}\n\nconst configuration = {\n  classes: {\n    ...layers,\n    ...aggregationLayers,\n    ...geoLayers,\n    ...meshLayers,\n    CartoLayer,\n  },\n  functions: {\n    colorBins,\n    colorCategories,\n    colorContinuous,\n  },\n}\n\nregisterLoaders([CSVLoader, GLTFLoader])\n\nconst jsonConverter = new JSONConverter({ configuration })\n\nexport interface DeckGLProps {\n  width: number\n  theme: EmotionTheme\n  mapboxToken: string\n  element: DeckGlJsonChartProto\n  isFullScreen?: boolean\n}\n\nexport interface PropsWithHeight extends DeckGLProps {\n  height?: number\n}\n\nexport interface State {\n  viewState: Record<string, unknown>\n  initialized: boolean\n  initialViewState: Record<string, unknown>\n  id: string | undefined\n  pydeckJson: any\n  isFullScreen: boolean\n  isLightTheme: boolean\n}\n\nexport const DEFAULT_DECK_GL_HEIGHT = 500\n\nexport class DeckGlJsonChart extends PureComponent<PropsWithHeight, State> {\n  readonly state = {\n    viewState: {\n      bearing: 0,\n      pitch: 0,\n      zoom: 11,\n    },\n    initialized: false,\n    initialViewState: {},\n    id: undefined,\n    pydeckJson: undefined,\n    isFullScreen: false,\n    isLightTheme: hasLightBackgroundColor(this.props.theme),\n  }\n\n  componentDidMount = (): void => {\n    // HACK: Load layers a little after loading the map, to hack around a bug\n    // where HexagonLayers were not drawing on first load but did load when the\n    // script got re-executed.\n    this.setState({\n      initialized: true,\n    })\n  }\n\n  static getDerivedStateFromProps(\n    props: Readonly<PropsWithHeight>,\n    state: Partial<State>\n  ): Partial<State> | null {\n    const deck = DeckGlJsonChart.getDeckObject(props, state)\n\n    // If the ViewState on the server has changed, apply the diff to the current state\n    if (!isEqual(deck.initialViewState, state.initialViewState)) {\n      const diff = Object.keys(deck.initialViewState).reduce(\n        (diff, key): any => {\n          // @ts-expect-error\n          if (deck.initialViewState[key] === state.initialViewState[key]) {\n            return diff\n          }\n\n          return {\n            ...diff,\n            // @ts-expect-error\n            [key]: deck.initialViewState[key],\n          }\n        },\n        {}\n      )\n\n      return {\n        viewState: { ...state.viewState, ...diff },\n        initialViewState: deck.initialViewState,\n      }\n    }\n\n    return null\n  }\n\n  static getDeckObject = (\n    props: PropsWithHeight,\n    state: Partial<State>\n  ): DeckObject => {\n    const { element, width, height, theme, isFullScreen } = props\n\n    const currFullScreen = isFullScreen ?? false\n\n    // Only parse JSON when not transitioning to/from fullscreen, the element id changes, or theme changes\n    if (\n      element.id !== state.id ||\n      state.isFullScreen !== currFullScreen ||\n      state.isLightTheme !== hasLightBackgroundColor(theme)\n    ) {\n      state.pydeckJson = JSON5.parse(element.json)\n      state.id = element.id\n    }\n\n    // If unset, use either the Mapbox light or dark style based on Streamlit's theme\n    // For Mapbox styles, see https://docs.mapbox.com/api/maps/styles/#mapbox-styles\n    if (!state.pydeckJson?.mapStyle) {\n      state.pydeckJson.mapStyle = `mapbox://styles/mapbox/${\n        hasLightBackgroundColor(theme) ? \"light\" : \"dark\"\n      }-v9`\n    }\n\n    // Set width and height based on the fullscreen state\n    if (isFullScreen) {\n      Object.assign(state.pydeckJson?.initialViewState, { width, height })\n    } else {\n      if (!state.pydeckJson?.initialViewState?.height) {\n        state.pydeckJson.initialViewState.height = DEFAULT_DECK_GL_HEIGHT\n      }\n      if (element.useContainerWidth) {\n        state.pydeckJson.initialViewState.width = width\n      }\n    }\n\n    state.isFullScreen = isFullScreen\n    state.isLightTheme = hasLightBackgroundColor(theme)\n\n    delete state.pydeckJson?.views // We are not using views. This avoids a console warning.\n\n    return jsonConverter.convert(state.pydeckJson)\n  }\n\n  createTooltip = (info: PickingInfo): Record<string, unknown> | boolean => {\n    const { element } = this.props\n\n    if (!info || !info.object || !element.tooltip) {\n      return false\n    }\n\n    const tooltip = JSON5.parse(element.tooltip)\n\n    // NB: https://deckgl.readthedocs.io/en/latest/tooltip.html\n    if (tooltip.html) {\n      tooltip.html = this.interpolate(info, tooltip.html)\n    } else {\n      tooltip.text = this.interpolate(info, tooltip.text)\n    }\n\n    return tooltip\n  }\n\n  interpolate = (info: PickingInfo, body: string): string => {\n    const matchedVariables = body.match(/{(.*?)}/g)\n    if (matchedVariables) {\n      matchedVariables.forEach((match: string) => {\n        const variable = match.substring(1, match.length - 1)\n\n        if (info.object.hasOwnProperty(variable)) {\n          body = body.replace(match, info.object[variable])\n        } else if (\n          info.object.hasOwnProperty(\"properties\") &&\n          info.object.properties.hasOwnProperty(variable)\n        ) {\n          body = body.replace(match, info.object.properties[variable])\n        }\n      })\n    }\n    return body\n  }\n\n  onViewStateChange = ({ viewState }: State): void => {\n    this.setState({ viewState })\n  }\n\n  render(): ReactNode {\n    const deck = DeckGlJsonChart.getDeckObject(this.props, this.state)\n    const { viewState } = this.state\n    return (\n      <StyledDeckGlChart\n        className=\"stDeckGlJsonChart\"\n        width={deck.initialViewState.width}\n        height={deck.initialViewState.height}\n        data-testid=\"stDeckGlJsonChart\"\n      >\n        <DeckGL\n          viewState={viewState}\n          onViewStateChange={this.onViewStateChange}\n          height={deck.initialViewState.height}\n          width={deck.initialViewState.width}\n          layers={this.state.initialized ? deck.layers : []}\n          getTooltip={this.createTooltip}\n          ContextProvider={MapContext.Provider}\n          controller\n        >\n          <StaticMap\n            height={deck.initialViewState.height}\n            width={deck.initialViewState.width}\n            mapStyle={\n              deck.mapStyle &&\n              (typeof deck.mapStyle === \"string\"\n                ? deck.mapStyle\n                : deck.mapStyle[0])\n            }\n            mapboxApiAccessToken={\n              this.props.element.mapboxToken || this.props.mapboxToken\n            }\n          />\n          <StyledNavigationControlContainer>\n            <NavigationControl className=\"zoomButton\" showCompass={false} />\n          </StyledNavigationControlContainer>\n        </DeckGL>\n      </StyledDeckGlChart>\n    )\n  }\n}\n\nexport default withTheme(\n  withMapboxToken(\"st.pydeck_chart\")(withFullScreenWrapper(DeckGlJsonChart))\n)\n"],"mappings":"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"}