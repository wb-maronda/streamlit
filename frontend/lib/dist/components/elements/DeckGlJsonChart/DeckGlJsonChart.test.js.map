{"version":3,"file":"DeckGlJsonChart.test.js","names":["React","JSON5","render","DeckGlJsonChart","DeckGlJsonChartProto","screen","mockTheme","jsx","_jsx","mockInitialViewState","bearing","latitude","longitude","maxZoom","minZoom","pitch","height","zoom","mockId","jest","mock","hasLightBackgroundColor","fn","getProps","elementProps","arguments","length","undefined","initialViewStateProps","json","initialViewState","layers","autoHighlight","coverage","data","elevationRange","elevationScale","extruded","getPosition","id","pickable","mapStyle","views","controller","element","create","JSON","stringify","width","mapboxToken","theme","emotion","isFullScreen","describe","it","props","deckGlJsonChart","getByTestId","expect","toBeInTheDocument","initialViewStateServer","initialViewStateClient","state","viewState","result","getDerivedStateFromProps","toEqual","deckGlInstance","beforeEach","createTooltip","toBe","object","tooltip","html","elevationValue","properties","unexpectedSchema","newId","newJson","originalState","pydeckJson","initialized","isLightTheme","mockJsonParse","mockReturnValue","parse","afterEach","mockClear","testJsonParsing","description","stateOverride","getDeckObject","not","toHaveBeenCalled","toHaveBeenCalledTimes"],"sources":["../../../../src/components/elements/DeckGlJsonChart/DeckGlJsonChart.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport JSON5 from \"json5\"\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport { DeckGlJsonChart as DeckGlJsonChartProto } from \"@streamlit/lib/src/proto\"\nimport { screen } from \"@testing-library/react\"\nimport \"@testing-library/jest-dom\"\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\nimport { DeckGlJsonChart, PropsWithHeight, State } from \"./DeckGlJsonChart\"\n\nconst mockInitialViewState = {\n  bearing: -27.36,\n  latitude: 52.2323,\n  longitude: -1.415,\n  maxZoom: 15,\n  minZoom: 5,\n  pitch: 40.5,\n  height: 500,\n  zoom: 6,\n}\n\nconst mockId = \"testId\"\njest.mock(\"@streamlit/lib/src/theme\", () => ({\n  hasLightBackgroundColor: jest.fn(() => false),\n}))\n\nconst getProps = (\n  elementProps: Partial<DeckGlJsonChartProto> = {},\n  initialViewStateProps: Record<string, unknown> = {}\n): PropsWithHeight => {\n  const json = {\n    initialViewState: mockInitialViewState,\n    layers: [\n      {\n        \"@@type\": \"HexagonLayer\",\n        autoHighlight: true,\n        coverage: 1,\n        data: \"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv\",\n        elevationRange: [0, 3000],\n        elevationScale: 50,\n        extruded: true,\n        getPosition: \"@@=[lng, lat]\",\n        id: \"0533490f-fcf9-4dc0-8c94-ae4fbd42eb6f\",\n        pickable: true,\n      },\n    ],\n    mapStyle: \"mapbox://styles/mapbox/light-v9\",\n    views: [{ \"@@type\": \"MapView\", controller: true }],\n  }\n\n  json.initialViewState = {\n    ...json.initialViewState,\n    ...initialViewStateProps,\n  }\n\n  return {\n    element: DeckGlJsonChartProto.create({\n      id: mockId,\n      json: JSON.stringify(json),\n      ...elementProps,\n    }),\n    width: 0,\n    mapboxToken: \"mapboxToken\",\n    height: undefined,\n    theme: mockTheme.emotion,\n    isFullScreen: false,\n  }\n}\n\ndescribe(\"DeckGlJsonChart element\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n\n    render(<DeckGlJsonChart {...props} />)\n\n    const deckGlJsonChart = screen.getByTestId(\"stDeckGlJsonChart\")\n    expect(deckGlJsonChart).toBeInTheDocument()\n  })\n\n  it(\"should merge client and server changes in viewState\", () => {\n    const props = getProps()\n    const initialViewStateServer = mockInitialViewState\n\n    const initialViewStateClient = { ...mockInitialViewState, zoom: 8 }\n\n    const state = {\n      viewState: initialViewStateClient,\n      initialViewState: initialViewStateClient,\n    }\n\n    const result = DeckGlJsonChart.getDerivedStateFromProps(props, state)\n\n    expect(result).toEqual({\n      // should match original mockInitialViewState\n      viewState: { ...initialViewStateClient, zoom: 6 },\n      initialViewState: initialViewStateServer,\n    })\n  })\n\n  describe(\"createTooltip\", () => {\n    let deckGlInstance: any\n\n    beforeEach(() => {\n      deckGlInstance = new DeckGlJsonChart({ ...getProps() })\n    })\n\n    it(\"should return false if info is undefined\", () => {\n      const result = deckGlInstance.createTooltip(undefined)\n      expect(result).toBe(false)\n    })\n\n    it(\"should return false if info.object is undefined\", () => {\n      const result = deckGlInstance.createTooltip({})\n      expect(result).toBe(false)\n    })\n\n    it(\"should return false if element.tooltip is undefined\", () => {\n      const result = deckGlInstance.createTooltip({ object: {} })\n      expect(result).toBe(false)\n    })\n\n    it(\"should interpolate the html with the correct object\", () => {\n      deckGlInstance.props.element.tooltip = JSON.stringify({\n        html: \"<b>Elevation Value:</b> {elevationValue}\",\n      })\n      const result = deckGlInstance.createTooltip({\n        object: { elevationValue: 10 },\n      })\n\n      expect(result.html).toBe(\"<b>Elevation Value:</b> 10\")\n    })\n\n    it(\"should interpolate the html from object with a properties field\", () => {\n      deckGlInstance.props.element.tooltip = JSON.stringify({\n        html: \"<b>Elevation Value:</b> {elevationValue}\",\n      })\n      const result = deckGlInstance.createTooltip({\n        object: { properties: { elevationValue: 10 } },\n      })\n\n      expect(result.html).toBe(\"<b>Elevation Value:</b> 10\")\n    })\n\n    it(\"should return the tooltip unchanged when object does have an expected schema\", () => {\n      deckGlInstance.props.element.tooltip = JSON.stringify({\n        html: \"<b>Elevation Value:</b> {elevationValue}\",\n      })\n      const result = deckGlInstance.createTooltip({\n        object: { unexpectedSchema: { elevationValue: 10 } },\n      })\n\n      expect(result.html).toBe(\"<b>Elevation Value:</b> {elevationValue}\")\n    })\n\n    it(\"should interpolate the html with the an empty string\", () => {\n      deckGlInstance.props = getProps({\n        tooltip: \"\",\n      })\n      const result = deckGlInstance.createTooltip({\n        object: { elevationValue: 10 },\n      })\n\n      expect(result.html).toBe(undefined)\n    })\n  })\n\n  describe(\"getDeckObject\", () => {\n    const newId = \"newTestId\"\n    const newJson = {\n      initialViewState: mockInitialViewState,\n      mapStyle: \"mapbox://styles/mapbox/light-v9\",\n    }\n\n    const originalState: State = {\n      pydeckJson: newJson,\n      isFullScreen: false,\n      viewState: {},\n      initialized: false,\n      initialViewState: mockInitialViewState,\n      id: mockId,\n      isLightTheme: false,\n    }\n\n    const mockJsonParse = jest.fn().mockReturnValue(newJson)\n\n    beforeEach(() => {\n      JSON5.parse = mockJsonParse\n    })\n\n    afterEach(() => {\n      mockJsonParse.mockClear()\n    })\n\n    const testJsonParsing = (\n      description: string,\n      stateOverride: Partial<State>\n    ): void => {\n      // the description will be passed in\n      // eslint-disable-next-line jest/valid-title\n      it(description, () => {\n        DeckGlJsonChart.getDeckObject(getProps(), originalState)\n\n        expect(JSON5.parse).not.toHaveBeenCalled()\n\n        DeckGlJsonChart.getDeckObject(getProps(), {\n          ...originalState,\n          ...stateOverride,\n        })\n\n        expect(JSON5.parse).toHaveBeenCalledTimes(1)\n      })\n    }\n\n    testJsonParsing(\n      \"should call JSON5.parse when the element id is different\",\n      { id: newId }\n    )\n    testJsonParsing(\"should call JSON5.parse when FullScreen state changes\", {\n      id: mockId,\n      isFullScreen: true,\n    })\n    testJsonParsing(\"should call JSON5.parse when theme state changes\", {\n      id: mockId,\n      isLightTheme: true,\n    })\n  })\n})\n"],"mappings":"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"}