{"version":3,"file":"DeckGlJsonChart.test.js","names":["React","JSON5","act","screen","renderHook","render","DeckGlJsonChart","DeckGlJsonChartProto","WidgetStateManager","mockTheme","useDeckGl","jsx","_jsx","mockInitialViewState","bearing","latitude","longitude","maxZoom","minZoom","pitch","height","zoom","jest","mock","requireActual","hasLightBackgroundColor","fn","getProps","elementProps","arguments","length","undefined","initialViewStateProps","json","initialViewState","layers","autoHighlight","coverage","data","elevationRange","elevationScale","extruded","getPosition","id","pickable","mapStyle","views","controller","element","create","JSON","stringify","width","mapboxToken","isFullScreen","widgetMgr","sendRerunBackMsg","formsDataChanged","fragmentId","getUseDeckGlProps","isLightTheme","theme","emotion","describe","it","props","deckGlJsonChart","getByTestId","expect","toBeVisible","initialProps","result","current","rerender","viewState","toEqual","createTooltip","toBe","tooltip","object","html","elevationValue","Error","properties","unexpectedSchema","newJson","mockJsonParse","mockReturnValue","beforeEach","parse","afterEach","mockClear","testCases","description","newProps","each","_ref","toHaveBeenCalledTimes","selectionMode","toBeUndefined","SelectionMode","SINGLE_OBJECT","MULTI_OBJECT","isSelectionModeActivated","hasActiveSelection","setSelection","fromUi","value","selection","indices","objects"],"sources":["../../../../src/components/elements/DeckGlJsonChart/DeckGlJsonChart.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport JSON5 from \"json5\"\nimport { act, screen } from \"@testing-library/react\"\nimport { renderHook } from \"@testing-library/react-hooks\"\nimport { PickingInfo } from \"@deck.gl/core/typed\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { DeckGlJsonChart as DeckGlJsonChartProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\nimport \"@testing-library/jest-dom\"\n\nimport { DeckGlJsonChart } from \"./DeckGlJsonChart\"\nimport type { DeckGLProps } from \"./types\"\nimport { useDeckGl, UseDeckGlProps } from \"./useDeckGl\"\n\nconst mockInitialViewState = {\n  bearing: -27.36,\n  latitude: 52.2323,\n  longitude: -1.415,\n  maxZoom: 15,\n  minZoom: 5,\n  pitch: 40.5,\n  height: 500,\n  zoom: 6,\n}\n\njest.mock(\"@streamlit/lib/src/theme\", () => ({\n  ...jest.requireActual(\"@streamlit/lib/src/theme\"),\n  hasLightBackgroundColor: jest.fn(() => false),\n}))\n\nconst getProps = (\n  elementProps: Partial<DeckGlJsonChartProto> = {},\n  initialViewStateProps: Record<string, unknown> = {}\n): DeckGLProps => {\n  const json = {\n    initialViewState: mockInitialViewState,\n    layers: [\n      {\n        \"@@type\": \"HexagonLayer\",\n        autoHighlight: true,\n        coverage: 1,\n        data: \"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv\",\n        elevationRange: [0, 3000],\n        elevationScale: 50,\n        extruded: true,\n        getPosition: \"@@=[lng, lat]\",\n        id: \"0533490f-fcf9-4dc0-8c94-ae4fbd42eb6f\",\n        pickable: true,\n      },\n    ],\n    mapStyle: \"mapbox://styles/mapbox/light-v9\",\n    views: [{ \"@@type\": \"MapView\", controller: true }],\n  }\n\n  json.initialViewState = {\n    ...json.initialViewState,\n    ...initialViewStateProps,\n  }\n\n  return {\n    element: DeckGlJsonChartProto.create({\n      json: JSON.stringify(json),\n      ...elementProps,\n    }),\n    width: 0,\n    mapboxToken: \"mapboxToken\",\n    height: undefined,\n    isFullScreen: false,\n    widgetMgr: new WidgetStateManager({\n      sendRerunBackMsg: jest.fn(),\n      formsDataChanged: jest.fn(),\n    }),\n    fragmentId: \"myFragmentId\",\n  }\n}\n\nconst getUseDeckGlProps = (\n  elementProps: Partial<DeckGlJsonChartProto> = {},\n  initialViewStateProps: Record<string, unknown> = {}\n): UseDeckGlProps => {\n  return {\n    ...getProps(elementProps, initialViewStateProps),\n    isLightTheme: false,\n    theme: mockTheme.emotion,\n  }\n}\n\ndescribe(\"DeckGlJsonChart element\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n\n    render(<DeckGlJsonChart {...props} />)\n\n    const deckGlJsonChart = screen.getByTestId(\"stDeckGlJsonChart\")\n    expect(deckGlJsonChart).toBeVisible()\n  })\n})\n\ndescribe(\"#useDeckGl\", () => {\n  it(\"should merge client and server changes in viewState\", () => {\n    const initialProps = getUseDeckGlProps()\n\n    const {\n      result: { current },\n      rerender,\n    } = renderHook(props => useDeckGl(props), {\n      initialProps,\n    })\n\n    expect(current.viewState).toEqual(mockInitialViewState)\n\n    rerender({\n      ...initialProps,\n      element: getUseDeckGlProps({}, { zoom: 8 }).element,\n    })\n\n    // should match original mockInitialViewState\n    expect(current.viewState).toEqual({ ...mockInitialViewState, zoom: 6 })\n  })\n\n  describe(\"createTooltip\", () => {\n    it(\"should return null if info is null\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps(),\n      })\n\n      expect(current.createTooltip(null)).toBe(null)\n    })\n\n    it(\"should return null if info.object is undefined\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps(),\n      })\n\n      expect(current.createTooltip({} as PickingInfo)).toBe(null)\n    })\n\n    it(\"should return null if element.tooltip is undefined\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps({ tooltip: undefined }),\n      })\n\n      expect(current.createTooltip({ object: {} } as PickingInfo)).toBe(null)\n    })\n\n    it(\"should interpolate the html with the correct object\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps({\n          tooltip: JSON.stringify({\n            html: \"<b>Elevation Value:</b> {elevationValue}\",\n          }),\n        }),\n      })\n\n      const result = current.createTooltip({\n        object: { elevationValue: 10 },\n      } as PickingInfo)\n\n      if (result === null || typeof result !== \"object\") {\n        throw new Error(\"Expected result to be an object\")\n      }\n\n      expect(result.html).toBe(\"<b>Elevation Value:</b> 10\")\n    })\n\n    it(\"should interpolate the html from object with a properties field\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps({\n          tooltip: JSON.stringify({\n            html: \"<b>Elevation Value:</b> {elevationValue}\",\n          }),\n        }),\n      })\n\n      const result = current.createTooltip({\n        object: { properties: { elevationValue: 10 } },\n      } as PickingInfo)\n\n      if (result === null || typeof result !== \"object\") {\n        throw new Error(\"Expected result to be an object\")\n      }\n\n      expect(result.html).toBe(\"<b>Elevation Value:</b> 10\")\n    })\n\n    it(\"should return the tooltip unchanged when object does have an expected schema\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps({\n          tooltip: JSON.stringify({\n            html: \"<b>Elevation Value:</b> {elevationValue}\",\n          }),\n        }),\n      })\n\n      const result = current.createTooltip({\n        object: { unexpectedSchema: { elevationValue: 10 } },\n      } as PickingInfo)\n\n      if (result === null || typeof result !== \"object\") {\n        throw new Error(\"Expected result to be an object\")\n      }\n\n      expect(result.html).toBe(\"<b>Elevation Value:</b> {elevationValue}\")\n    })\n\n    it(\"should interpolate the html with the an empty string\", () => {\n      const {\n        result: { current },\n      } = renderHook(props => useDeckGl(props), {\n        initialProps: getUseDeckGlProps({ tooltip: \"\" }),\n      })\n\n      const result = current.createTooltip({\n        object: { elevationValue: 10 },\n      } as PickingInfo)\n\n      expect(result).toBe(null)\n    })\n  })\n\n  describe(\"deck\", () => {\n    const newJson = {\n      initialViewState: mockInitialViewState,\n      mapStyle: \"mapbox://styles/mapbox/light-v9\",\n    }\n\n    const mockJsonParse = jest.fn().mockReturnValue(newJson)\n\n    beforeEach(() => {\n      JSON5.parse = mockJsonParse\n    })\n\n    afterEach(() => {\n      mockJsonParse.mockClear()\n    })\n\n    const testCases: {\n      description: string\n      newProps: Partial<UseDeckGlProps>\n    }[] = [\n      {\n        description: \"should call JSON5.parse when the json is different\",\n        newProps: getUseDeckGlProps(undefined, { zoom: 19 }),\n      },\n      {\n        description: \"should call JSON5.parse when FullScreen state changes\",\n        newProps: { isFullScreen: true },\n      },\n      {\n        description: \"should call JSON5.parse when theme state changes\",\n        newProps: { isLightTheme: true },\n      },\n    ]\n\n    it.each(testCases)(\"$description\", ({ newProps }) => {\n      const initialProps = getUseDeckGlProps()\n      const { rerender } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n\n      expect(JSON5.parse).toHaveBeenCalledTimes(1)\n\n      rerender({ ...initialProps, ...newProps })\n\n      expect(JSON5.parse).toHaveBeenCalledTimes(2)\n    })\n  })\n\n  describe(\"selectionMode\", () => {\n    it(\"should be undefined when allSelectionModes is empty\", () => {\n      const initialProps = getUseDeckGlProps({ selectionMode: [] })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.selectionMode).toBeUndefined()\n    })\n\n    it(\"should be defined when allSelectionModes has single object select\", () => {\n      const initialProps = getUseDeckGlProps({\n        selectionMode: [DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT],\n      })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.selectionMode).toBe(\n        DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT\n      )\n    })\n\n    it(\"should be defined when allSelectionModes has multi object select\", () => {\n      const initialProps = getUseDeckGlProps({\n        selectionMode: [DeckGlJsonChartProto.SelectionMode.MULTI_OBJECT],\n      })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.selectionMode).toBe(\n        DeckGlJsonChartProto.SelectionMode.MULTI_OBJECT\n      )\n    })\n\n    it(\"should return the first selection mode given, if multiple are given\", () => {\n      const initialProps = getUseDeckGlProps({\n        selectionMode: [\n          DeckGlJsonChartProto.SelectionMode.MULTI_OBJECT,\n          DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT,\n        ],\n      })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.selectionMode).toBe(\n        DeckGlJsonChartProto.SelectionMode.MULTI_OBJECT\n      )\n    })\n  })\n\n  describe(\"isSelectionModeActivated\", () => {\n    it(\"should activate selection mode when selectionMode is defined\", () => {\n      const initialProps = getUseDeckGlProps({\n        selectionMode: [DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT],\n      })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.isSelectionModeActivated).toBe(true)\n    })\n\n    it(\"should not activate selection mode when selectionMode is undefined\", () => {\n      const initialProps = getUseDeckGlProps({ selectionMode: [] })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.isSelectionModeActivated).toBe(false)\n    })\n  })\n\n  describe(\"hasActiveSelection\", () => {\n    it(\"should be false when selection is empty\", () => {\n      const initialProps = getUseDeckGlProps({\n        selectionMode: [DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT],\n      })\n      const { result } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n      expect(result.current.hasActiveSelection).toBe(false)\n    })\n\n    it(\"should be true when selection is not empty\", async () => {\n      const initialProps = getUseDeckGlProps({\n        selectionMode: [DeckGlJsonChartProto.SelectionMode.SINGLE_OBJECT],\n      })\n      const { result, rerender } = renderHook(props => useDeckGl(props), {\n        initialProps,\n      })\n\n      await act(async () => {\n        result.current.setSelection({\n          fromUi: true,\n          value: {\n            selection: {\n              indices: { \"0533490f-fcf9-4dc0-8c94-ae4fbd42eb6f\": [0] },\n              objects: { \"0533490f-fcf9-4dc0-8c94-ae4fbd42eb6f\": [{}] },\n            },\n          },\n        })\n      })\n\n      rerender()\n\n      expect(result.current.hasActiveSelection).toBe(true)\n    })\n  })\n})\n"],"mappings":"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"}