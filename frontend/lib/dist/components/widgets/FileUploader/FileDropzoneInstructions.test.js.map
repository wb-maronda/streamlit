{"version":3,"file":"FileDropzoneInstructions.test.js","names":["React","screen","render","FileDropzoneInstructions","jsx","_jsx","getProps","props","arguments","length","undefined","multiple","acceptedExtensions","maxSizeBytes","describe","it","expect","getByTestId","toBeInTheDocument","getByText"],"sources":["../../../../src/components/widgets/FileUploader/FileDropzoneInstructions.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport FileDropzoneInstructions, { Props } from \"./FileDropzoneInstructions\"\n\nconst getProps = (props: Partial<Props> = {}): Props => ({\n  multiple: true,\n  acceptedExtensions: [],\n  maxSizeBytes: 2000,\n  ...props,\n})\n\ndescribe(\"FileDropzoneInstructions widget\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(<FileDropzoneInstructions {...props} />)\n\n    expect(\n      screen.getByTestId(\"stFileUploaderDropzoneInstructions\")\n    ).toBeInTheDocument()\n  })\n\n  it(\"shows file size limit\", () => {\n    const props = getProps({ maxSizeBytes: 2000 })\n    render(<FileDropzoneInstructions {...props} />)\n\n    expect(screen.getByText(\"Limit 2KB per file\")).toBeInTheDocument()\n  })\n\n  it(\"renders without extensions\", () => {\n    const props = getProps({\n      acceptedExtensions: [],\n    })\n    render(<FileDropzoneInstructions {...props} />)\n    expect(screen.getByText(/per file$/)).toBeInTheDocument()\n  })\n\n  it(\"renders with extensions\", () => {\n    const props = getProps({\n      acceptedExtensions: [\"jpg\", \"csv.gz\", \".png\", \".tar.gz\"],\n    })\n    render(<FileDropzoneInstructions {...props} />)\n    expect(screen.getByText(/â€¢ JPG, CSV.GZ, PNG, TAR.GZ/)).toBeInTheDocument()\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,2BAA2B;AAClC,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,MAAM;AAEf,OAAOC,wBAAwB;AAA6C,SAAAC,GAAA,IAAAC,IAAA;AAE5E,MAAMC,QAAQ,GAAG,SAAAA,CAAA;EAAA,IAACC,KAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OAAa;IACvDG,QAAQ,EAAE,IAAI;IACdC,kBAAkB,EAAE,EAAE;IACtBC,YAAY,EAAE,IAAI;IAClB,GAAGN;EACL,CAAC;AAAA,CAAC;AAEFO,QAAQ,CAAC,iCAAiC,EAAE,MAAM;EAChDC,EAAE,CAAC,0BAA0B,EAAE,MAAM;IACnC,MAAMR,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxBJ,MAAM,eAACG,IAAA,CAACF,wBAAwB;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAE/CS,MAAM,CACJf,MAAM,CAACgB,WAAW,CAAC,oCAAoC,CACzD,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACvB,CAAC,CAAC;EAEFH,EAAE,CAAC,uBAAuB,EAAE,MAAM;IAChC,MAAMR,KAAK,GAAGD,QAAQ,CAAC;MAAEO,YAAY,EAAE;IAAK,CAAC,CAAC;IAC9CX,MAAM,eAACG,IAAA,CAACF,wBAAwB;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAE/CS,MAAM,CAACf,MAAM,CAACkB,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAACD,iBAAiB,CAAC,CAAC;EACpE,CAAC,CAAC;EAEFH,EAAE,CAAC,4BAA4B,EAAE,MAAM;IACrC,MAAMR,KAAK,GAAGD,QAAQ,CAAC;MACrBM,kBAAkB,EAAE;IACtB,CAAC,CAAC;IACFV,MAAM,eAACG,IAAA,CAACF,wBAAwB;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAC/CS,MAAM,CAACf,MAAM,CAACkB,SAAS,CAAC,WAAW,CAAC,CAAC,CAACD,iBAAiB,CAAC,CAAC;EAC3D,CAAC,CAAC;EAEFH,EAAE,CAAC,yBAAyB,EAAE,MAAM;IAClC,MAAMR,KAAK,GAAGD,QAAQ,CAAC;MACrBM,kBAAkB,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;IACzD,CAAC,CAAC;IACFV,MAAM,eAACG,IAAA,CAACF,wBAAwB;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAC/CS,MAAM,CAACf,MAAM,CAACkB,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAACD,iBAAiB,CAAC,CAAC;EAC5E,CAAC,CAAC;AACJ,CAAC,CAAC"}