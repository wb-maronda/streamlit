import _styled from "@emotion/styled/base";
/**
 * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
export const StyledFileDropzoneSection = /*#__PURE__*/_styled("section", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww15"
} : {
  target: "e1b2p2ww15",
  label: "StyledFileDropzoneSection"
})(_ref => {
  let {
    isDisabled,
    theme
  } = _ref;
  return {
    display: "flex",
    alignItems: "center",
    padding: theme.spacing.lg,
    backgroundColor: theme.colors.secondaryBg,
    borderRadius: theme.radii.default,
    ":focus": {
      outline: "none"
    },
    ":focus-visible": {
      boxShadow: "0 0 0 1px ".concat(theme.colors.primary)
    },
    color: isDisabled ? theme.colors.gray : theme.colors.bodyText
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVCeUMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileDropzoneInstructions = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww14"
} : {
  target: "e1b2p2ww14",
  label: "StyledFileDropzoneInstructions"
})(() => ({
  marginRight: "auto",
  alignItems: "center",
  display: "flex"
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdDOEMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileDropzoneInstructionsFileUploaderIcon = /*#__PURE__*/_styled("span", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww13"
} : {
  target: "e1b2p2ww13",
  label: "StyledFileDropzoneInstructionsFileUploaderIcon"
})(_ref2 => {
  let {
    theme
  } = _ref2;
  return {
    color: theme.colors.darkenedBgMix100,
    marginRight: theme.spacing.lg
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThDOEQiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileDropzoneInstructionsStyledSpan = /*#__PURE__*/_styled("span", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww12"
} : {
  target: "e1b2p2ww12",
  label: "StyledFileDropzoneInstructionsStyledSpan"
})(_ref3 => {
  let {
    theme
  } = _ref3;
  return {
    marginBottom: theme.spacing.twoXS
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFEd0QiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileDropzoneInstructionsColumn = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww11"
} : {
  target: "e1b2p2ww11",
  label: "StyledFileDropzoneInstructionsColumn"
})(process.env.NODE_ENV === "production" ? {
  name: "1fttcpj",
  styles: "display:flex;flex-direction:column"
} : {
  name: "1fttcpj",
  styles: "display:flex;flex-direction:column",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJEb0QiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
export const StyledUploadedFiles = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww10"
} : {
  target: "e1b2p2ww10",
  label: "StyledUploadedFiles"
})(_ref4 => {
  let {
    theme
  } = _ref4;
  return {
    left: 0,
    right: 0,
    lineHeight: theme.lineHeights.tight,
    paddingTop: theme.spacing.md,
    paddingLeft: theme.spacing.lg,
    paddingRight: theme.spacing.lg
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdFbUMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledUploadedFilesList = /*#__PURE__*/_styled("ul", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww9"
} : {
  target: "e1b2p2ww9",
  label: "StyledUploadedFilesList"
})(() => ({
  listStyleType: "none",
  marginBottom: 0
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlFdUMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledUploadedFilesListItem = /*#__PURE__*/_styled("li", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww8"
} : {
  target: "e1b2p2ww8",
  label: "StyledUploadedFilesListItem"
})(_ref5 => {
  let {
    theme
  } = _ref5;
  return {
    margin: theme.spacing.none,
    padding: theme.spacing.none
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThFMkMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledUploadedFileData = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww7"
} : {
  target: "e1b2p2ww7",
  label: "StyledUploadedFileData"
})(_ref6 => {
  let {
    theme
  } = _ref6;
  return {
    display: "flex",
    alignItems: "baseline",
    flex: 1,
    paddingLeft: theme.spacing.lg,
    overflow: "hidden"
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Gc0MiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledUploadedFileName = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww6"
} : {
  target: "e1b2p2ww6",
  label: "StyledUploadedFileName"
})(_ref7 => {
  let {
    theme
  } = _ref7;
  return {
    marginRight: theme.spacing.sm,
    marginBottom: theme.spacing.twoXS,
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJGc0MiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledUploadedFile = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww5"
} : {
  target: "e1b2p2ww5",
  label: "StyledUploadedFile"
})(_ref8 => {
  let {
    theme
  } = _ref8;
  return {
    display: "flex",
    alignItems: "center",
    marginBottom: theme.spacing.twoXS
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Ha0MiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledErrorMessage = /*#__PURE__*/_styled("span", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww4"
} : {
  target: "e1b2p2ww4",
  label: "StyledErrorMessage"
})(_ref9 => {
  let {
    theme
  } = _ref9;
  return {
    marginRight: theme.spacing.twoXS
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlHa0MiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileIcon = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww3"
} : {
  target: "e1b2p2ww3",
  label: "StyledFileIcon"
})(_ref10 => {
  let {
    theme
  } = _ref10;
  return {
    display: "flex",
    padding: theme.spacing.twoXS,
    color: theme.colors.darkenedBgMix100
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZHOEIiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileError = /*#__PURE__*/_styled("small", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww2"
} : {
  target: "e1b2p2ww2",
  label: "StyledFileError"
})(_ref11 => {
  let {
    theme
  } = _ref11;
  return {
    color: theme.colors.danger,
    fontSize: theme.fontSizes.sm,
    height: theme.fontSizes.sm,
    lineHeight: theme.fontSizes.sm,
    display: "flex",
    alignItems: "center",
    whiteSpace: "nowrap"
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1IK0IiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
export const StyledFileErrorIcon = /*#__PURE__*/_styled("span", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww1"
} : {
  target: "e1b2p2ww1",
  label: "StyledFileErrorIcon"
})(process.env.NODE_ENV === "production" ? {
  name: "0",
  styles: ""
} : {
  name: "0",
  styles: "",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZIbUMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const compactFileUploader = theme => ({
  [StyledFileDropzoneSection]: {
    display: "flex",
    flexDirection: "column",
    alignItems: "flex-start"
  },
  [StyledFileDropzoneInstructions]: {
    marginBottom: theme.spacing.lg
  },
  [StyledFileDropzoneInstructionsFileUploaderIcon]: {
    display: "none"
  },
  [StyledUploadedFiles]: {
    paddingRight: theme.spacing.lg
  },
  [StyledUploadedFile]: {
    maxWidth: "inherit",
    flex: 1,
    alignItems: "flex-start",
    marginBottom: theme.spacing.sm
  },
  [StyledUploadedFileName]: {
    width: theme.sizes.full
  },
  [StyledUploadedFileData]: {
    flexDirection: "column"
  },
  [StyledFileError]: {
    height: "auto",
    whiteSpace: "initial"
  },
  [StyledFileErrorIcon]: {
    display: "none"
  },
  [StyledUploadedFilesListItem]: {
    margin: theme.spacing.none,
    padding: theme.spacing.none
  }
});
export const StyledFileUploader = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1b2p2ww0"
} : {
  target: "e1b2p2ww0",
  label: "StyledFileUploader"
})(_ref12 => {
  let {
    theme
  } = _ref12;
  if (theme.inSidebar) {
    return compactFileUploader(theme);
  }
  return {
    ["@media (max-width: ".concat(theme.breakpoints.sm, ")")]: compactFileUploader(theme)
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvRmlsZVVwbG9hZGVyL3N0eWxlZC1jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVLa0MiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvd2lkZ2V0cy9GaWxlVXBsb2FkZXIvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCwgeyBDU1NPYmplY3QgfSBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcbmltcG9ydCB7IEVtb3Rpb25UaGVtZSB9IGZyb20gXCJAc3RyZWFtbGl0L2xpYi9zcmMvdGhlbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEZpbGVEcm9wem9uZSB7XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZVNlY3Rpb24gPSBzdHlsZWQuc2VjdGlvbjxTdHlsZWRGaWxlRHJvcHpvbmU+KFxuICAoeyBpc0Rpc2FibGVkLCB0aGVtZSB9KSA9PiAoe1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5sZyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgICBib3JkZXJSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgXCI6Zm9jdXNcIjoge1xuICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgfSxcbiAgICBcIjpmb2N1cy12aXNpYmxlXCI6IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDFweCAke3RoZW1lLmNvbG9ycy5wcmltYXJ5fWAsXG4gICAgfSxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IHRoZW1lLmNvbG9ycy5ncmF5IDogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zID0gc3R5bGVkLmRpdigoKSA9PiAoe1xuICBtYXJnaW5SaWdodDogXCJhdXRvXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uID0gc3R5bGVkLnNwYW4oXG4gICh7IHRoZW1lIH0pID0+ICh7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5kYXJrZW5lZEJnTWl4MTAwLFxuICAgIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICB9KVxuKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zU3R5bGVkU3BhbiA9IHN0eWxlZC5zcGFuKFxuICAoeyB0aGVtZSB9KSA9PiAoe1xuICAgIG1hcmdpbkJvdHRvbTogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgfSlcbilcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVEcm9wem9uZUluc3RydWN0aW9uc0NvbHVtbiA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVzID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBsZWZ0OiAwLFxuICByaWdodDogMCxcbiAgbGluZUhlaWdodDogdGhlbWUubGluZUhlaWdodHMudGlnaHQsXG4gIHBhZGRpbmdUb3A6IHRoZW1lLnNwYWNpbmcubWQsXG4gIHBhZGRpbmdMZWZ0OiB0aGVtZS5zcGFjaW5nLmxnLFxuICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubGcsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0ID0gc3R5bGVkLnVsKCgpID0+ICh7XG4gIGxpc3RTdHlsZVR5cGU6IFwibm9uZVwiLFxuICBtYXJnaW5Cb3R0b206IDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZXNMaXN0SXRlbSA9IHN0eWxlZC5saSgoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgcGFkZGluZzogdGhlbWUuc3BhY2luZy5ub25lLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRVcGxvYWRlZEZpbGVEYXRhID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJiYXNlbGluZVwiLFxuICBmbGV4OiAxLFxuICBwYWRkaW5nTGVmdDogdGhlbWUuc3BhY2luZy5sZyxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZFVwbG9hZGVkRmlsZU5hbWUgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnNtLFxuICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgd2hpdGVTcGFjZTogXCJub3dyYXBcIixcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkVXBsb2FkZWRGaWxlID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRFcnJvck1lc3NhZ2UgPSBzdHlsZWQuc3BhbigoeyB0aGVtZSB9KSA9PiAoe1xuICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkRmlsZUljb24gPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnR3b1hTLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhcmtlbmVkQmdNaXgxMDAsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvciA9IHN0eWxlZC5zbWFsbCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuY29sb3JzLmRhbmdlcixcbiAgZm9udFNpemU6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgaGVpZ2h0OiB0aGVtZS5mb250U2l6ZXMuc20sXG4gIGxpbmVIZWlnaHQ6IHRoZW1lLmZvbnRTaXplcy5zbSxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG59KSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVFcnJvckljb24gPSBzdHlsZWQuc3Bhbih7fSlcblxuY29uc3QgY29tcGFjdEZpbGVVcGxvYWRlciA9ICh0aGVtZTogRW1vdGlvblRoZW1lKTogQ1NTT2JqZWN0ID0+ICh7XG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVTZWN0aW9uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgIGFsaWduSXRlbXM6IFwiZmxleC1zdGFydFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZURyb3B6b25lSW5zdHJ1Y3Rpb25zIGFzIGFueV06IHtcbiAgICBtYXJnaW5Cb3R0b206IHRoZW1lLnNwYWNpbmcubGcsXG4gIH0sXG4gIFtTdHlsZWRGaWxlRHJvcHpvbmVJbnN0cnVjdGlvbnNGaWxlVXBsb2FkZXJJY29uIGFzIGFueV06IHtcbiAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZXMgYXMgYW55XToge1xuICAgIHBhZGRpbmdSaWdodDogdGhlbWUuc3BhY2luZy5sZyxcbiAgfSxcbiAgW1N0eWxlZFVwbG9hZGVkRmlsZSBhcyBhbnldOiB7XG4gICAgbWF4V2lkdGg6IFwiaW5oZXJpdFwiLFxuICAgIGZsZXg6IDEsXG4gICAgYWxpZ25JdGVtczogXCJmbGV4LXN0YXJ0XCIsXG4gICAgbWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnNtLFxuICB9LFxuICBbU3R5bGVkVXBsb2FkZWRGaWxlTmFtZSBhcyBhbnldOiB7XG4gICAgd2lkdGg6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVEYXRhIGFzIGFueV06IHtcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9yIGFzIGFueV06IHtcbiAgICBoZWlnaHQ6IFwiYXV0b1wiLFxuICAgIHdoaXRlU3BhY2U6IFwiaW5pdGlhbFwiLFxuICB9LFxuICBbU3R5bGVkRmlsZUVycm9ySWNvbiBhcyBhbnldOiB7XG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gIH0sXG4gIFtTdHlsZWRVcGxvYWRlZEZpbGVzTGlzdEl0ZW0gYXMgYW55XToge1xuICAgIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICAgIHBhZGRpbmc6IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgfSxcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWxlVXBsb2FkZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+IHtcbiAgaWYgKHRoZW1lLmluU2lkZWJhcikge1xuICAgIHJldHVybiBjb21wYWN0RmlsZVVwbG9hZGVyKHRoZW1lKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBbYEBtZWRpYSAobWF4LXdpZHRoOiAke3RoZW1lLmJyZWFrcG9pbnRzLnNtfSlgXTpcbiAgICAgIGNvbXBhY3RGaWxlVXBsb2FkZXIodGhlbWUpLFxuICB9XG59KVxuIl19 */");
//# sourceMappingURL=styled-components.js.map