{"version":3,"file":"FileUploader.test.js","names":["React","fireEvent","screen","waitFor","within","userEvent","render","FileUploader","FileUploaderProto","FileUploaderState","FileUploaderStateProto","FileURLs","FileURLsProto","LabelVisibilityMessage","LabelVisibilityMessageProto","UploadedFileInfo","UploadedFileInfoProto","WidgetStateManager","jsx","_jsx","createFile","filename","arguments","length","undefined","File","type","lastModified","buildFileUploaderStateProto","fileUrlsArray","uploadedFileInfo","map","fileUrls","fileId","name","size","getProps","elementProps","widgetProps","element","create","id","maxUploadSizeMb","width","disabled","widgetMgr","sendRerunBackMsg","jest","fn","formsDataChanged","uploadClient","uploadFile","mockImplementation","Promise","resolve","fetchFileURLs","acceptedFiles","file","uploadUrl","deleteUrl","deleteFile","describe","it","props","fileUploaderElement","getByTestId","expect","toBeInTheDocument","setFileUploaderStateValue","fromUi","fileNameNode","getByText","label","labelNode","labelVisibility","value","LabelVisibilityOptions","HIDDEN","not","toBeVisible","COLLAPSED","user","setup","spyOn","fileDropZoneInput","fileToUpload","upload","fileName","textContent","toContain","files","toEqual","toHaveBeenCalledWith","fragmentId","multipleFiles","fileDropZone","filesToUpload","drop","dataTransfer","types","toHaveBeenCalledTimes","fileElements","getAllByTestId","toBe","errors","firstFile","secondFile","currentFiles","items","kind","getAsFile","fileNames","errorFileNames","toHaveBeenLastCalledWith","firstDeleteBtn","click","getByRole","fileNamesAfterDelete","progressBar","deleteBtn","queryAllByTestId","mockRejectedValue","Error","formId","setFormSubmitBehaviors","rerender","submitForm"],"sources":["../../../../src/components/widgets/FileUploader/FileUploader.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"@testing-library/jest-dom\"\nimport React from \"react\"\n\nimport { fireEvent, screen, waitFor, within } from \"@testing-library/react\"\nimport userEvent from \"@testing-library/user-event\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport {\n  FileUploader as FileUploaderProto,\n  FileUploaderState as FileUploaderStateProto,\n  FileURLs as FileURLsProto,\n  IFileURLs,\n  LabelVisibilityMessage as LabelVisibilityMessageProto,\n  UploadedFileInfo as UploadedFileInfoProto,\n} from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\nimport FileUploader, { Props } from \"./FileUploader\"\n\nconst createFile = (filename = \"filename.txt\"): File => {\n  return new File([\"Text in a file!\"], filename, {\n    type: \"text/plain\",\n    lastModified: 0,\n  })\n}\n\nconst buildFileUploaderStateProto = (\n  fileUrlsArray: IFileURLs[]\n): FileUploaderStateProto =>\n  new FileUploaderStateProto({\n    uploadedFileInfo: fileUrlsArray.map(\n      fileUrls =>\n        new UploadedFileInfoProto({\n          fileId: fileUrls.fileId,\n          fileUrls,\n          name: fileUrls.fileId,\n          size: 15,\n        })\n    ),\n  })\n\nconst getProps = (\n  elementProps: Partial<FileUploaderProto> = {},\n  widgetProps: Partial<Props> = {}\n): Props => {\n  return {\n    element: FileUploaderProto.create({\n      id: \"id\",\n      type: [],\n      maxUploadSizeMb: 50,\n      ...elementProps,\n    }),\n    width: 0,\n    disabled: false,\n    widgetMgr: new WidgetStateManager({\n      sendRerunBackMsg: jest.fn(),\n      formsDataChanged: jest.fn(),\n    }),\n    // @ts-expect-error\n    uploadClient: {\n      uploadFile: jest.fn().mockImplementation(() => {\n        return Promise.resolve()\n      }),\n      fetchFileURLs: jest.fn().mockImplementation((acceptedFiles: File[]) => {\n        return Promise.resolve(\n          acceptedFiles.map(file => {\n            return new FileURLsProto({\n              fileId: file.name,\n              uploadUrl: file.name,\n              deleteUrl: file.name,\n            })\n          })\n        )\n      }),\n      deleteFile: jest.fn(),\n    },\n    ...widgetProps,\n  }\n}\n\ndescribe(\"FileUploader widget tests\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(<FileUploader {...props} />)\n    const fileUploaderElement = screen.getByTestId(\"stFileUploader\")\n    expect(fileUploaderElement).toBeInTheDocument()\n  })\n\n  it(\"sets initial value properly non-empty\", () => {\n    const props = getProps()\n    const { element, widgetMgr } = props\n\n    widgetMgr.setFileUploaderStateValue(\n      element,\n      buildFileUploaderStateProto([\n        new FileURLsProto({\n          fileId: \"filename.txt\",\n          uploadUrl: \"filename.txt\",\n          deleteUrl: \"filename.txt\",\n        }),\n      ]),\n      { fromUi: false },\n      undefined\n    )\n\n    render(<FileUploader {...props} />)\n    const fileNameNode = screen.getByText(\"filename.txt\")\n    expect(fileNameNode).toBeInTheDocument()\n  })\n\n  it(\"shows a label\", () => {\n    const props = getProps({ label: \"Test label\" })\n    render(<FileUploader {...props} />)\n\n    const labelNode = screen.getByText(\"Test label\")\n    expect(labelNode).toBeInTheDocument()\n  })\n\n  it(\"pass labelVisibility prop to StyledWidgetLabel correctly when hidden\", () => {\n    const props = getProps({\n      label: \"Test label\",\n      labelVisibility: {\n        value: LabelVisibilityMessageProto.LabelVisibilityOptions.HIDDEN,\n      },\n    })\n    render(<FileUploader {...props} />)\n\n    const labelNode = screen.getByText(\"Test label\")\n    expect(labelNode).toBeInTheDocument()\n    expect(labelNode).not.toBeVisible()\n  })\n\n  it(\"pass labelVisibility prop to StyledWidgetLabel correctly when collapsed\", () => {\n    const props = getProps({\n      label: \"Test label\",\n      labelVisibility: {\n        value: LabelVisibilityMessageProto.LabelVisibilityOptions.COLLAPSED,\n      },\n    })\n    render(<FileUploader {...props} />)\n\n    const labelNode = screen.getByText(\"Test label\")\n    expect(labelNode).toBeInTheDocument()\n    expect(labelNode).not.toBeVisible()\n  })\n\n  it(\"uploads a single file upload\", async () => {\n    const user = userEvent.setup()\n    const props = getProps()\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    const fileToUpload = createFile()\n\n    await user.upload(fileDropZoneInput, fileToUpload)\n\n    const fileName = screen.getByTestId(\"stFileUploaderFile\")\n    expect(fileName.textContent).toContain(\"filename.txt\")\n    expect(fileDropZoneInput.files?.[0]).toEqual(fileToUpload)\n\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename.txt\",\n          uploadUrl: \"filename.txt\",\n          deleteUrl: \"filename.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n  })\n\n  it(\"can pass fragmentId to setFileUploaderStateValue\", async () => {\n    const user = userEvent.setup()\n    const props = getProps(undefined, { fragmentId: \"myFragmentId\" })\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    const fileToUpload = createFile()\n    await user.upload(fileDropZoneInput, fileToUpload)\n\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename.txt\",\n          uploadUrl: \"filename.txt\",\n          deleteUrl: \"filename.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      \"myFragmentId\"\n    )\n  })\n\n  it(\"uploads a single file even if too many files are selected\", async () => {\n    const props = getProps({ multipleFiles: false })\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZone = screen.getByTestId(\n      \"stFileUploaderDropzone\"\n    ) as HTMLElement\n\n    const filesToUpload = [\n      new File([\"Text in a file!\"], \"filename1.txt\", {\n        type: \"text/plain\",\n        lastModified: 0,\n      }),\n      new File([\"Text in an another file!\"], \"filename2.txt\", {\n        type: \"text/plain\",\n        lastModified: 0,\n      }),\n      new File([\"Another text in an another file!\"], \"filename3.txt\", {\n        type: \"text/plain\",\n        lastModified: 0,\n      }),\n    ]\n\n    fireEvent.drop(fileDropZone, {\n      dataTransfer: {\n        types: [\"Files\", \"Files\", \"Files\"],\n        files: filesToUpload,\n      },\n    })\n\n    await waitFor(() =>\n      expect(props.uploadClient.uploadFile).toHaveBeenCalledTimes(1)\n    )\n\n    const fileElements = screen.getAllByTestId(\"stFileUploaderFile\")\n    // We should have 3 files. One will be uploading, the other two will\n    // be in the error state.\n    expect(fileElements.length).toBe(3)\n    expect(fileElements[0].textContent).toContain(\"filename1.txt\")\n\n    const errors = screen.getAllByTestId(\"stFileUploaderFileErrorMessage\")\n\n    expect(errors.length).toBe(2)\n    expect(errors[0].textContent).toContain(\"Only one file is allowed.\")\n    expect(errors[1].textContent).toContain(\"Only one file is allowed.\")\n\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename1.txt\",\n          uploadUrl: \"filename1.txt\",\n          deleteUrl: \"filename1.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n  })\n  it(\"replaces file on single file uploader\", async () => {\n    const user = userEvent.setup()\n    const props = getProps()\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    const firstFile = createFile()\n\n    await user.upload(fileDropZoneInput, firstFile)\n\n    const fileName = screen.getByTestId(\"stFileUploaderFile\")\n    expect(fileName.textContent).toContain(\"filename.txt\")\n    expect(fileDropZoneInput.files?.[0]).toEqual(firstFile)\n\n    expect(props.uploadClient.uploadFile).toHaveBeenCalledTimes(1)\n    // setFileUploaderStateValue should have been called once on init and once\n    // when the file was uploaded.\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledTimes(2)\n\n    const secondFile = new File([\"Another text in a file\"], \"filename2.txt\", {\n      type: \"text/plain\",\n      lastModified: 0,\n    })\n\n    // Upload a replacement file\n    await user.upload(fileDropZoneInput, secondFile)\n\n    const currentFiles = screen.getAllByTestId(\"stFileUploaderFile\")\n    expect(currentFiles.length).toBe(1)\n    expect(currentFiles[0].textContent).toContain(\"filename2.txt\")\n    expect(fileDropZoneInput.files?.[0]).toEqual(secondFile)\n    expect(props.uploadClient.uploadFile).toHaveBeenCalledTimes(2)\n    // setFileUploaderStateValue should have been called once on init and\n    // once each for the first and second file uploads.\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledTimes(3)\n  })\n\n  it(\"uploads multiple files, even if some have errors\", async () => {\n    const props = getProps({ multipleFiles: true, type: [\".txt\"] })\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZone = screen.getByTestId(\n      \"stFileUploaderDropzone\"\n    ) as HTMLElement\n\n    const filesToUpload = [\n      new File([\"Text in a file!\"], \"filename1.txt\", {\n        type: \"text/plain\",\n        lastModified: 0,\n      }),\n      new File([\"Text in a file?\"], \"filename2.txt\", {\n        type: \"text/plain\",\n        lastModified: 0,\n      }),\n      new File([\"Another PDF file\"], \"anotherpdffile.pdf\", {\n        type: \"application/pdf\",\n        lastModified: 0,\n      }),\n    ]\n\n    fireEvent.drop(fileDropZone, {\n      dataTransfer: {\n        types: [\"Files\"],\n        files: filesToUpload,\n        items: filesToUpload.map(file => ({\n          kind: \"file\",\n          type: file.type,\n          getAsFile: () => file,\n        })),\n      },\n    })\n\n    await waitFor(() =>\n      expect(props.uploadClient.uploadFile).toHaveBeenCalledTimes(2)\n    )\n\n    const fileNames = screen.getAllByTestId(\"stFileUploaderFile\")\n    expect(fileNames.length).toBe(3)\n\n    const errorFileNames = screen.getAllByTestId(\n      \"stFileUploaderFileErrorMessage\"\n    )\n    expect(errorFileNames.length).toBe(1)\n\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename1.txt\",\n          uploadUrl: \"filename1.txt\",\n          deleteUrl: \"filename1.txt\",\n        },\n        {\n          fileId: \"filename2.txt\",\n          uploadUrl: \"filename2.txt\",\n          deleteUrl: \"filename2.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n  })\n\n  it(\"can delete completed upload\", async () => {\n    const user = userEvent.setup()\n    const props = getProps({ multipleFiles: true })\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    // Upload two files\n    await user.upload(fileDropZoneInput, createFile(\"filename1.txt\"))\n    await user.upload(fileDropZoneInput, createFile(\"filename2.txt\"))\n\n    const fileNames = screen.getAllByTestId(\"stFileUploaderFile\")\n    expect(fileNames.length).toBe(2)\n    expect(fileNames[0].textContent).toContain(\"filename2.txt\")\n    expect(fileNames[1].textContent).toContain(\"filename1.txt\")\n\n    // WidgetStateManager should have been called with our two file IDs and first time with empty state\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledTimes(3)\n\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenLastCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename1.txt\",\n          uploadUrl: \"filename1.txt\",\n          deleteUrl: \"filename1.txt\",\n        },\n        {\n          fileId: \"filename2.txt\",\n          uploadUrl: \"filename2.txt\",\n          deleteUrl: \"filename2.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n\n    const firstDeleteBtn = screen.getAllByTestId(\"stFileUploaderDeleteBtn\")[0]\n\n    await user.click(within(firstDeleteBtn).getByRole(\"button\"))\n\n    // We should only have a single file - the second file from the original upload list (filename1.txt).\n    const fileNamesAfterDelete = screen.getAllByTestId(\"stFileUploaderFile\")\n    expect(fileNamesAfterDelete.length).toBe(1)\n    expect(fileNamesAfterDelete[0].textContent).toContain(\"filename1.txt\")\n\n    // WidgetStateManager should have been called with the file ID\n    // of the remaining file. This should be the fourth time WidgetStateManager\n    // has been updated.\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledTimes(4)\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenLastCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename1.txt\",\n          uploadUrl: \"filename1.txt\",\n          deleteUrl: \"filename1.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n  })\n\n  it(\"can delete in-progress upload\", async () => {\n    const user = userEvent.setup()\n    const props = getProps()\n\n    // Mock the uploadFile method to return a promise that never resolves to test updating state\n    props.uploadClient.uploadFile = jest.fn().mockImplementation(() => {\n      return new Promise(() => {})\n    })\n\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    await user.upload(fileDropZoneInput, createFile())\n\n    const progressBar = screen.getByRole(\"progressbar\")\n    expect(progressBar).toBeInTheDocument()\n\n    // and then immediately delete it before upload \"completes\"\n    const deleteBtn = screen.getByTestId(\"stFileUploaderDeleteBtn\")\n\n    await user.click(within(deleteBtn).getByRole(\"button\"))\n\n    const fileNames = screen.queryAllByTestId(\"stFileUploaderFile\")\n    expect(fileNames.length).toBe(0)\n\n    // WidgetStateManager will still have been called once, during component mounting\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledTimes(1)\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledWith(\n      props.element,\n      buildFileUploaderStateProto([]),\n      {\n        fromUi: false,\n      },\n      undefined\n    )\n  })\n\n  it(\"can delete file with ErrorStatus\", async () => {\n    const user = userEvent.setup()\n    const props = getProps({ multipleFiles: false, type: [\".txt\"] })\n    render(<FileUploader {...props} />)\n\n    const fileDropZone = screen.getByTestId(\n      \"stFileUploaderDropzone\"\n    ) as HTMLElement\n\n    const filesToUpload = [\n      new File([\"Another PDF file\"], \"anotherpdffile.pdf\", {\n        type: \"application/pdf\",\n        lastModified: 0,\n      }),\n    ]\n\n    // Drop a file with an error (wrong extension)\n    fireEvent.drop(fileDropZone, {\n      dataTransfer: {\n        types: [\"Files\"],\n        files: filesToUpload,\n        items: filesToUpload.map(file => ({\n          kind: \"file\",\n          type: file.type,\n          getAsFile: () => file,\n        })),\n      },\n    })\n\n    await waitFor(() =>\n      expect(screen.getAllByTestId(\"stFileUploaderFile\").length).toBe(1)\n    )\n\n    const errorFileNames = screen.getAllByTestId(\n      \"stFileUploaderFileErrorMessage\"\n    )\n    expect(errorFileNames.length).toBe(1)\n\n    // Delete the file\n    const firstDeleteBtn = screen.getAllByTestId(\"stFileUploaderDeleteBtn\")[0]\n\n    await user.click(within(firstDeleteBtn).getByRole(\"button\"))\n\n    // File should be gone\n    const fileNamesAfterDelete = screen.queryAllByTestId(\"stFileUploaderFile\")\n    expect(fileNamesAfterDelete.length).toBe(0)\n  })\n\n  it(\"handles upload error\", async () => {\n    const user = userEvent.setup()\n    const props = getProps()\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    // Upload a file that will be rejected by the server\n    props.uploadClient.uploadFile = jest\n      .fn()\n      .mockRejectedValue(new Error(\"random upload error!\"))\n\n    await user.upload(fileDropZoneInput, createFile())\n\n    // Our file should have an error status\n    const errorFileNames = screen.getByTestId(\"stFileUploaderFileErrorMessage\")\n    expect(errorFileNames.textContent).toContain(\"random upload error!\")\n  })\n\n  it(\"shows an ErrorStatus when File extension is not allowed\", async () => {\n    const props = getProps({ multipleFiles: false, type: [\".png\"] })\n    render(<FileUploader {...props} />)\n\n    const fileDropZone = screen.getByTestId(\n      \"stFileUploaderDropzone\"\n    ) as HTMLElement\n\n    const filesToUpload = [\n      new File([\"TXT file\"], \"txtfile.txt\", {\n        type: \"text/plain\",\n        lastModified: 0,\n      }),\n    ]\n\n    // Drop a file with an error (wrong extension)\n    fireEvent.drop(fileDropZone, {\n      dataTransfer: {\n        types: [\"Files\"],\n        files: filesToUpload,\n        items: filesToUpload.map(file => ({\n          kind: \"file\",\n          type: file.type,\n          getAsFile: () => file,\n        })),\n      },\n    })\n\n    await waitFor(() =>\n      expect(screen.getAllByTestId(\"stFileUploaderFile\").length).toBe(1)\n    )\n\n    const errorFileNames = screen.getByTestId(\"stFileUploaderFileErrorMessage\")\n    expect(errorFileNames.textContent).toContain(\n      \"text/plain files are not allowed.\"\n    )\n  })\n\n  it(\"shows an ErrorStatus when maxUploadSizeMb = 0\", async () => {\n    const user = userEvent.setup()\n    const props = getProps({ maxUploadSizeMb: 0 })\n    render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    await user.upload(fileDropZoneInput, createFile())\n\n    const errorFileNames = screen.getByTestId(\"stFileUploaderFileErrorMessage\")\n    expect(errorFileNames.textContent).toContain(\n      \"File must be 0.0B or smaller.\"\n    )\n  })\n\n  it(\"resets its value when form is cleared\", async () => {\n    const user = userEvent.setup()\n\n    // Create a widget in a clearOnSubmit form\n    const props = getProps({ formId: \"form\" })\n    jest.spyOn(props.widgetMgr, \"setFileUploaderStateValue\")\n    props.widgetMgr.setFormSubmitBehaviors(\"form\", true)\n\n    jest.spyOn(props.widgetMgr, \"setIntValue\")\n\n    const { rerender } = render(<FileUploader {...props} />)\n\n    const fileDropZoneInput = screen.getByTestId(\n      \"stFileUploaderDropzoneInput\"\n    ) as HTMLInputElement\n\n    // Upload a single file\n    await user.upload(fileDropZoneInput, createFile())\n\n    const fileName = screen.getByTestId(\"stFileUploaderFile\")\n    expect(fileName.textContent).toContain(\"filename.txt\")\n\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenCalledWith(\n      props.element,\n      buildFileUploaderStateProto([\n        {\n          fileId: \"filename.txt\",\n          uploadUrl: \"filename.txt\",\n          deleteUrl: \"filename.txt\",\n        },\n      ]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n\n    // \"Submit\" the form\n    props.widgetMgr.submitForm(\"form\", undefined)\n    rerender(<FileUploader {...props} />)\n\n    // Our widget should be reset, and the widgetMgr should be updated\n    const fileNames = screen.queryAllByTestId(\"stFileUploaderFile\")\n    expect(fileNames.length).toBe(0)\n\n    // WidgetStateManager will still have been called once, during component mounting\n    expect(props.widgetMgr.setFileUploaderStateValue).toHaveBeenLastCalledWith(\n      props.element,\n      buildFileUploaderStateProto([]),\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n  })\n})\n"],"mappings":"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"}