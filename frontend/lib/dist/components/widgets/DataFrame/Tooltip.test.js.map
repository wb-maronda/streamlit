{"version":3,"file":"Tooltip.test.js","names":["React","screen","render","Tooltip","jsx","_jsx","describe","defaultProps","top","left","content","clearTooltip","jest","fn","test","tooltipContent","getByText","expect","toBeInTheDocument","toHaveStyle","customPositionProps","invisibleDiv","getByTestId"],"sources":["../../../../src/components/widgets/DataFrame/Tooltip.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { screen } from \"@testing-library/react\"\n\nimport \"@testing-library/jest-dom\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport Tooltip, { TooltipProps } from \"./Tooltip\"\n\ndescribe(\"Dataframe Tooltip\", () => {\n  const defaultProps: TooltipProps = {\n    top: 100,\n    left: 100,\n    content: \"**This is a tooltip.**\",\n    clearTooltip: jest.fn(),\n  }\n\n  test(\"renders the tooltip with provided content\", () => {\n    render(<Tooltip {...defaultProps} />)\n\n    const tooltipContent = screen.getByText(\"This is a tooltip.\")\n    expect(tooltipContent).toBeInTheDocument()\n    // Uses markdown to render the content:\n    expect(tooltipContent).toHaveStyle(\"font-weight: bold\")\n  })\n\n  test(\"renders the tooltip at the correct position\", () => {\n    const customPositionProps: TooltipProps = {\n      top: 200,\n      left: 300,\n      content: \"Positioned tooltip.\",\n      clearTooltip: jest.fn(),\n    }\n\n    render(<Tooltip {...customPositionProps} />)\n\n    const tooltipContent = screen.getByText(\"Positioned tooltip.\")\n    expect(tooltipContent).toBeInTheDocument()\n\n    const invisibleDiv = screen.getByTestId(\"stTooltipTarget\")\n\n    expect(invisibleDiv).toHaveStyle(\"position: fixed\")\n    expect(invisibleDiv).toHaveStyle(\"top: 200px\")\n    expect(invisibleDiv).toHaveStyle(\"left: 300px\")\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,OAAO,2BAA2B;AAElC,SAASC,MAAM;AAEf,OAAOC,OAAO;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAEjDC,QAAQ,CAAC,mBAAmB,EAAE,MAAM;EAClC,MAAMC,YAA0B,GAAG;IACjCC,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,GAAG;IACTC,OAAO,EAAE,wBAAwB;IACjCC,YAAY,EAAEC,IAAI,CAACC,EAAE,CAAC;EACxB,CAAC;EAEDC,IAAI,CAAC,2CAA2C,EAAE,MAAM;IACtDZ,MAAM,eAACG,IAAA,CAACF,OAAO;MAAA,GAAKI;IAAY,CAAG,CAAC,CAAC;IAErC,MAAMQ,cAAc,GAAGd,MAAM,CAACe,SAAS,CAAC,oBAAoB,CAAC;IAC7DC,MAAM,CAACF,cAAc,CAAC,CAACG,iBAAiB,CAAC,CAAC;IAC1C;IACAD,MAAM,CAACF,cAAc,CAAC,CAACI,WAAW,CAAC,mBAAmB,CAAC;EACzD,CAAC,CAAC;EAEFL,IAAI,CAAC,6CAA6C,EAAE,MAAM;IACxD,MAAMM,mBAAiC,GAAG;MACxCZ,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE,GAAG;MACTC,OAAO,EAAE,qBAAqB;MAC9BC,YAAY,EAAEC,IAAI,CAACC,EAAE,CAAC;IACxB,CAAC;IAEDX,MAAM,eAACG,IAAA,CAACF,OAAO;MAAA,GAAKiB;IAAmB,CAAG,CAAC,CAAC;IAE5C,MAAML,cAAc,GAAGd,MAAM,CAACe,SAAS,CAAC,qBAAqB,CAAC;IAC9DC,MAAM,CAACF,cAAc,CAAC,CAACG,iBAAiB,CAAC,CAAC;IAE1C,MAAMG,YAAY,GAAGpB,MAAM,CAACqB,WAAW,CAAC,iBAAiB,CAAC;IAE1DL,MAAM,CAACI,YAAY,CAAC,CAACF,WAAW,CAAC,iBAAiB,CAAC;IACnDF,MAAM,CAACI,YAAY,CAAC,CAACF,WAAW,CAAC,YAAY,CAAC;IAC9CF,MAAM,CAACI,YAAY,CAAC,CAACF,WAAW,CAAC,aAAa,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC,CAAC"}