{"version":3,"file":"useTableSizer.test.js","names":["renderHook","act","Arrow","ArrowProto","TEN_BY_TEN","UNICODE","VERY_TALL","useTableSizer","calculateMaxHeight","describe","it","CONTAINER_WIDTH","TABLE_WIDTH","result","create","data","useContainerWidth","width","expect","current","resizableSize","toEqual","maxWidth","NUMBER_OF_ROWS","TABLE_HEIGHT","height","maxHeight","CONTAINER_HEIGHT","NEW_WIDTH","NEW_HEIGHT","setResizableSize"],"sources":["../../../../../src/components/widgets/DataFrame/hooks/useTableSizer.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderHook, act } from \"@testing-library/react-hooks\"\n\nimport { Arrow as ArrowProto } from \"@streamlit/lib/src/proto\"\nimport { TEN_BY_TEN, UNICODE, VERY_TALL } from \"@streamlit/lib/src/mocks/arrow\"\n\nimport useTableSizer, { calculateMaxHeight } from \"./useTableSizer\"\n\ndescribe(\"useTableSizer hook\", () => {\n  it(\"applies the configured width\", () => {\n    // The width of the surrounding containers\n    const CONTAINER_WIDTH = 700\n    const TABLE_WIDTH = 350\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: TEN_BY_TEN,\n          useContainerWidth: false,\n          width: TABLE_WIDTH,\n        }),\n        10,\n        CONTAINER_WIDTH\n      )\n    )\n\n    expect(result.current.resizableSize.width).toEqual(TABLE_WIDTH)\n    expect(result.current.maxWidth).toEqual(CONTAINER_WIDTH)\n  })\n\n  it(\"adapts to the surrounding container width\", () => {\n    // The width of the surrounding containers\n    const CONTAINER_WIDTH = 200\n    const TABLE_WIDTH = 350\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: TEN_BY_TEN,\n          useContainerWidth: false,\n          width: TABLE_WIDTH,\n        }),\n        10,\n        CONTAINER_WIDTH\n      )\n    )\n\n    expect(result.current.resizableSize.width).toEqual(CONTAINER_WIDTH)\n    expect(result.current.maxWidth).toEqual(CONTAINER_WIDTH)\n  })\n\n  it(\"applies the configured height\", () => {\n    const NUMBER_OF_ROWS = 10\n    const TABLE_HEIGHT = 100\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: TEN_BY_TEN,\n          useContainerWidth: false,\n          height: TABLE_HEIGHT,\n        }),\n        NUMBER_OF_ROWS,\n        700\n      )\n    )\n\n    expect(result.current.resizableSize.height).toEqual(TABLE_HEIGHT)\n    // +1 rows for header row\n    expect(result.current.maxHeight).toEqual(\n      calculateMaxHeight(NUMBER_OF_ROWS + 1)\n    )\n  })\n\n  it(\"applies useContainerWidth configuration\", () => {\n    // The width of the surrounding containers\n    const CONTAINER_WIDTH = 700\n    const TABLE_WIDTH = 350\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: TEN_BY_TEN,\n          useContainerWidth: true,\n          width: TABLE_WIDTH,\n        }),\n        10,\n        CONTAINER_WIDTH\n      )\n    )\n\n    expect(result.current.resizableSize.width).toEqual(CONTAINER_WIDTH)\n    expect(result.current.maxWidth).toEqual(CONTAINER_WIDTH)\n  })\n\n  it(\"calculates correct container dimensions for a table\", () => {\n    // The width of the surrounding containers\n    const CONTAINER_WIDTH = 700\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: UNICODE,\n          useContainerWidth: false,\n        }),\n        2, // Unicode table has 2 rows\n        CONTAINER_WIDTH\n      )\n    )\n\n    // This is expected to be 100% to adapt to whatever width the glide data grid calculates\n    expect(result.current.resizableSize.width).toEqual(\"100%\")\n    expect(result.current.maxWidth).toEqual(CONTAINER_WIDTH)\n  })\n\n  it(\"calculates correct container dimensions for fullscreen mode\", () => {\n    // The width of the surrounding containers\n    const CONTAINER_WIDTH = 1920\n    const CONTAINER_HEIGHT = 1080\n\n    const TABLE_WIDTH = 350\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: VERY_TALL,\n          useContainerWidth: true,\n          width: TABLE_WIDTH,\n        }),\n        100, // VERY_TALL table has 100 rows\n        CONTAINER_WIDTH,\n        CONTAINER_HEIGHT,\n        true\n      )\n    )\n\n    expect(result.current.maxWidth).toEqual(CONTAINER_WIDTH)\n    expect(result.current.maxHeight).toEqual(CONTAINER_HEIGHT)\n    expect(result.current.resizableSize.width).toEqual(CONTAINER_WIDTH)\n    expect(result.current.resizableSize.height).toEqual(CONTAINER_HEIGHT)\n  })\n\n  it(\"adapts size on resizing\", () => {\n    // The width of the surrounding containers\n    const CONTAINER_WIDTH = 700\n    const TABLE_WIDTH = 350\n    const NUMBER_OF_ROWS = 10 // TEN_BY_TEN has 10 rows\n    const { result } = renderHook(() =>\n      useTableSizer(\n        ArrowProto.create({\n          data: TEN_BY_TEN,\n          useContainerWidth: false,\n          width: TABLE_WIDTH,\n        }),\n        NUMBER_OF_ROWS,\n        CONTAINER_WIDTH\n      )\n    )\n\n    const NEW_WIDTH = 100\n    const NEW_HEIGHT = 100\n\n    act(() => {\n      const { setResizableSize } = result.current\n      setResizableSize?.({\n        width: NEW_WIDTH,\n        height: NEW_HEIGHT,\n      })\n    })\n\n    expect(result.current.resizableSize.width).toEqual(NEW_WIDTH)\n    expect(result.current.resizableSize.height).toEqual(NEW_HEIGHT)\n    expect(result.current.maxWidth).toEqual(CONTAINER_WIDTH)\n    // +1 rows for header row\n    expect(result.current.maxHeight).toEqual(\n      calculateMaxHeight(NUMBER_OF_ROWS + 1)\n    )\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,GAAG,QAAQ,8BAA8B;AAE9D,SAASC,KAAK,IAAIC,UAAU;AAC5B,SAASC,UAAU,EAAEC,OAAO,EAAEC,SAAS;AAEvC,OAAOC,aAAa,IAAIC,kBAAkB;AAE1CC,QAAQ,CAAC,oBAAoB,EAAE,MAAM;EACnCC,EAAE,CAAC,8BAA8B,EAAE,MAAM;IACvC;IACA,MAAMC,eAAe,GAAG,GAAG;IAC3B,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAM;MAAEC;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAEX,UAAU;MAChBY,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAEL;IACT,CAAC,CAAC,EACF,EAAE,EACFD,eACF,CACF,CAAC;IAEDO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACH,KAAK,CAAC,CAACI,OAAO,CAACT,WAAW,CAAC;IAC/DM,MAAM,CAACL,MAAM,CAACM,OAAO,CAACG,QAAQ,CAAC,CAACD,OAAO,CAACV,eAAe,CAAC;EAC1D,CAAC,CAAC;EAEFD,EAAE,CAAC,2CAA2C,EAAE,MAAM;IACpD;IACA,MAAMC,eAAe,GAAG,GAAG;IAC3B,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAM;MAAEC;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAEX,UAAU;MAChBY,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAEL;IACT,CAAC,CAAC,EACF,EAAE,EACFD,eACF,CACF,CAAC;IAEDO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACH,KAAK,CAAC,CAACI,OAAO,CAACV,eAAe,CAAC;IACnEO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACG,QAAQ,CAAC,CAACD,OAAO,CAACV,eAAe,CAAC;EAC1D,CAAC,CAAC;EAEFD,EAAE,CAAC,+BAA+B,EAAE,MAAM;IACxC,MAAMa,cAAc,GAAG,EAAE;IACzB,MAAMC,YAAY,GAAG,GAAG;IACxB,MAAM;MAAEX;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAEX,UAAU;MAChBY,iBAAiB,EAAE,KAAK;MACxBS,MAAM,EAAED;IACV,CAAC,CAAC,EACFD,cAAc,EACd,GACF,CACF,CAAC;IAEDL,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACK,MAAM,CAAC,CAACJ,OAAO,CAACG,YAAY,CAAC;IACjE;IACAN,MAAM,CAACL,MAAM,CAACM,OAAO,CAACO,SAAS,CAAC,CAACL,OAAO,CACtCb,kBAAkB,CAACe,cAAc,GAAG,CAAC,CACvC,CAAC;EACH,CAAC,CAAC;EAEFb,EAAE,CAAC,yCAAyC,EAAE,MAAM;IAClD;IACA,MAAMC,eAAe,GAAG,GAAG;IAC3B,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAM;MAAEC;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAEX,UAAU;MAChBY,iBAAiB,EAAE,IAAI;MACvBC,KAAK,EAAEL;IACT,CAAC,CAAC,EACF,EAAE,EACFD,eACF,CACF,CAAC;IAEDO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACH,KAAK,CAAC,CAACI,OAAO,CAACV,eAAe,CAAC;IACnEO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACG,QAAQ,CAAC,CAACD,OAAO,CAACV,eAAe,CAAC;EAC1D,CAAC,CAAC;EAEFD,EAAE,CAAC,qDAAqD,EAAE,MAAM;IAC9D;IACA,MAAMC,eAAe,GAAG,GAAG;IAC3B,MAAM;MAAEE;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAEV,OAAO;MACbW,iBAAiB,EAAE;IACrB,CAAC,CAAC,EACF,CAAC;IAAE;IACHL,eACF,CACF,CAAC;;IAED;IACAO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,MAAM,CAAC;IAC1DH,MAAM,CAACL,MAAM,CAACM,OAAO,CAACG,QAAQ,CAAC,CAACD,OAAO,CAACV,eAAe,CAAC;EAC1D,CAAC,CAAC;EAEFD,EAAE,CAAC,6DAA6D,EAAE,MAAM;IACtE;IACA,MAAMC,eAAe,GAAG,IAAI;IAC5B,MAAMgB,gBAAgB,GAAG,IAAI;IAE7B,MAAMf,WAAW,GAAG,GAAG;IACvB,MAAM;MAAEC;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAET,SAAS;MACfU,iBAAiB,EAAE,IAAI;MACvBC,KAAK,EAAEL;IACT,CAAC,CAAC,EACF,GAAG;IAAE;IACLD,eAAe,EACfgB,gBAAgB,EAChB,IACF,CACF,CAAC;IAEDT,MAAM,CAACL,MAAM,CAACM,OAAO,CAACG,QAAQ,CAAC,CAACD,OAAO,CAACV,eAAe,CAAC;IACxDO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACO,SAAS,CAAC,CAACL,OAAO,CAACM,gBAAgB,CAAC;IAC1DT,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACH,KAAK,CAAC,CAACI,OAAO,CAACV,eAAe,CAAC;IACnEO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACK,MAAM,CAAC,CAACJ,OAAO,CAACM,gBAAgB,CAAC;EACvE,CAAC,CAAC;EAEFjB,EAAE,CAAC,yBAAyB,EAAE,MAAM;IAClC;IACA,MAAMC,eAAe,GAAG,GAAG;IAC3B,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAMW,cAAc,GAAG,EAAE,EAAC;IAC1B,MAAM;MAAEV;IAAO,CAAC,GAAGb,UAAU,CAAC,MAC5BO,aAAa,CACXJ,UAAU,CAACW,MAAM,CAAC;MAChBC,IAAI,EAAEX,UAAU;MAChBY,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAEL;IACT,CAAC,CAAC,EACFW,cAAc,EACdZ,eACF,CACF,CAAC;IAED,MAAMiB,SAAS,GAAG,GAAG;IACrB,MAAMC,UAAU,GAAG,GAAG;IAEtB5B,GAAG,CAAC,MAAM;MACR,MAAM;QAAE6B;MAAiB,CAAC,GAAGjB,MAAM,CAACM,OAAO;MAC3CW,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAG;QACjBb,KAAK,EAAEW,SAAS;QAChBH,MAAM,EAAEI;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFX,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACH,KAAK,CAAC,CAACI,OAAO,CAACO,SAAS,CAAC;IAC7DV,MAAM,CAACL,MAAM,CAACM,OAAO,CAACC,aAAa,CAACK,MAAM,CAAC,CAACJ,OAAO,CAACQ,UAAU,CAAC;IAC/DX,MAAM,CAACL,MAAM,CAACM,OAAO,CAACG,QAAQ,CAAC,CAACD,OAAO,CAACV,eAAe,CAAC;IACxD;IACAO,MAAM,CAACL,MAAM,CAACM,OAAO,CAACO,SAAS,CAAC,CAACL,OAAO,CACtCb,kBAAkB,CAACe,cAAc,GAAG,CAAC,CACvC,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}