{"version":3,"file":"useColumnLoader.test.js","names":["renderHook","Quiver","Arrow","ArrowProto","UNICODE","CheckboxColumn","ListColumn","NumberColumn","ObjectColumn","SelectboxColumn","TextColumn","useColumnLoader","applyColumnConfig","COLUMN_POSITION_PREFIX","COLUMN_WIDTH_MAPPING","getColumnConfig","getColumnType","INDEX_IDENTIFIER","MOCK_COLUMNS","id","name","title","indexNumber","arrowType","pandas_type","numpy_type","isEditable","isHidden","isIndex","isStretched","describe","it","columnConfig","Map","width","disabled","type_config","type","hidden","alignment","required","default","column1","expect","toBe","small","columnTypeOptions","toEqual","column2","undefined","contentAlignment","isRequired","defaultValue","emptyColumnConfig","element","create","data","columns","JSON","stringify","c1","c2","size","get","each","typeName","columnCreator","columnType","result","current","length","columnOrder","useContainerWidth","column","editingMode","EditingMode","FIXED","icon","DYNAMIC","READ_ONLY"],"sources":["../../../../../src/components/widgets/DataFrame/hooks/useColumnLoader.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderHook } from \"@testing-library/react-hooks\"\n\nimport { Quiver } from \"@streamlit/lib/src/dataframes/Quiver\"\nimport { Arrow as ArrowProto } from \"@streamlit/lib/src/proto\"\nimport { UNICODE } from \"@streamlit/lib/src/mocks/arrow\"\nimport {\n  BaseColumn,\n  CheckboxColumn,\n  ColumnCreator,\n  ListColumn,\n  NumberColumn,\n  ObjectColumn,\n  SelectboxColumn,\n  TextColumn,\n} from \"@streamlit/lib/src/components/widgets/DataFrame/columns\"\n\nimport useColumnLoader, {\n  applyColumnConfig,\n  COLUMN_POSITION_PREFIX,\n  COLUMN_WIDTH_MAPPING,\n  ColumnConfigProps,\n  getColumnConfig,\n  getColumnType,\n  INDEX_IDENTIFIER,\n} from \"./useColumnLoader\"\n\nconst MOCK_COLUMNS: BaseColumn[] = [\n  NumberColumn({\n    id: \"index_col\",\n    name: \"\",\n    title: \"\",\n    indexNumber: 0,\n    arrowType: {\n      pandas_type: \"int64\",\n      numpy_type: \"int64\",\n    },\n    isEditable: false,\n    isHidden: false,\n    isIndex: true,\n    isStretched: false,\n  }),\n  NumberColumn({\n    id: \"column_1\",\n    name: \"column_1\",\n    title: \"column_1\",\n    indexNumber: 1,\n    arrowType: {\n      pandas_type: \"int64\",\n      numpy_type: \"int64\",\n    },\n    isEditable: false,\n    isHidden: false,\n    isIndex: false,\n    isStretched: false,\n  }),\n  TextColumn({\n    id: \"column_2\",\n    name: \"column_2\",\n    title: \"column_2\",\n    indexNumber: 2,\n    arrowType: {\n      pandas_type: \"unicode\",\n      numpy_type: \"object\",\n    },\n    isEditable: false,\n    isHidden: false,\n    isIndex: false,\n    isStretched: false,\n  }),\n]\n\ndescribe(\"applyColumnConfig\", () => {\n  it(\"should correctly apply the use-defined column config\", () => {\n    const columnConfig: Map<string | number, ColumnConfigProps> = new Map([\n      [\n        \"column_1\",\n        {\n          width: \"small\",\n          disabled: false,\n          type_config: {\n            type: \"text\",\n          },\n        } as ColumnConfigProps,\n      ],\n      [\n        \"column_2\",\n        {\n          disabled: true,\n          hidden: true,\n          alignment: \"center\",\n          required: true,\n          default: \"this is the default\",\n        } as ColumnConfigProps,\n      ],\n    ])\n\n    const column1 = applyColumnConfig(MOCK_COLUMNS[1], columnConfig)\n    expect(column1.isEditable).toBe(true)\n    expect(column1.width).toBe(COLUMN_WIDTH_MAPPING.small)\n    expect((column1.columnTypeOptions as any).type).toBe(\"text\")\n    expect(column1).toEqual({\n      ...MOCK_COLUMNS[1],\n      width: COLUMN_WIDTH_MAPPING.small,\n      isEditable: true,\n      columnTypeOptions: {\n        type: \"text\",\n      },\n    })\n\n    const column2 = applyColumnConfig(MOCK_COLUMNS[2], columnConfig)\n    expect(column2.isEditable).toBe(false)\n    expect(column2.width).toBe(undefined)\n    expect(column2.contentAlignment).toBe(\"center\")\n    expect(column2.isHidden).toBe(true)\n    expect(column2.isRequired).toBe(true)\n    expect(column2.defaultValue).toBe(\"this is the default\")\n    expect(column2).toEqual({\n      ...MOCK_COLUMNS[2],\n      isHidden: true,\n      contentAlignment: \"center\",\n      defaultValue: \"this is the default\",\n      isRequired: true,\n    })\n  })\n\n  it(\"allows configuring the index via `index` as ID\", () => {\n    const columnConfig: Map<string | number, ColumnConfigProps> = new Map([\n      [\n        INDEX_IDENTIFIER,\n        {\n          width: \"small\",\n        },\n      ],\n    ])\n\n    const column1 = applyColumnConfig(MOCK_COLUMNS[0], columnConfig)\n    expect(column1.width).toBe(COLUMN_WIDTH_MAPPING.small)\n    expect(column1.isIndex).toBe(true)\n\n    const column2 = applyColumnConfig(MOCK_COLUMNS[1], columnConfig)\n    expect(column2.width).toBe(undefined)\n    expect(column2.isIndex).toBe(false)\n  })\n\n  it(\"allows configuring a column via numeric ID\", () => {\n    const columnConfig: Map<string | number, ColumnConfigProps> = new Map([\n      [\n        `${COLUMN_POSITION_PREFIX}0`,\n        {\n          width: \"small\",\n        },\n      ],\n    ])\n\n    const column1 = applyColumnConfig(MOCK_COLUMNS[0], columnConfig)\n    expect(column1.width).toBe(COLUMN_WIDTH_MAPPING.small)\n  })\n\n  it(\"works with empty column configs\", () => {\n    const emptyColumnConfig: Map<string | number, ColumnConfigProps> = new Map(\n      []\n    )\n\n    const column1 = applyColumnConfig(MOCK_COLUMNS[0], emptyColumnConfig)\n    expect(column1).toBe(MOCK_COLUMNS[0])\n  })\n})\n\ndescribe(\"getColumnConfig\", () => {\n  it(\"extract the column config from the proto element\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      columns: JSON.stringify({\n        c1: {\n          width: \"small\",\n          hidden: true,\n        },\n        c2: {\n          width: \"medium\",\n          alignment: \"center\",\n        },\n      }),\n    })\n\n    const columnConfig = getColumnConfig(element.columns)\n    expect(columnConfig.size).toBe(2)\n    expect(columnConfig.get(\"c1\")).toEqual({\n      width: \"small\",\n      hidden: true,\n    })\n    expect(columnConfig.get(\"c2\")).toEqual({\n      width: \"medium\",\n      alignment: \"center\",\n    })\n  })\n})\n\ndescribe(\"getColumnType\", () => {\n  it(\"determines the correct column type creator\", () => {\n    const column1 = getColumnType(MOCK_COLUMNS[1])\n    expect(column1).toBe(NumberColumn)\n\n    const column2 = getColumnType(MOCK_COLUMNS[2])\n    expect(column2).toBe(TextColumn)\n  })\n\n  it.each([\n    [\"object\", ObjectColumn],\n    [\"text\", TextColumn],\n    [\"checkbox\", CheckboxColumn],\n    [\"selectbox\", SelectboxColumn],\n    [\"list\", ListColumn],\n    [\"number\", NumberColumn],\n  ])(\n    \"maps user-specified type to column type (%p parsed as %p)\",\n    (typeName: string, columnCreator: ColumnCreator) => {\n      const columnType = getColumnType({\n        id: \"column_1\",\n        name: \"column_1\",\n        title: \"column_1\",\n        indexNumber: 1,\n        arrowType: {\n          pandas_type: \"int64\",\n          numpy_type: \"int64\",\n        },\n        isEditable: false,\n        isHidden: false,\n        isIndex: false,\n        isStretched: false,\n        columnTypeOptions: {\n          type: typeName,\n        },\n      })\n      expect(columnType).toEqual(columnCreator)\n    }\n  )\n})\n\ndescribe(\"useColumnLoader hook\", () => {\n  it(\"creates columns from the Arrow data\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n    })\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    const { columns } = result.current\n\n    expect(columns.length).toBe(3)\n\n    expect(columns[0].title).toBe(\"\")\n    expect(columns[0].isIndex).toBe(true)\n\n    expect(columns[1].title).toBe(\"c1\")\n    expect(columns[1].isIndex).toBe(false)\n\n    expect(columns[2].title).toBe(\"c2\")\n    expect(columns[2].isIndex).toBe(false)\n  })\n\n  it(\"reorders columns when specified via column order\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      columnOrder: [\"c2\", \"c1\"],\n    })\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    const { columns } = result.current\n\n    expect(columns.length).toBe(3)\n\n    expect(columns[0].title).toBe(\"\")\n    expect(columns[0].isIndex).toBe(true)\n\n    expect(columns[1].title).toBe(\"c2\")\n    expect(columns[1].isIndex).toBe(false)\n\n    expect(columns[2].title).toBe(\"c1\")\n    expect(columns[2].isIndex).toBe(false)\n  })\n\n  it(\"hides columns not specified in column order\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      columnOrder: [\"c2\"],\n    })\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    const { columns } = result.current\n\n    expect(columns.length).toBe(2)\n\n    expect(columns[0].title).toBe(\"\")\n    expect(columns[0].isIndex).toBe(true)\n\n    expect(columns[1].title).toBe(\"c2\")\n    expect(columns[1].isIndex).toBe(false)\n  })\n\n  it(\"activates colum stretch if configured by user\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      useContainerWidth: true,\n    })\n\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    for (const column of result.current.columns) {\n      expect(column.isStretched).toBe(true)\n    }\n  })\n\n  it(\"configures the editable icon for editable columns\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      useContainerWidth: true,\n      editingMode: ArrowProto.EditingMode.FIXED,\n    })\n\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    for (const column of result.current.columns) {\n      expect(column.icon).toBe(\"editable\")\n    }\n  })\n\n  it(\"disallows hidden for editable columns that are required for dynamic editing\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      editingMode: ArrowProto.EditingMode.DYNAMIC,\n      columns: JSON.stringify({\n        c1: {\n          required: true,\n          hidden: true,\n        },\n      }),\n    })\n\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    expect(result.current.columns[1].isRequired).toBe(true)\n    expect(result.current.columns[1].isHidden).toBe(false)\n  })\n\n  it(\"respects hiding required columns for fixed editing\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      editingMode: ArrowProto.EditingMode.FIXED,\n      columns: JSON.stringify({\n        c1: {\n          required: true,\n          hidden: true,\n        },\n      }),\n    })\n\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    // Test that the column is hidden (not part of columns).\n    // Column with index 1 should be c2:\n    expect(result.current.columns[1].name).toBe(\"c2\")\n  })\n\n  it(\"doesn't configure any icon for non-editable columns\", () => {\n    const element = ArrowProto.create({\n      data: UNICODE,\n      useContainerWidth: true,\n      editingMode: ArrowProto.EditingMode.READ_ONLY,\n    })\n\n    const data = new Quiver(element)\n\n    const { result } = renderHook(() => {\n      return useColumnLoader(element, data, false)\n    })\n\n    for (const column of result.current.columns) {\n      expect(column.icon).toBe(undefined)\n    }\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,8BAA8B;AAEzD,SAASC,MAAM;AACf,SAASC,KAAK,IAAIC,UAAU;AAC5B,SAASC,OAAO;AAChB,SAEEC,cAAc,EAEdC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,eAAe,EACfC,UAAU;AAGZ,OAAOC,eAAe,IACpBC,iBAAiB,EACjBC,sBAAsB,EACtBC,oBAAoB,EAEpBC,eAAe,EACfC,aAAa,EACbC,gBAAgB;AAGlB,MAAMC,YAA0B,GAAG,CACjCX,YAAY,CAAC;EACXY,EAAE,EAAE,WAAW;EACfC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE;IACTC,WAAW,EAAE,OAAO;IACpBC,UAAU,EAAE;EACd,CAAC;EACDC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE;AACf,CAAC,CAAC,EACFtB,YAAY,CAAC;EACXY,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE;IACTC,WAAW,EAAE,OAAO;IACpBC,UAAU,EAAE;EACd,CAAC;EACDC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE;AACf,CAAC,CAAC,EACFnB,UAAU,CAAC;EACTS,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE;IACTC,WAAW,EAAE,SAAS;IACtBC,UAAU,EAAE;EACd,CAAC;EACDC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE;AACf,CAAC,CAAC,CACH;AAEDC,QAAQ,CAAC,mBAAmB,EAAE,MAAM;EAClCC,EAAE,CAAC,sDAAsD,EAAE,MAAM;IAC/D,MAAMC,YAAqD,GAAG,IAAIC,GAAG,CAAC,CACpE,CACE,UAAU,EACV;MACEC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE;QACXC,IAAI,EAAE;MACR;IACF,CAAC,CACF,EACD,CACE,UAAU,EACV;MACEF,QAAQ,EAAE,IAAI;MACdG,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,QAAQ;MACnBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE;IACX,CAAC,CACF,CACF,CAAC;IAEF,MAAMC,OAAO,GAAG9B,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEc,YAAY,CAAC;IAChEW,MAAM,CAACD,OAAO,CAAChB,UAAU,CAAC,CAACkB,IAAI,CAAC,IAAI,CAAC;IACrCD,MAAM,CAACD,OAAO,CAACR,KAAK,CAAC,CAACU,IAAI,CAAC9B,oBAAoB,CAAC+B,KAAK,CAAC;IACtDF,MAAM,CAAED,OAAO,CAACI,iBAAiB,CAAST,IAAI,CAAC,CAACO,IAAI,CAAC,MAAM,CAAC;IAC5DD,MAAM,CAACD,OAAO,CAAC,CAACK,OAAO,CAAC;MACtB,GAAG7B,YAAY,CAAC,CAAC,CAAC;MAClBgB,KAAK,EAAEpB,oBAAoB,CAAC+B,KAAK;MACjCnB,UAAU,EAAE,IAAI;MAChBoB,iBAAiB,EAAE;QACjBT,IAAI,EAAE;MACR;IACF,CAAC,CAAC;IAEF,MAAMW,OAAO,GAAGpC,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEc,YAAY,CAAC;IAChEW,MAAM,CAACK,OAAO,CAACtB,UAAU,CAAC,CAACkB,IAAI,CAAC,KAAK,CAAC;IACtCD,MAAM,CAACK,OAAO,CAACd,KAAK,CAAC,CAACU,IAAI,CAACK,SAAS,CAAC;IACrCN,MAAM,CAACK,OAAO,CAACE,gBAAgB,CAAC,CAACN,IAAI,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACK,OAAO,CAACrB,QAAQ,CAAC,CAACiB,IAAI,CAAC,IAAI,CAAC;IACnCD,MAAM,CAACK,OAAO,CAACG,UAAU,CAAC,CAACP,IAAI,CAAC,IAAI,CAAC;IACrCD,MAAM,CAACK,OAAO,CAACI,YAAY,CAAC,CAACR,IAAI,CAAC,qBAAqB,CAAC;IACxDD,MAAM,CAACK,OAAO,CAAC,CAACD,OAAO,CAAC;MACtB,GAAG7B,YAAY,CAAC,CAAC,CAAC;MAClBS,QAAQ,EAAE,IAAI;MACduB,gBAAgB,EAAE,QAAQ;MAC1BE,YAAY,EAAE,qBAAqB;MACnCD,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFpB,EAAE,CAAC,gDAAgD,EAAE,MAAM;IACzD,MAAMC,YAAqD,GAAG,IAAIC,GAAG,CAAC,CACpE,CACEhB,gBAAgB,EAChB;MACEiB,KAAK,EAAE;IACT,CAAC,CACF,CACF,CAAC;IAEF,MAAMQ,OAAO,GAAG9B,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEc,YAAY,CAAC;IAChEW,MAAM,CAACD,OAAO,CAACR,KAAK,CAAC,CAACU,IAAI,CAAC9B,oBAAoB,CAAC+B,KAAK,CAAC;IACtDF,MAAM,CAACD,OAAO,CAACd,OAAO,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC;IAElC,MAAMI,OAAO,GAAGpC,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEc,YAAY,CAAC;IAChEW,MAAM,CAACK,OAAO,CAACd,KAAK,CAAC,CAACU,IAAI,CAACK,SAAS,CAAC;IACrCN,MAAM,CAACK,OAAO,CAACpB,OAAO,CAAC,CAACgB,IAAI,CAAC,KAAK,CAAC;EACrC,CAAC,CAAC;EAEFb,EAAE,CAAC,4CAA4C,EAAE,MAAM;IACrD,MAAMC,YAAqD,GAAG,IAAIC,GAAG,CAAC,CACpE,CACG,GAAEpB,sBAAuB,GAAE,EAC5B;MACEqB,KAAK,EAAE;IACT,CAAC,CACF,CACF,CAAC;IAEF,MAAMQ,OAAO,GAAG9B,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEc,YAAY,CAAC;IAChEW,MAAM,CAACD,OAAO,CAACR,KAAK,CAAC,CAACU,IAAI,CAAC9B,oBAAoB,CAAC+B,KAAK,CAAC;EACxD,CAAC,CAAC;EAEFd,EAAE,CAAC,iCAAiC,EAAE,MAAM;IAC1C,MAAMsB,iBAA0D,GAAG,IAAIpB,GAAG,CACxE,EACF,CAAC;IAED,MAAMS,OAAO,GAAG9B,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEmC,iBAAiB,CAAC;IACrEV,MAAM,CAACD,OAAO,CAAC,CAACE,IAAI,CAAC1B,YAAY,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFY,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChCC,EAAE,CAAC,kDAAkD,EAAE,MAAM;IAC3D,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACbqD,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;QACtBC,EAAE,EAAE;UACF1B,KAAK,EAAE,OAAO;UACdI,MAAM,EAAE;QACV,CAAC;QACDuB,EAAE,EAAE;UACF3B,KAAK,EAAE,QAAQ;UACfK,SAAS,EAAE;QACb;MACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMP,YAAY,GAAGjB,eAAe,CAACuC,OAAO,CAACG,OAAO,CAAC;IACrDd,MAAM,CAACX,YAAY,CAAC8B,IAAI,CAAC,CAAClB,IAAI,CAAC,CAAC,CAAC;IACjCD,MAAM,CAACX,YAAY,CAAC+B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAChB,OAAO,CAAC;MACrCb,KAAK,EAAE,OAAO;MACdI,MAAM,EAAE;IACV,CAAC,CAAC;IACFK,MAAM,CAACX,YAAY,CAAC+B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAChB,OAAO,CAAC;MACrCb,KAAK,EAAE,QAAQ;MACfK,SAAS,EAAE;IACb,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFT,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC9BC,EAAE,CAAC,4CAA4C,EAAE,MAAM;IACrD,MAAMW,OAAO,GAAG1B,aAAa,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9CyB,MAAM,CAACD,OAAO,CAAC,CAACE,IAAI,CAACrC,YAAY,CAAC;IAElC,MAAMyC,OAAO,GAAGhC,aAAa,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9CyB,MAAM,CAACK,OAAO,CAAC,CAACJ,IAAI,CAAClC,UAAU,CAAC;EAClC,CAAC,CAAC;EAEFqB,EAAE,CAACiC,IAAI,CAAC,CACN,CAAC,QAAQ,EAAExD,YAAY,CAAC,EACxB,CAAC,MAAM,EAAEE,UAAU,CAAC,EACpB,CAAC,UAAU,EAAEL,cAAc,CAAC,EAC5B,CAAC,WAAW,EAAEI,eAAe,CAAC,EAC9B,CAAC,MAAM,EAAEH,UAAU,CAAC,EACpB,CAAC,QAAQ,EAAEC,YAAY,CAAC,CACzB,CAAC,CACA,2DAA2D,EAC3D,CAAC0D,QAAgB,EAAEC,aAA4B,KAAK;IAClD,MAAMC,UAAU,GAAGnD,aAAa,CAAC;MAC/BG,EAAE,EAAE,UAAU;MACdC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,UAAU;MACjBC,WAAW,EAAE,CAAC;MACdC,SAAS,EAAE;QACTC,WAAW,EAAE,OAAO;QACpBC,UAAU,EAAE;MACd,CAAC;MACDC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,KAAK;MAClBiB,iBAAiB,EAAE;QACjBT,IAAI,EAAE4B;MACR;IACF,CAAC,CAAC;IACFtB,MAAM,CAACwB,UAAU,CAAC,CAACpB,OAAO,CAACmB,aAAa,CAAC;EAC3C,CACF,CAAC;AACH,CAAC,CAAC;AAEFpC,QAAQ,CAAC,sBAAsB,EAAE,MAAM;EACrCC,EAAE,CAAC,qCAAqC,EAAE,MAAM;IAC9C,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD;IACR,CAAC,CAAC;IACF,MAAMoD,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAQ,CAAC,GAAGW,MAAM,CAACC,OAAO;IAElC1B,MAAM,CAACc,OAAO,CAACa,MAAM,CAAC,CAAC1B,IAAI,CAAC,CAAC,CAAC;IAE9BD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,EAAE,CAAC;IACjCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC;IAErCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;IACnCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,KAAK,CAAC;IAEtCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;IACnCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,KAAK,CAAC;EACxC,CAAC,CAAC;EAEFb,EAAE,CAAC,kDAAkD,EAAE,MAAM;IAC3D,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACbmE,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI;IAC1B,CAAC,CAAC;IACF,MAAMf,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAQ,CAAC,GAAGW,MAAM,CAACC,OAAO;IAElC1B,MAAM,CAACc,OAAO,CAACa,MAAM,CAAC,CAAC1B,IAAI,CAAC,CAAC,CAAC;IAE9BD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,EAAE,CAAC;IACjCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC;IAErCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;IACnCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,KAAK,CAAC;IAEtCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;IACnCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,KAAK,CAAC;EACxC,CAAC,CAAC;EAEFb,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtD,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACbmE,WAAW,EAAE,CAAC,IAAI;IACpB,CAAC,CAAC;IACF,MAAMf,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAQ,CAAC,GAAGW,MAAM,CAACC,OAAO;IAElC1B,MAAM,CAACc,OAAO,CAACa,MAAM,CAAC,CAAC1B,IAAI,CAAC,CAAC,CAAC;IAE9BD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,EAAE,CAAC;IACjCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC;IAErCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAACpC,KAAK,CAAC,CAACuB,IAAI,CAAC,IAAI,CAAC;IACnCD,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC,CAAC7B,OAAO,CAAC,CAACgB,IAAI,CAAC,KAAK,CAAC;EACxC,CAAC,CAAC;EAEFb,EAAE,CAAC,+CAA+C,EAAE,MAAM;IACxD,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACboE,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,MAAMhB,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,KAAK,MAAMiB,MAAM,IAAIL,MAAM,CAACC,OAAO,CAACZ,OAAO,EAAE;MAC3Cd,MAAM,CAAC8B,MAAM,CAAC5C,WAAW,CAAC,CAACe,IAAI,CAAC,IAAI,CAAC;IACvC;EACF,CAAC,CAAC;EAEFb,EAAE,CAAC,mDAAmD,EAAE,MAAM;IAC5D,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACboE,iBAAiB,EAAE,IAAI;MACvBE,WAAW,EAAEvE,UAAU,CAACwE,WAAW,CAACC;IACtC,CAAC,CAAC;IAEF,MAAMpB,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,KAAK,MAAMiB,MAAM,IAAIL,MAAM,CAACC,OAAO,CAACZ,OAAO,EAAE;MAC3Cd,MAAM,CAAC8B,MAAM,CAACI,IAAI,CAAC,CAACjC,IAAI,CAAC,UAAU,CAAC;IACtC;EACF,CAAC,CAAC;EAEFb,EAAE,CAAC,6EAA6E,EAAE,MAAM;IACtF,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACbsE,WAAW,EAAEvE,UAAU,CAACwE,WAAW,CAACG,OAAO;MAC3CrB,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;QACtBC,EAAE,EAAE;UACFpB,QAAQ,EAAE,IAAI;UACdF,MAAM,EAAE;QACV;MACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMkB,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEFb,MAAM,CAACyB,MAAM,CAACC,OAAO,CAACZ,OAAO,CAAC,CAAC,CAAC,CAACN,UAAU,CAAC,CAACP,IAAI,CAAC,IAAI,CAAC;IACvDD,MAAM,CAACyB,MAAM,CAACC,OAAO,CAACZ,OAAO,CAAC,CAAC,CAAC,CAAC9B,QAAQ,CAAC,CAACiB,IAAI,CAAC,KAAK,CAAC;EACxD,CAAC,CAAC;EAEFb,EAAE,CAAC,oDAAoD,EAAE,MAAM;IAC7D,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACbsE,WAAW,EAAEvE,UAAU,CAACwE,WAAW,CAACC,KAAK;MACzCnB,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;QACtBC,EAAE,EAAE;UACFpB,QAAQ,EAAE,IAAI;UACdF,MAAM,EAAE;QACV;MACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMkB,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACA;IACAb,MAAM,CAACyB,MAAM,CAACC,OAAO,CAACZ,OAAO,CAAC,CAAC,CAAC,CAACrC,IAAI,CAAC,CAACwB,IAAI,CAAC,IAAI,CAAC;EACnD,CAAC,CAAC;EAEFb,EAAE,CAAC,qDAAqD,EAAE,MAAM;IAC9D,MAAMuB,OAAO,GAAGnD,UAAU,CAACoD,MAAM,CAAC;MAChCC,IAAI,EAAEpD,OAAO;MACboE,iBAAiB,EAAE,IAAI;MACvBE,WAAW,EAAEvE,UAAU,CAACwE,WAAW,CAACI;IACtC,CAAC,CAAC;IAEF,MAAMvB,IAAI,GAAG,IAAIvD,MAAM,CAACqD,OAAO,CAAC;IAEhC,MAAM;MAAEc;IAAO,CAAC,GAAGpE,UAAU,CAAC,MAAM;MAClC,OAAOW,eAAe,CAAC2C,OAAO,EAAEE,IAAI,EAAE,KAAK,CAAC;IAC9C,CAAC,CAAC;IAEF,KAAK,MAAMiB,MAAM,IAAIL,MAAM,CAACC,OAAO,CAACZ,OAAO,EAAE;MAC3Cd,MAAM,CAAC8B,MAAM,CAACI,IAAI,CAAC,CAACjC,IAAI,CAACK,SAAS,CAAC;IACrC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC"}