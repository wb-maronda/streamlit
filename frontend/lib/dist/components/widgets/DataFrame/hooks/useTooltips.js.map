{"version":3,"file":"useTooltips.js","names":["React","notNullOrUndefined","hasTooltip","isMissingValueCell","DEBOUNCE_TIME_MS","REQUIRED_CELL_TOOLTIP","useTooltips","columns","getCellContent","tooltip","setTooltip","useState","timeoutRef","useRef","onItemHovered","useCallback","args","clearTimeout","current","undefined","kind","location","colIdx","rowIdx","tooltipContent","length","column","help","cell","isRequired","isEditable","setTimeout","content","left","bounds","x","width","top","y","clearTooltip"],"sources":["../../../../../src/components/widgets/DataFrame/hooks/useTooltips.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport {\n  GridCell,\n  DataEditorProps,\n  GridMouseEventArgs,\n} from \"@glideapps/glide-data-grid\"\n\nimport { notNullOrUndefined } from \"@streamlit/lib/src/util/utils\"\nimport {\n  BaseColumn,\n  hasTooltip,\n  isMissingValueCell,\n} from \"@streamlit/lib/src/components/widgets/DataFrame/columns\"\n\n// Debounce time for triggering the tooltip on hover.\nexport const DEBOUNCE_TIME_MS = 600\n// Tooltip message for required cells that are empty.\nexport const REQUIRED_CELL_TOOLTIP = \"⚠️ Please fill out this cell.\"\n\nexport type TooltipsReturn = {\n  // The tooltip to show (if any):\n  tooltip: { content: string; left: number; top: number } | undefined\n  // A callback to clear the tooltip:\n  clearTooltip: () => void\n  // The glide-data-grid function that is called when a cell is hovered:\n} & Pick<DataEditorProps, \"onItemHovered\">\n\n/**\n * Hook that can show a tooltip when hovering over a cell or header if configured.\n *\n * The tooltip is shown after a delay, and is cleared when the user clicks outside,\n * fires escape, or moves outside of the target cell.\n *\n * @param columns columns of the datagrid\n * @param getCellContent function that returns the cell content for a given cell position\n * @returns the tooltip to show (if any), a callback to clear the tooltip, and the\n * onItemHovered callback to pass to the datagrid\n */\nfunction useTooltips(\n  columns: BaseColumn[],\n  getCellContent: ([col, row]: readonly [number, number]) => GridCell\n): TooltipsReturn {\n  const [tooltip, setTooltip] = React.useState<\n    { content: string; left: number; top: number } | undefined\n  >()\n  const timeoutRef = React.useRef<any>(null)\n\n  const onItemHovered = React.useCallback(\n    (args: GridMouseEventArgs) => {\n      // Always reset the tooltips on any change here\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = 0\n      setTooltip(undefined)\n\n      if ((args.kind === \"header\" || args.kind === \"cell\") && args.location) {\n        const colIdx = args.location[0]\n        const rowIdx = args.location[1]\n        let tooltipContent: string | undefined\n\n        if (colIdx < 0 || colIdx >= columns.length) {\n          // Ignore negative column index (Row index column)\n          // and column index that is out of bounds\n          return\n        }\n\n        const column = columns[colIdx]\n\n        if (args.kind === \"header\" && notNullOrUndefined(column)) {\n          tooltipContent = column.help\n        } else if (args.kind === \"cell\") {\n          // TODO(lukasmasuch): Ignore the last row if num_rows=dynamic (trailing row).\n\n          const cell = getCellContent([colIdx, rowIdx])\n          if (\n            column.isRequired &&\n            column.isEditable &&\n            isMissingValueCell(cell)\n          ) {\n            tooltipContent = REQUIRED_CELL_TOOLTIP\n          } else if (hasTooltip(cell)) {\n            tooltipContent = cell.tooltip\n          }\n        }\n\n        if (tooltipContent) {\n          timeoutRef.current = setTimeout(() => {\n            if (tooltipContent) {\n              setTooltip({\n                content: tooltipContent,\n                left: args.bounds.x + args.bounds.width / 2,\n                top: args.bounds.y,\n              })\n            }\n          }, DEBOUNCE_TIME_MS)\n        }\n      }\n    },\n    [columns, getCellContent, setTooltip, timeoutRef]\n  )\n\n  const clearTooltip = React.useCallback(() => {\n    setTooltip(undefined)\n  }, [setTooltip])\n\n  return {\n    tooltip,\n    clearTooltip,\n    onItemHovered,\n  }\n}\n\nexport default useTooltips\n"],"mappings":"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"}