{"version":3,"file":"useCustomRenderer.test.js","names":["renderHook","TextColumn","NumberColumn","useCustomRenderer","MOCK_COLUMNS","id","name","title","indexNumber","arrowType","pandas_type","numpy_type","isEditable","isRequired","isHidden","isIndex","isStretched","describe","it","result","expect","current","drawCell","toBe","Array","isArray","customRenderers","toBeTruthy"],"sources":["../../../../../src/components/widgets/DataFrame/hooks/useCustomRenderer.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderHook } from \"@testing-library/react-hooks\"\n\nimport {\n  BaseColumn,\n  TextColumn,\n  NumberColumn,\n} from \"@streamlit/lib/src/components/widgets/DataFrame/columns\"\n\nimport useCustomRenderer from \"./useCustomRenderer\"\n\nconst MOCK_COLUMNS: BaseColumn[] = [\n  NumberColumn({\n    id: \"column_1\",\n    name: \"column_1\",\n    title: \"column_1\",\n    indexNumber: 0,\n    arrowType: {\n      pandas_type: \"int64\",\n      numpy_type: \"int64\",\n    },\n    isEditable: true,\n    isRequired: true,\n    isHidden: false,\n    isIndex: false,\n    isStretched: false,\n  }),\n  TextColumn({\n    id: \"column_2\",\n    name: \"column_2\",\n    title: \"column_2\",\n    indexNumber: 1,\n    arrowType: {\n      pandas_type: \"unicode\",\n      numpy_type: \"object\",\n    },\n    isEditable: true,\n    isRequired: false,\n    isHidden: false,\n    isIndex: false,\n    isStretched: false,\n  }),\n]\n\ndescribe(\"useCustomRenderer hook\", () => {\n  it(\"returns correct initial state\", () => {\n    const { result } = renderHook(() => {\n      return useCustomRenderer(MOCK_COLUMNS)\n    })\n\n    // Initial state assertions\n    expect(typeof result.current.drawCell).toBe(\"function\")\n    expect(Array.isArray(result.current.customRenderers)).toBeTruthy()\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,8BAA8B;AAEzD,SAEEC,UAAU,EACVC,YAAY;AAGd,OAAOC,iBAAiB;AAExB,MAAMC,YAA0B,GAAG,CACjCF,YAAY,CAAC;EACXG,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE;IACTC,WAAW,EAAE,OAAO;IACpBC,UAAU,EAAE;EACd,CAAC;EACDC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE;AACf,CAAC,CAAC,EACFf,UAAU,CAAC;EACTI,EAAE,EAAE,UAAU;EACdC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE;IACTC,WAAW,EAAE,SAAS;IACtBC,UAAU,EAAE;EACd,CAAC;EACDC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAE;AACf,CAAC,CAAC,CACH;AAEDC,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvCC,EAAE,CAAC,+BAA+B,EAAE,MAAM;IACxC,MAAM;MAAEC;IAAO,CAAC,GAAGnB,UAAU,CAAC,MAAM;MAClC,OAAOG,iBAAiB,CAACC,YAAY,CAAC;IACxC,CAAC,CAAC;;IAEF;IACAgB,MAAM,CAAC,OAAOD,MAAM,CAACE,OAAO,CAACC,QAAQ,CAAC,CAACC,IAAI,CAAC,UAAU,CAAC;IACvDH,MAAM,CAACI,KAAK,CAACC,OAAO,CAACN,MAAM,CAACE,OAAO,CAACK,eAAe,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;EACpE,CAAC,CAAC;AACJ,CAAC,CAAC"}