{"version":3,"file":"useColumnSizer.test.js","names":["act","renderHook","useColumnSizer","MOCK_COLUMNS","id","title","width","grow","describe","it","result","expect","current","columns","toBe","undefined","onColumnResize"],"sources":["../../../../../src/components/widgets/DataFrame/hooks/useColumnSizer.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GridColumn, SizedGridColumn } from \"@glideapps/glide-data-grid\"\nimport { act, renderHook } from \"@testing-library/react-hooks\"\n\nimport useColumnSizer from \"./useColumnSizer\"\n\nconst MOCK_COLUMNS: GridColumn[] = [\n  {\n    id: \"column_1\",\n    title: \"column_1\",\n  },\n  {\n    id: \"column_2\",\n    title: \"column_2\",\n    width: 100,\n  },\n  {\n    id: \"column_3\",\n    title: \"column_3\",\n    grow: 1,\n  },\n]\n\ndescribe(\"useColumnSizer hook\", () => {\n  it(\"should correctly apply column resizing.\", () => {\n    const { result } = renderHook(() => useColumnSizer(MOCK_COLUMNS))\n    // Check initial state\n    expect((result.current.columns[0] as SizedGridColumn).width).toBe(\n      undefined\n    )\n    expect((result.current.columns[1] as SizedGridColumn).width).toBe(100)\n\n    // Resize first column to size of 123:\n    act(() => {\n      const { onColumnResize } = result.current\n      onColumnResize?.(MOCK_COLUMNS[0], 123, 0, 123)\n    })\n    expect((result.current.columns[0] as SizedGridColumn).width).toBe(123)\n\n    // Resize first column to size of 321:\n    act(() => {\n      const { onColumnResize } = result.current\n      onColumnResize?.(MOCK_COLUMNS[0], 321, 0, 321)\n    })\n    expect((result.current.columns[0] as SizedGridColumn).width).toBe(321)\n\n    // First column should stay at previous value if other column is resized\n    act(() => {\n      const { onColumnResize } = result.current\n      onColumnResize?.(MOCK_COLUMNS[1], 88, 1, 88)\n    })\n    expect((result.current.columns[0] as SizedGridColumn).width).toBe(321)\n  })\n\n  it(\"should deactivate grow on resize.\", () => {\n    const { result } = renderHook(() => useColumnSizer(MOCK_COLUMNS))\n\n    // Check initial state\n    expect((result.current.columns[2] as SizedGridColumn).width).toBe(\n      undefined\n    )\n    expect((result.current.columns[2] as SizedGridColumn).grow).toBe(1)\n\n    // Resize column with grow\n    act(() => {\n      const { onColumnResize } = result.current\n      onColumnResize?.(MOCK_COLUMNS[2], 123, 0, 123)\n    })\n    expect((result.current.columns[2] as SizedGridColumn).width).toBe(123)\n    // Grow should be deactivated (by setting it to 0)\n    expect((result.current.columns[2] as SizedGridColumn).grow).toBe(0)\n  })\n})\n"],"mappings":"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"}