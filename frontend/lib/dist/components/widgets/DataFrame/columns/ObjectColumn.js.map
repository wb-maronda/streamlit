{"version":3,"file":"ObjectColumn.js","names":["GridCellKind","isNullOrUndefined","notNullOrUndefined","getErrorCell","removeLineBreaks","toSafeString","ObjectColumn","props","cellTemplate","kind","Text","data","displayData","allowOverlay","contentAlignment","readonly","style","isIndex","sortMode","isEditable","getCell","cellData","isMissingValue","error","getCellValue","cell","undefined","isEditableType"],"sources":["../../../../../src/components/widgets/DataFrame/columns/ObjectColumn.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GridCell, GridCellKind, TextCell } from \"@glideapps/glide-data-grid\"\n\nimport {\n  isNullOrUndefined,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\n\nimport {\n  BaseColumn,\n  BaseColumnProps,\n  getErrorCell,\n  removeLineBreaks,\n  toSafeString,\n} from \"./utils\"\n\n/**\n * A column type for read-only cells used as a fallback\n * for data types that are currently not supported for editing.\n */\nfunction ObjectColumn(props: BaseColumnProps): BaseColumn {\n  const cellTemplate = {\n    kind: GridCellKind.Text,\n    data: \"\",\n    displayData: \"\",\n    allowOverlay: true,\n    contentAlignment: props.contentAlignment,\n    readonly: true,\n    style: props.isIndex ? \"faded\" : \"normal\",\n  } as TextCell\n  return {\n    ...props,\n    kind: \"object\",\n    sortMode: \"default\",\n    isEditable: false, // Object columns are read-only.\n    getCell(data?: any): GridCell {\n      try {\n        const cellData = notNullOrUndefined(data) ? toSafeString(data) : null\n        const displayData = notNullOrUndefined(cellData)\n          ? removeLineBreaks(cellData) // Remove line breaks to show all content in the cell\n          : \"\"\n        return {\n          ...cellTemplate,\n          data: cellData,\n          displayData,\n          isMissingValue: isNullOrUndefined(data),\n        } as TextCell\n      } catch (error) {\n        return getErrorCell(\n          toSafeString(data),\n          `The value cannot be interpreted as a string. Error: ${error}`\n        )\n      }\n    },\n    getCellValue(cell: TextCell): string | null {\n      return cell.data === undefined ? null : cell.data\n    },\n  }\n}\n\nObjectColumn.isEditableType = false\n\nexport default ObjectColumn\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAmBA,YAAY,QAAkB,4BAA4B;AAE7E,SACEC,iBAAiB,EACjBC,kBAAkB;AAGpB,SAGEC,YAAY,EACZC,gBAAgB,EAChBC,YAAY;;AAGd;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAsB,EAAc;EACxD,MAAMC,YAAY,GAAG;IACnBC,IAAI,EAAET,YAAY,CAACU,IAAI;IACvBC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,IAAI;IAClBC,gBAAgB,EAAEP,KAAK,CAACO,gBAAgB;IACxCC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAET,KAAK,CAACU,OAAO,GAAG,OAAO,GAAG;EACnC,CAAa;EACb,OAAO;IACL,GAAGV,KAAK;IACRE,IAAI,EAAE,QAAQ;IACdS,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,KAAK;IAAE;IACnBC,OAAOA,CAACT,IAAU,EAAY;MAC5B,IAAI;QACF,MAAMU,QAAQ,GAAGnB,kBAAkB,CAACS,IAAI,CAAC,GAAGN,YAAY,CAACM,IAAI,CAAC,GAAG,IAAI;QACrE,MAAMC,WAAW,GAAGV,kBAAkB,CAACmB,QAAQ,CAAC,GAC5CjB,gBAAgB,CAACiB,QAAQ,CAAC,CAAC;QAAA,EAC3B,EAAE;QACN,OAAO;UACL,GAAGb,YAAY;UACfG,IAAI,EAAEU,QAAQ;UACdT,WAAW;UACXU,cAAc,EAAErB,iBAAiB,CAACU,IAAI;QACxC,CAAC;MACH,CAAC,CAAC,OAAOY,KAAK,EAAE;QACd,OAAOpB,YAAY,CACjBE,YAAY,CAACM,IAAI,CAAC,EACjB,uDAAsDY,KAAM,EAC/D,CAAC;MACH;IACF,CAAC;IACDC,YAAYA,CAACC,IAAc,EAAiB;MAC1C,OAAOA,IAAI,CAACd,IAAI,KAAKe,SAAS,GAAG,IAAI,GAAGD,IAAI,CAACd,IAAI;IACnD;EACF,CAAC;AACH;AAEAL,YAAY,CAACqB,cAAc,GAAG,KAAK;AAEnC,eAAerB,YAAY"}