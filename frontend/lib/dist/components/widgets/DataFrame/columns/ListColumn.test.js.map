{"version":3,"file":"ListColumn.test.js","names":["GridCellKind","ListColumn","MOCK_LIST_COLUMN_PROPS","id","name","title","indexNumber","isEditable","isHidden","isIndex","isStretched","arrowType","pandas_type","numpy_type","describe","it","mockColumn","expect","kind","toEqual","sortMode","mockCell","getCell","Bubble","data","each","undefined","input","value","cell","getCellValue","copyData"],"sources":["../../../../../src/components/widgets/DataFrame/columns/ListColumn.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GridCellKind, BubbleCell } from \"@glideapps/glide-data-grid\"\n\nimport ListColumn from \"./ListColumn\"\n\nconst MOCK_LIST_COLUMN_PROPS = {\n  id: \"1\",\n  name: \"list_column\",\n  title: \"List column\",\n  indexNumber: 0,\n  isEditable: false,\n  isHidden: false,\n  isIndex: false,\n  isStretched: false,\n  arrowType: {\n    // The arrow type of the underlying data is\n    // not used for anything inside the column.\n    pandas_type: \"object\",\n    numpy_type: \"list[unicode]\",\n  },\n}\n\ndescribe(\"ListColumn\", () => {\n  it(\"creates a valid column instance\", () => {\n    const mockColumn = ListColumn(MOCK_LIST_COLUMN_PROPS)\n    expect(mockColumn.kind).toEqual(\"list\")\n    expect(mockColumn.title).toEqual(MOCK_LIST_COLUMN_PROPS.title)\n    expect(mockColumn.id).toEqual(MOCK_LIST_COLUMN_PROPS.id)\n    expect(mockColumn.sortMode).toEqual(\"default\")\n\n    const mockCell = mockColumn.getCell([\"foo\", \"bar\"])\n    expect(mockCell.kind).toEqual(GridCellKind.Bubble)\n    expect((mockCell as BubbleCell).data).toEqual([\"foo\", \"bar\"])\n  })\n\n  it(\"ignores isEditable configuration\", () => {\n    const mockColumn = ListColumn({\n      ...MOCK_LIST_COLUMN_PROPS,\n      isEditable: true,\n    })\n\n    // Column should be readonly, even if isEditable was true\n    expect(mockColumn.isEditable).toEqual(false)\n  })\n\n  it.each([\n    // Supports almost the same as toSafeArray\n    [null, null],\n    [undefined, null],\n    [\"\", []],\n    [[], []],\n    [\"[]\", []],\n    [\"foo\", [\"foo\"]],\n    // Comma separated syntax\n    [\"foo,bar\", [\"foo\", \"bar\"]],\n    [\"foo,bar,\", [\"foo\", \"bar\", \"\"]],\n    [\"foo,bar,,\", [\"foo\", \"bar\", \"\", \"\"]],\n    // JSON Array syntax\n    [`[\"foo\",\"bar\"]`, [\"foo\", \"bar\"]],\n    // non-string values\n    [0, [0]],\n    [1, [1]],\n    [\n      [0, 1.2],\n      [0, 1.2],\n    ],\n    [true, [true]],\n    [false, [false]],\n    [\n      [true, false],\n      [true, false],\n    ],\n  ])(\n    \"supports array-compatible value (%p parsed as %p)\",\n    (input: any, value: any[] | null) => {\n      const mockColumn = ListColumn(MOCK_LIST_COLUMN_PROPS)\n      const cell = mockColumn.getCell(input)\n      expect(mockColumn.getCellValue(cell)).toEqual(value)\n    }\n  )\n\n  it.each([\n    [null, \"\"],\n    [undefined, \"\"],\n    [[], \"\"],\n    [[\"foo\", \"bar\"], \"foo,bar\"],\n    [[\"foo\", \"bar\", \"\"], \"foo,bar,\"],\n    [[\"foo\", \"comma,in value\"], \"foo,comma in value\"],\n    [[0, 1.2], \"0,1.2\"],\n    [[true, false], \"true,false\"],\n  ])(\n    \"correctly prepares data for copy (%p parsed as %p)\",\n    (input: any, copyData: string | undefined) => {\n      const mockColumn = ListColumn(MOCK_LIST_COLUMN_PROPS)\n      const cell = mockColumn.getCell(input)\n      expect((cell as any).copyData).toEqual(copyData)\n    }\n  )\n})\n"],"mappings":"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"}