{"version":3,"file":"SelectboxColumn.js","names":["GridCellKind","Quiver","isNullOrUndefined","notNullOrUndefined","getErrorCell","mergeColumnParameters","toSafeBoolean","toSafeNumber","toSafeString","SelectboxColumn","props","dataType","parameters","options","getTypeName","arrowType","columnTypeOptions","uniqueTypes","Set","map","x","size","has","cellTemplate","kind","Custom","allowOverlay","copyData","contentAlign","contentAlignment","readonly","isEditable","style","isIndex","data","allowedValues","isRequired","filter","opt","value","sortMode","getCell","validate","cellData","includes","isMissingValue","getCellValue","cell","isEditableType"],"sources":["../../../../../src/components/widgets/DataFrame/columns/SelectboxColumn.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GridCell, GridCellKind } from \"@glideapps/glide-data-grid\"\nimport { DropdownCellType } from \"@glideapps/glide-data-grid-cells\"\n\nimport { Quiver } from \"@streamlit/lib/src/dataframes/Quiver\"\nimport {\n  isNullOrUndefined,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\n\nimport {\n  BaseColumn,\n  BaseColumnProps,\n  getErrorCell,\n  mergeColumnParameters,\n  toSafeBoolean,\n  toSafeNumber,\n  toSafeString,\n} from \"./utils\"\n\nexport interface SelectboxColumnParams {\n  /** A list of options available in the selectbox.\n   * Every value in the column needs to match one of the options.\n   */\n  readonly options: (string | number | boolean)[]\n}\n\n/**\n * A column type that supports optimized rendering and editing for categorical values\n * by using a selectbox. This is automatically used by categorical columns (Pandas).\n *\n */\nfunction SelectboxColumn(props: BaseColumnProps): BaseColumn {\n  // The selectbox column can be either string, number or boolean type\n  // based on the options type.\n  let dataType: \"number\" | \"boolean\" | \"string\" = \"string\"\n\n  const parameters = mergeColumnParameters(\n    // Default parameters:\n    {\n      options:\n        Quiver.getTypeName(props.arrowType) === \"bool\" ? [true, false] : [],\n    },\n    // User parameters:\n    props.columnTypeOptions\n  ) as SelectboxColumnParams\n\n  const uniqueTypes = new Set(parameters.options.map(x => typeof x))\n  if (uniqueTypes.size === 1) {\n    if (uniqueTypes.has(\"number\") || uniqueTypes.has(\"bigint\")) {\n      dataType = \"number\"\n    } else if (uniqueTypes.has(\"boolean\")) {\n      dataType = \"boolean\"\n    }\n  }\n\n  const cellTemplate = {\n    kind: GridCellKind.Custom,\n    allowOverlay: true,\n    copyData: \"\",\n    contentAlign: props.contentAlignment,\n    readonly: !props.isEditable,\n    style: props.isIndex ? \"faded\" : \"normal\",\n    data: {\n      kind: \"dropdown-cell\",\n      allowedValues: [\n        // Add empty option if the column is not configured as required:\n        ...(props.isRequired !== true ? [null] : []),\n        ...parameters.options\n          .filter(opt => opt !== null && opt !== \"\") // ignore empty option if it exists\n          .map(opt => toSafeString(opt)), // convert everything to string\n      ],\n      value: \"\",\n    },\n  } as DropdownCellType\n\n  return {\n    ...props,\n    kind: \"selectbox\",\n    sortMode: \"default\",\n    getCell(data?: any, validate?: boolean): GridCell {\n      // Empty string refers to a missing value\n      let cellData = null\n      if (notNullOrUndefined(data) && data !== \"\") {\n        cellData = toSafeString(data)\n      }\n\n      if (validate && !cellTemplate.data.allowedValues.includes(cellData)) {\n        return getErrorCell(\n          toSafeString(cellData),\n          `The value is not part of the allowed options.`\n        )\n      }\n\n      return {\n        ...cellTemplate,\n        isMissingValue: cellData === null,\n        copyData: cellData || \"\", // Column sorting is done via the copyData value\n        data: {\n          ...cellTemplate.data,\n          value: cellData,\n        },\n      } as DropdownCellType\n    },\n    getCellValue(cell: DropdownCellType): string | number | boolean | null {\n      if (isNullOrUndefined(cell.data?.value) || cell.data?.value === \"\") {\n        return null\n      }\n      if (dataType === \"number\") {\n        return toSafeNumber(cell.data?.value) ?? null\n      } else if (dataType === \"boolean\") {\n        return toSafeBoolean(cell.data?.value) ?? null\n      }\n      return cell.data?.value\n    },\n  }\n}\n\nSelectboxColumn.isEditableType = true\n\nexport default SelectboxColumn\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAmBA,YAAY,QAAQ,4BAA4B;AAGnE,SAASC,MAAM;AACf,SACEC,iBAAiB,EACjBC,kBAAkB;AAGpB,SAGEC,YAAY,EACZC,qBAAqB,EACrBC,aAAa,EACbC,YAAY,EACZC,YAAY;AAUd;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,KAAsB,EAAc;EAC3D;EACA;EACA,IAAIC,QAAyC,GAAG,QAAQ;EAExD,MAAMC,UAAU,GAAGP,qBAAqB;EACtC;EACA;IACEQ,OAAO,EACLZ,MAAM,CAACa,WAAW,CAACJ,KAAK,CAACK,SAAS,CAAC,KAAK,MAAM,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG;EACrE,CAAC;EACD;EACAL,KAAK,CAACM,iBACR,CAA0B;EAE1B,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAACN,UAAU,CAACC,OAAO,CAACM,GAAG,CAACC,CAAC,IAAI,OAAOA,CAAC,CAAC,CAAC;EAClE,IAAIH,WAAW,CAACI,IAAI,KAAK,CAAC,EAAE;IAC1B,IAAIJ,WAAW,CAACK,GAAG,CAAC,QAAQ,CAAC,IAAIL,WAAW,CAACK,GAAG,CAAC,QAAQ,CAAC,EAAE;MAC1DX,QAAQ,GAAG,QAAQ;IACrB,CAAC,MAAM,IAAIM,WAAW,CAACK,GAAG,CAAC,SAAS,CAAC,EAAE;MACrCX,QAAQ,GAAG,SAAS;IACtB;EACF;EAEA,MAAMY,YAAY,GAAG;IACnBC,IAAI,EAAExB,YAAY,CAACyB,MAAM;IACzBC,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAElB,KAAK,CAACmB,gBAAgB;IACpCC,QAAQ,EAAE,CAACpB,KAAK,CAACqB,UAAU;IAC3BC,KAAK,EAAEtB,KAAK,CAACuB,OAAO,GAAG,OAAO,GAAG,QAAQ;IACzCC,IAAI,EAAE;MACJV,IAAI,EAAE,eAAe;MACrBW,aAAa,EAAE;MACb;MACA,IAAIzB,KAAK,CAAC0B,UAAU,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAC5C,GAAGxB,UAAU,CAACC,OAAO,CAClBwB,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,EAAE,CAAC,CAAC;MAAA,CAC1CnB,GAAG,CAACmB,GAAG,IAAI9B,YAAY,CAAC8B,GAAG,CAAC,CAAC,CAAE;MAAA,CACnC;MACDC,KAAK,EAAE;IACT;EACF,CAAqB;EAErB,OAAO;IACL,GAAG7B,KAAK;IACRc,IAAI,EAAE,WAAW;IACjBgB,QAAQ,EAAE,SAAS;IACnBC,OAAOA,CAACP,IAAU,EAAEQ,QAAkB,EAAY;MAChD;MACA,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIxC,kBAAkB,CAAC+B,IAAI,CAAC,IAAIA,IAAI,KAAK,EAAE,EAAE;QAC3CS,QAAQ,GAAGnC,YAAY,CAAC0B,IAAI,CAAC;MAC/B;MAEA,IAAIQ,QAAQ,IAAI,CAACnB,YAAY,CAACW,IAAI,CAACC,aAAa,CAACS,QAAQ,CAACD,QAAQ,CAAC,EAAE;QACnE,OAAOvC,YAAY,CACjBI,YAAY,CAACmC,QAAQ,CAAC,EACrB,+CACH,CAAC;MACH;MAEA,OAAO;QACL,GAAGpB,YAAY;QACfsB,cAAc,EAAEF,QAAQ,KAAK,IAAI;QACjChB,QAAQ,EAAEgB,QAAQ,IAAI,EAAE;QAAE;QAC1BT,IAAI,EAAE;UACJ,GAAGX,YAAY,CAACW,IAAI;UACpBK,KAAK,EAAEI;QACT;MACF,CAAC;IACH,CAAC;IACDG,YAAYA,CAACC,IAAsB,EAAoC;MACrE,IAAI7C,iBAAiB,CAAC6C,IAAI,CAACb,IAAI,EAAEK,KAAK,CAAC,IAAIQ,IAAI,CAACb,IAAI,EAAEK,KAAK,KAAK,EAAE,EAAE;QAClE,OAAO,IAAI;MACb;MACA,IAAI5B,QAAQ,KAAK,QAAQ,EAAE;QACzB,OAAOJ,YAAY,CAACwC,IAAI,CAACb,IAAI,EAAEK,KAAK,CAAC,IAAI,IAAI;MAC/C,CAAC,MAAM,IAAI5B,QAAQ,KAAK,SAAS,EAAE;QACjC,OAAOL,aAAa,CAACyC,IAAI,CAACb,IAAI,EAAEK,KAAK,CAAC,IAAI,IAAI;MAChD;MACA,OAAOQ,IAAI,CAACb,IAAI,EAAEK,KAAK;IACzB;EACF,CAAC;AACH;AAEA9B,eAAe,CAACuC,cAAc,GAAG,IAAI;AAErC,eAAevC,eAAe"}