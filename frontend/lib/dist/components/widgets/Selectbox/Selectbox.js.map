{"version":3,"file":"Selectbox.js","names":["React","withTheme","FormClearHelper","UISelectbox","labelVisibilityProtoValueToEnum","isNullOrUndefined","jsx","_jsx","Selectbox","PureComponent","constructor","arguments","formClearHelper","state","value","initialValue","commitWidgetValue","source","widgetMgr","element","fragmentId","props","setIntValue","onFormCleared","setState","_","prevProps","_prevProps$element$de","default","fromUi","onChange","_ref","storedValue","getIntValue","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","render","options","help","label","labelVisibility","formId","placeholder","disabled","clearable","manageFormClearListener","width"],"sources":["../../../../src/components/widgets/Selectbox/Selectbox.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { withTheme } from \"@emotion/react\"\nimport { Selectbox as SelectboxProto } from \"@streamlit/lib/src/proto\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  WidgetStateManager,\n  Source,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport UISelectbox from \"@streamlit/lib/src/components/shared/Dropdown\"\nimport {\n  labelVisibilityProtoValueToEnum,\n  isNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nexport interface Props {\n  disabled: boolean\n  element: SelectboxProto\n  widgetMgr: WidgetStateManager\n  width: number\n  theme: EmotionTheme\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * The value specified by the user via the UI. If the user didn't touch this\n   * widget's UI, the default value is used.\n   */\n  value: number | null\n}\n\nexport class Selectbox extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  public state: State = {\n    value: this.initialValue,\n  }\n\n  get initialValue(): number | null {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf.\n    const storedValue = this.props.widgetMgr.getIntValue(this.props.element)\n    return storedValue ?? this.props.element.default ?? null\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState({ value: value ?? null }, () => {\n      this.commitWidgetValue({ fromUi: false })\n    })\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setIntValue(element, this.state.value, source, fragmentId)\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default ?? null }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private onChange = (value: number | null): void => {\n    this.setState({ value }, () => this.commitWidgetValue({ fromUi: true }))\n  }\n\n  public render(): React.ReactNode {\n    const { options, help, label, labelVisibility, formId, placeholder } =\n      this.props.element\n    const { disabled, widgetMgr } = this.props\n    const clearable =\n      isNullOrUndefined(this.props.element.default) && !disabled\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      formId,\n      this.onFormCleared\n    )\n\n    return (\n      <UISelectbox\n        label={label}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          labelVisibility?.value\n        )}\n        options={options}\n        disabled={disabled}\n        width={this.props.width}\n        onChange={this.onChange}\n        value={this.state.value}\n        help={help}\n        placeholder={placeholder}\n        clearable={clearable}\n      />\n    )\n  }\n}\n\nexport default withTheme(Selectbox)\n"],"mappings":"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"}