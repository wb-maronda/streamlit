{"version":3,"file":"ColorPicker.js","names":["React","FormClearHelper","BaseColorPicker","labelVisibilityProtoValueToEnum","jsx","_jsx","ColorPicker","PureComponent","constructor","arguments","formClearHelper","state","value","initialValue","commitWidgetValue","source","widgetMgr","element","fragmentId","props","setStringValue","onFormCleared","setState","_","prevProps","default","fromUi","onColorClose","color","storedValue","getStringValue","undefined","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","render","width","disabled","manageFormClearListener","formId","label","labelVisibility","help","onChange"],"sources":["../../../../src/components/widgets/ColorPicker/ColorPicker.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { ColorPicker as ColorPickerProto } from \"@streamlit/lib/src/proto\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  Source,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport BaseColorPicker from \"@streamlit/lib/src/components/shared/BaseColorPicker\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\n\nexport interface Props {\n  disabled: boolean\n  element: ColorPickerProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * The value specified by the user via the UI. If the user didn't touch this\n   * widget's UI, the default value is used.\n   */\n  value: string\n}\n\nclass ColorPicker extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  public state: State = {\n    value: this.initialValue,\n  }\n\n  get initialValue(): string {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf.\n    const storedValue = this.props.widgetMgr.getStringValue(this.props.element)\n    return storedValue !== undefined ? storedValue : this.props.element.default\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState({ value }, () => {\n      this.commitWidgetValue({ fromUi: false })\n    })\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setStringValue(element, this.state.value, source, fragmentId)\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private onColorClose = (color: string): void => {\n    this.setState({ value: color }, () =>\n      this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  public render(): React.ReactNode {\n    const { element, width, disabled, widgetMgr } = this.props\n    const { value } = this.state\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    return (\n      <BaseColorPicker\n        label={element.label}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          element.labelVisibility?.value\n        )}\n        help={element.help}\n        onChange={this.onColorClose}\n        disabled={disabled}\n        width={width}\n        value={value}\n      />\n    )\n  }\n}\n\nexport default ColorPicker\n"],"mappings":"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"}