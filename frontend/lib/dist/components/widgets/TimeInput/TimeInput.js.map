{"version":3,"file":"TimeInput.js","names":["React","PureComponent","TimePicker","UITimePicker","StyledClearIcon","ChevronDown","withTheme","FormClearHelper","WidgetLabel","StyledWidgetLabelHelp","TooltipIcon","Placement","labelVisibilityProtoValueToEnum","isNullOrUndefined","StyledClearIconContainer","jsx","_jsx","jsxs","_jsxs","TimeInput","constructor","arguments","formClearHelper","state","value","initialValue","commitWidgetValue","source","widgetMgr","element","fragmentId","props","setStringValue","onFormCleared","setState","_","prevProps","_prevProps$element$de","default","fromUi","handleChange","newDate","dateToString","stringToDate","hours","minutes","split","map","Number","date","Date","setHours","setMinutes","getHours","toString","padStart","getMinutes","concat","_ref","storedValue","getStringValue","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","render","_element$labelVisibil","disabled","width","theme","clearable","style","selectOverrides","Select","overrides","ControlContainer","height","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","IconsContainer","paddingRight","spacing","sm","ValueContainer","lineHeight","paddingLeft","paddingBottom","paddingTop","SingleValue","Dropdown","Popover","Body","marginTop","SelectArrow","component","Svg","iconSizes","xl","manageFormClearListener","formId","className","children","label","labelVisibility","help","content","placement","TOP_RIGHT","format","step","undefined","onChange","nullable","creatable","onClick","color","colors","darkGray","transform","twoXL","fill","bodyText","$isFocusVisible"],"sources":["../../../../src/components/widgets/TimeInput/TimeInput.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent, ReactNode } from \"react\"\nimport { TimePicker as UITimePicker } from \"baseui/timepicker\"\nimport { StyledClearIcon } from \"baseui/input/styled-components\"\nimport { ChevronDown } from \"baseui/icon\"\nimport { withTheme } from \"@emotion/react\"\n\nimport { TimeInput as TimeInputProto } from \"@streamlit/lib/src/proto\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  WidgetStateManager,\n  Source,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  WidgetLabel,\n  StyledWidgetLabelHelp,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport {\n  labelVisibilityProtoValueToEnum,\n  isNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\n\nimport { StyledClearIconContainer } from \"./styled-components\"\n\nexport interface Props {\n  disabled: boolean\n  element: TimeInputProto\n  widgetMgr: WidgetStateManager\n  width: number\n  theme: EmotionTheme\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * The value specified by the user via the UI. If the user didn't touch this\n   * widget's UI, the default value is used.\n   */\n  value: string | null\n}\n\nclass TimeInput extends PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  public state: State = {\n    value: this.initialValue,\n  }\n\n  get initialValue(): string | null {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf.\n    const storedValue = this.props.widgetMgr.getStringValue(this.props.element)\n    return storedValue ?? this.props.element.default ?? null\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState({ value: value ?? null }, () => {\n      this.commitWidgetValue({ fromUi: false })\n    })\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setStringValue(element, this.state.value, source, fragmentId)\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default ?? null }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private handleChange = (newDate: Date | null): void => {\n    let value: string | null\n    if (newDate === null) {\n      value = null\n    } else {\n      value = this.dateToString(newDate)\n    }\n    this.setState({ value }, () => this.commitWidgetValue({ fromUi: true }))\n  }\n\n  private stringToDate = (value: string | null): Date | null => {\n    if (value === null) {\n      return null\n    }\n    const [hours, minutes] = value.split(\":\").map(Number)\n    const date = new Date()\n\n    date.setHours(hours)\n    date.setMinutes(minutes)\n\n    return date\n  }\n\n  private dateToString = (value: Date): string => {\n    const hours = value.getHours().toString().padStart(2, \"0\")\n    const minutes = value.getMinutes().toString().padStart(2, \"0\")\n\n    return `${hours}:${minutes}`\n  }\n\n  public render(): ReactNode {\n    const { disabled, width, element, widgetMgr, theme } = this.props\n    const clearable = isNullOrUndefined(element.default) && !disabled\n\n    const style = { width }\n\n    const selectOverrides = {\n      Select: {\n        props: {\n          disabled,\n\n          overrides: {\n            ControlContainer: {\n              style: {\n                height: theme.sizes.minElementHeight,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n              },\n            },\n\n            IconsContainer: {\n              style: () => ({\n                paddingRight: theme.spacing.sm,\n              }),\n            },\n\n            ValueContainer: {\n              style: () => ({\n                lineHeight: 1.4,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                paddingRight: theme.spacing.sm,\n                paddingLeft: theme.spacing.sm,\n                paddingBottom: theme.spacing.sm,\n                paddingTop: theme.spacing.sm,\n              }),\n            },\n\n            SingleValue: {\n              props: {\n                // For easier testing - indicates div that holds the selected time\n                \"data-testid\": \"stTimeInput-timeDisplay\",\n              },\n            },\n\n            Dropdown: {\n              style: () => ({\n                paddingTop: 0,\n                paddingBottom: 0,\n              }),\n            },\n\n            // Nudge the dropdown menu by 1px so the focus state doesn't get cut off\n            Popover: {\n              props: {\n                overrides: {\n                  Body: {\n                    style: () => ({\n                      marginTop: \"1px\",\n                    }),\n                  },\n                },\n              },\n            },\n            SelectArrow: {\n              component: ChevronDown,\n\n              props: {\n                overrides: {\n                  Svg: {\n                    style: () => ({\n                      width: theme.iconSizes.xl,\n                      height: theme.iconSizes.xl,\n                    }),\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    }\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    return (\n      <div className=\"stTimeInput\" data-testid=\"stTimeInput\" style={style}>\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <UITimePicker\n          format=\"24\"\n          step={element.step ? Number(element.step) : 900} // step in seconds, defaults to 900s (15 minutes)\n          value={\n            isNullOrUndefined(this.state.value)\n              ? undefined\n              : this.stringToDate(this.state.value)\n          }\n          onChange={this.handleChange}\n          overrides={selectOverrides}\n          nullable={clearable}\n          creatable\n          aria-label={element.label}\n        />\n        {clearable && !isNullOrUndefined(this.state.value) && (\n          // The time picker doesn't have a built-in clearable functionality.\n          // Therefore, we are adding the clear button here.\n          <StyledClearIconContainer\n            onClick={() => {\n              this.handleChange(null)\n            }}\n            data-testid=\"stTimeInputClearButton\"\n          >\n            <StyledClearIcon\n              overrides={{\n                Svg: {\n                  style: {\n                    color: theme.colors.darkGray,\n                    // Since the close icon is an SVG, and we can't control its viewbox nor its attributes,\n                    // Let's use a scale transform effect to make it bigger.\n                    // The width property only enlarges its bounding box, so it's easier to click.\n                    transform: \"scale(1.41)\",\n                    width: theme.spacing.twoXL,\n\n                    \":hover\": {\n                      fill: theme.colors.bodyText,\n                    },\n                  },\n                },\n              }}\n              $isFocusVisible={false}\n            />\n          </StyledClearIconContainer>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default withTheme(TimeInput)\n"],"mappings":"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"}