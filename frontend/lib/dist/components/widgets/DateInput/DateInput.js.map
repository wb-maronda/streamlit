{"version":3,"file":"DateInput.js","names":["React","moment","withTheme","Datepicker","UIDatePicker","DENSITY","PLACEMENT","FormClearHelper","WidgetLabel","StyledWidgetLabelHelp","TooltipIcon","Placement","labelVisibilityProtoValueToEnum","jsx","_jsx","jsxs","_jsxs","DATE_FORMAT","stringsToDates","strings","map","val","Date","datesToStrings","dates","value","format","DateInput","PureComponent","constructor","arguments","formClearHelper","state","values","initialValue","isRange","props","element","isEmpty","commitWidgetValue","source","widgetMgr","fragmentId","setStringArrayValue","onFormCleared","defaultValue","default","setState","fromUi","handleChange","_ref","date","undefined","Array","isArray","forEach","dt","push","handleClose","_","prevProps","getMaxDate","maxDate","max","length","toDate","storedValue","getStringArrayValue","stringArray","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","dateValues","v","render","_element$labelVisibil","width","disabled","theme","colors","fontSizes","lineHeights","spacing","style","minDate","min","clearable","dateMask","replaceAll","dateFormat","manageFormClearListener","formId","className","children","label","labelVisibility","help","content","placement","TOP_RIGHT","density","high","formatString","mask","concat","placeholder","onChange","onClose","overrides","Popover","bottomLeft","Body","border","sizes","borderWidth","fadedText10","CalendarContainer","fontSize","sm","paddingRight","paddingLeft","paddingBottom","paddingTop","Week","Day","_ref2","$pseudoHighlighted","$pseudoSelected","$selected","$isHovered","lineHeight","base","backgroundColor","secondaryBg","transparent","borderColor","PrevButton","display","alignItems","justifyContent","outline","NextButton","Input","maskChar","Root","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","ClearIcon","Svg","color","darkGray","transform","twoXL","marginRight","fill","bodyText","inputWidget","range"],"sources":["../../../../src/components/widgets/DateInput/DateInput.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport moment from \"moment\"\nimport { withTheme } from \"@emotion/react\"\nimport { Datepicker as UIDatePicker, DENSITY } from \"baseui/datepicker\"\nimport { PLACEMENT } from \"baseui/popover\"\nimport { DateInput as DateInputProto } from \"@streamlit/lib/src/proto\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  WidgetStateManager,\n  Source,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  WidgetLabel,\n  StyledWidgetLabelHelp,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\n\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\n\nexport interface Props {\n  disabled: boolean\n  element: DateInputProto\n  theme: EmotionTheme\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * An array with start and end date specified by the user via the UI. If the user\n   * didn't touch this widget's UI, the default value is used. End date is optional.\n   */\n  values: Date[]\n  /**\n   * Boolean to toggle between single-date picker and range date picker.\n   */\n  isRange: boolean\n  isEmpty: boolean\n}\n\n// Date format for communication (protobuf) support\nconst DATE_FORMAT = \"YYYY/MM/DD\"\n\n/** Convert an array of strings to an array of dates. */\nfunction stringsToDates(strings: string[]): Date[] {\n  return strings.map(val => new Date(val))\n}\n\n/** Convert an array of dates to an array of strings. */\nfunction datesToStrings(dates: Date[]): string[] {\n  if (!dates) {\n    return []\n  }\n  return dates.map((value: Date) => moment(value as Date).format(DATE_FORMAT))\n}\n\nclass DateInput extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  public state: State = {\n    values: this.initialValue,\n    isRange: this.props.element.isRange,\n    isEmpty: false,\n  }\n\n  get initialValue(): Date[] {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf.\n    const storedValue = this.props.widgetMgr.getStringArrayValue(\n      this.props.element\n    )\n    const stringArray =\n      storedValue !== undefined\n        ? storedValue\n        : this.props.element.default || []\n    return stringsToDates(stringArray)\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value: values } = this.props.element\n    this.props.element.setValue = false\n    const dateValues = values.map((v: string) => new Date(v))\n    this.setState(\n      {\n        values: dateValues,\n        isEmpty: !dateValues,\n      },\n      () => {\n        this.commitWidgetValue({ fromUi: false })\n      }\n    )\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setStringArrayValue(\n      element,\n      datesToStrings(this.state.values),\n      source,\n      fragmentId\n    )\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    const defaultValue = stringsToDates(this.props.element.default)\n    this.setState(\n      {\n        values: defaultValue,\n        isEmpty: !defaultValue,\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private handleChange = ({\n    date,\n  }: {\n    date: Date | (Date | null | undefined)[] | null | undefined\n  }): void => {\n    if (date === null || date === undefined) {\n      this.setState({\n        values: [],\n        isEmpty: true,\n      })\n      return\n    }\n\n    const values: Date[] = []\n    if (Array.isArray(date)) {\n      date.forEach((dt: Date | null | undefined) => {\n        if (dt) {\n          values.push(dt)\n        }\n      })\n    } else {\n      values.push(date)\n    }\n\n    this.setState(\n      {\n        values,\n        isEmpty: !values,\n      },\n      () => {\n        if (!this.state.isEmpty) this.commitWidgetValue({ fromUi: true })\n      }\n    )\n  }\n\n  private handleClose = (): void => {\n    const { isEmpty } = this.state\n    if (isEmpty) {\n      this.setState(\n        (_, prevProps) => {\n          return {\n            values: stringsToDates(prevProps.element.default),\n            isEmpty: !stringsToDates(prevProps.element.default),\n          }\n        },\n        () => {\n          this.commitWidgetValue({ fromUi: true })\n        }\n      )\n    }\n  }\n\n  private getMaxDate = (): Date | undefined => {\n    const { element } = this.props\n    const maxDate = element.max\n\n    return maxDate && maxDate.length > 0\n      ? moment(maxDate, DATE_FORMAT).toDate()\n      : undefined\n  }\n\n  public render(): React.ReactNode {\n    const { width, element, disabled, theme, widgetMgr } = this.props\n    const { values, isRange } = this.state\n    const { colors, fontSizes, lineHeights, spacing } = theme\n\n    const style = { width }\n    const minDate = moment(element.min, DATE_FORMAT).toDate()\n    const maxDate = this.getMaxDate()\n    const clearable = element.default.length === 0 && !disabled\n\n    // We need to extract the mask and format (date-fns notation) from the provided format string\n    // The user configured date format is based on the momentJS notation and is only allowed to contain\n    // one of YYYY/MM/DD, DD/MM/YYYY, or MM/DD/YYYY\" and can also use a period (.) or hyphen (-) as separators.\n\n    // We need to convert the provided format into a mask supported by the Baseweb datepicker\n    // Thereby, we need to replace all letters with 9s which refers to any number.\n    const dateMask = element.format.replaceAll(/[a-zA-Z]/g, \"9\")\n    // The Baseweb datepicker supports the date-fns notation for date formatting which is\n    // slightly different from the momentJS notation. Therefore, we need to\n    // convert the provided format into the date-fns notation:\n    const dateFormat = element.format.replaceAll(\"Y\", \"y\").replaceAll(\"D\", \"d\")\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    return (\n      <div className=\"stDateInput\" data-testid=\"stDateInput\" style={style}>\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <UIDatePicker\n          density={DENSITY.high}\n          formatString={dateFormat}\n          mask={isRange ? `${dateMask} – ${dateMask}` : dateMask}\n          placeholder={\n            isRange ? `${element.format} – ${element.format}` : element.format\n          }\n          disabled={disabled}\n          onChange={this.handleChange}\n          onClose={this.handleClose}\n          overrides={{\n            Popover: {\n              props: {\n                placement: PLACEMENT.bottomLeft,\n                overrides: {\n                  Body: {\n                    style: {\n                      border: `${theme.sizes.borderWidth} solid ${colors.fadedText10}`,\n                    },\n                  },\n                },\n              },\n            },\n            CalendarContainer: {\n              style: {\n                fontSize: fontSizes.sm,\n                paddingRight: theme.spacing.sm,\n                paddingLeft: theme.spacing.sm,\n                paddingBottom: theme.spacing.sm,\n                paddingTop: theme.spacing.sm,\n              },\n            },\n            Week: {\n              style: {\n                fontSize: fontSizes.sm,\n              },\n            },\n            Day: {\n              style: ({\n                // Due to a bug in BaseWeb, where the range selection defaults to mono300 and can't be changed, we need to override the background colors for all these shared props:\n                // $pseudoHighlighted: Styles the range selection when you click an initial date, and hover over the end one, but NOT click it.\n                // $pseudoSelected: Styles when a range was selected, click outide, and click the calendar again.\n                // $selected: Styles the background below the red circle from the start and end dates.\n                // $isHovered: Styles the background below the end date when hovered.\n                $pseudoHighlighted,\n                $pseudoSelected,\n                $selected,\n                $isHovered,\n              }) => ({\n                fontSize: fontSizes.sm,\n                lineHeight: lineHeights.base,\n\n                \"::before\": {\n                  backgroundColor:\n                    $selected ||\n                    $pseudoSelected ||\n                    $pseudoHighlighted ||\n                    $isHovered\n                      ? `${colors.secondaryBg} !important`\n                      : colors.transparent,\n                },\n\n                \"::after\": {\n                  borderColor: colors.transparent,\n                },\n              }),\n            },\n            PrevButton: {\n              style: () => ({\n                // Align icon to the center of the button.\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                // Remove primary-color click effect.\n                \":active\": {\n                  backgroundColor: colors.transparent,\n                },\n                \":focus\": {\n                  backgroundColor: colors.transparent,\n                  outline: 0,\n                },\n              }),\n            },\n            NextButton: {\n              style: {\n                // Align icon to the center of the button.\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                // Remove primary-color click effect.\n                \":active\": {\n                  backgroundColor: colors.transparent,\n                },\n                \":focus\": {\n                  backgroundColor: colors.transparent,\n                  outline: 0,\n                },\n              },\n            },\n            Input: {\n              props: {\n                // The default maskChar ` ` causes empty dates to display as ` / / `\n                // Clearing the maskChar so empty dates will not display\n                maskChar: null,\n\n                overrides: {\n                  Root: {\n                    style: {\n                      // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                      borderLeftWidth: theme.sizes.borderWidth,\n                      borderRightWidth: theme.sizes.borderWidth,\n                      borderTopWidth: theme.sizes.borderWidth,\n                      borderBottomWidth: theme.sizes.borderWidth,\n                    },\n                  },\n                  ClearIcon: {\n                    props: {\n                      overrides: {\n                        Svg: {\n                          style: {\n                            color: theme.colors.darkGray,\n                            // Since the close icon is an SVG, and we can't control its viewbox nor its attributes,\n                            // Let's use a scale transform effect to make it bigger.\n                            // The width property only enlarges its bounding box, so it's easier to click.\n                            transform: \"scale(1.41)\",\n                            width: theme.spacing.twoXL,\n                            marginRight: \"-8px\",\n                            \":hover\": {\n                              fill: theme.colors.bodyText,\n                            },\n                          },\n                        },\n                      },\n                    },\n                  },\n                  Input: {\n                    style: {\n                      // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                      paddingRight: spacing.sm,\n                      paddingLeft: spacing.sm,\n                      paddingBottom: spacing.sm,\n                      paddingTop: spacing.sm,\n                      lineHeight: lineHeights.inputWidget,\n                    },\n                    props: {\n                      \"data-testid\": \"stDateInput-Input\",\n                    },\n                  },\n                },\n              },\n            },\n          }}\n          value={values}\n          minDate={minDate}\n          maxDate={maxDate}\n          range={isRange}\n          clearable={clearable}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withTheme(DateInput)\n"],"mappings":"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"}