{"version":3,"file":"TextArea.js","names":["React","Textarea","UITextArea","withTheme","uniqueId","FormClearHelper","InputInstructions","StyledWidgetLabelHelp","WidgetLabel","TooltipIcon","Placement","isInForm","labelVisibilityProtoValueToEnum","jsx","_jsx","jsxs","_jsxs","TextArea","PureComponent","initialValue","storedValue","props","widgetMgr","getStringValue","element","default","constructor","formClearHelper","id","state","dirty","value","commitWidgetValue","source","fragmentId","setStringValue","setState","onFormCleared","_","prevProps","fromUi","onBlur","onChange","e","target","maxChars","length","isEnterKeyPressed","event","keyCode","key","nativeEvent","isComposing","onKeyDown","metaKey","ctrlKey","formId","allowFormEnterToSubmit","preventDefault","submitForm","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","render","disabled","width","theme","style","height","placeholder","allowEnterToSubmit","manageFormClearListener","className","children","label","labelVisibility","htmlFor","help","content","placement","TOP_RIGHT","overrides","Input","lineHeight","lineHeights","inputWidget","minHeight","resize","opacity","paddingRight","spacing","lg","paddingLeft","paddingBottom","paddingTop","Root","borderLeftWidth","sizes","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","breakpoints","hideWidgetDetails","maxLength","type","inForm"],"sources":["../../../../src/components/widgets/TextArea/TextArea.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { Textarea as UITextArea } from \"baseui/textarea\"\nimport { withTheme } from \"@emotion/react\"\nimport uniqueId from \"lodash/uniqueId\"\n\nimport { TextArea as TextAreaProto } from \"@streamlit/lib/src/proto\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  Source,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport InputInstructions from \"@streamlit/lib/src/components/shared/InputInstructions/InputInstructions\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport {\n  isInForm,\n  labelVisibilityProtoValueToEnum,\n} from \"@streamlit/lib/src/util/utils\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nexport interface Props {\n  disabled: boolean\n  element: TextAreaProto\n  widgetMgr: WidgetStateManager\n  width: number\n  theme: EmotionTheme\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * True if the user-specified state.value has not yet been synced to the WidgetStateManager.\n   */\n  dirty: boolean\n\n  /**\n   * The value specified by the user via the UI. If the user didn't touch this\n   * widget's UI, the default value is used.\n   */\n  value: string | null\n}\n\nclass TextArea extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  private readonly id: string\n\n  public state: State = {\n    dirty: false,\n    value: this.initialValue,\n  }\n\n  get initialValue(): string | null {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf.\n    const storedValue = this.props.widgetMgr.getStringValue(this.props.element)\n    return storedValue ?? this.props.element.default ?? null\n  }\n\n  constructor(props: Props) {\n    super(props)\n    this.id = uniqueId(\"text_area_\")\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState({ value: value ?? null }, () => {\n      this.commitWidgetValue({ fromUi: false })\n    })\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setStringValue(element, this.state.value, source, fragmentId)\n    this.setState({ dirty: false })\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default ?? null }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private onBlur = (): void => {\n    if (this.state.dirty) {\n      this.commitWidgetValue({ fromUi: true })\n    }\n  }\n\n  private onChange = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = e.target\n    const { element } = this.props\n    const { maxChars } = element\n\n    if (maxChars !== 0 && value.length > maxChars) {\n      return\n    }\n\n    // mark it dirty but don't update its value in the WidgetMgr\n    // This means that individual keypresses won't trigger a script re-run.\n    this.setState({ dirty: true, value })\n  }\n\n  isEnterKeyPressed = (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ): boolean => {\n    const { keyCode, key } = event\n\n    // Using keyCode as well due to some different behaviors on Windows\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=79407\n    return (\n      (key === \"Enter\" || keyCode === 13 || keyCode === 10) &&\n      // Do not send the sentence being composed when Enter is typed into the IME.\n      !(event.nativeEvent?.isComposing === true)\n    )\n  }\n\n  private onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>): void => {\n    const { metaKey, ctrlKey } = e\n    const { dirty } = this.state\n    const { element, widgetMgr, fragmentId } = this.props\n    const { formId } = element\n    const allowFormEnterToSubmit = widgetMgr.allowFormEnterToSubmit(formId)\n\n    if (this.isEnterKeyPressed(e) && (ctrlKey || metaKey) && dirty) {\n      e.preventDefault()\n\n      this.commitWidgetValue({ fromUi: true })\n      if (allowFormEnterToSubmit) {\n        widgetMgr.submitForm(formId, fragmentId)\n      }\n    }\n  }\n\n  public render(): React.ReactNode {\n    const { element, disabled, width, widgetMgr, theme } = this.props\n    const { value, dirty } = this.state\n    const style = { width }\n    const { height, placeholder, formId } = element\n    // Show \"Please enter\" instructions if in a form & allowed, or not in form\n    const allowEnterToSubmit =\n      widgetMgr.allowFormEnterToSubmit(formId) || !isInForm({ formId })\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      formId,\n      this.onFormCleared\n    )\n\n    return (\n      <div className=\"stTextArea\" data-testid=\"stTextArea\" style={style}>\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n          htmlFor={this.id}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <UITextArea\n          value={value ?? \"\"}\n          placeholder={placeholder}\n          onBlur={this.onBlur}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          aria-label={element.label}\n          disabled={disabled}\n          id={this.id}\n          overrides={{\n            Input: {\n              style: {\n                lineHeight: theme.lineHeights.inputWidget,\n                height: height ? `${height}px` : \"\",\n                minHeight: \"95px\",\n                resize: \"vertical\",\n                \"::placeholder\": {\n                  opacity: \"0.7\",\n                },\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                paddingRight: theme.spacing.lg,\n                paddingLeft: theme.spacing.lg,\n                paddingBottom: theme.spacing.lg,\n                paddingTop: theme.spacing.lg,\n              },\n            },\n            Root: {\n              props: {\n                \"data-testid\": \"stTextAreaRootElement\",\n              },\n              style: {\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n              },\n            },\n          }}\n        />\n        {/* Hide the \"Please enter to apply\" text in small widget sizes */}\n        {width > theme.breakpoints.hideWidgetDetails && (\n          <InputInstructions\n            dirty={dirty}\n            value={value ?? \"\"}\n            maxLength={element.maxChars}\n            type={\"multiline\"}\n            inForm={isInForm({ formId })}\n            allowEnterToSubmit={allowEnterToSubmit}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default withTheme(TextArea)\n"],"mappings":"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"}