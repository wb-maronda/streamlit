{"version":3,"file":"ChatInput.js","names":["React","useEffect","useRef","useState","useTheme","Send","Textarea","UITextArea","Icon","InputInstructions","hasLightBackgroundColor","StyledChatInput","StyledChatInputContainer","StyledInputInstructionsContainer","StyledSendIconButton","StyledSendIconButtonContainer","jsx","_jsx","jsxs","_jsxs","MAX_VISIBLE_NUM_LINES","ROUNDING_OFFSET","isEnterKeyPressed","event","keyCode","key","nativeEvent","isComposing","ChatInput","_ref","width","element","widgetMgr","fragmentId","theme","dirty","setDirty","value","setValue","default","scrollHeight","setScrollHeight","chatInputRef","heightGuidance","minHeight","maxHeight","getScrollHeight","current","textarea","placeholder","style","height","handleSubmit","focus","setStringTriggerValue","fromUi","handleKeyDown","e","metaKey","ctrlKey","shiftKey","shouldSubmit","preventDefault","handleChange","target","maxChars","length","val","offsetHeight","disabled","lightTheme","placeholderColor","colors","gray70","gray80","isInputExtended","Math","abs","className","children","inputRef","onChange","onKeyDown","rows","overrides","Root","sizes","minElementHeight","outline","backgroundColor","transparent","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","InputContainer","Input","props","lineHeight","lineHeights","inputWidget","color","paddingRight","paddingLeft","spacing","sm","paddingBottom","paddingTop","breakpoints","hideWidgetDetails","maxLength","type","inForm","onClick","extended","content","size"],"sources":["../../../../src/components/widgets/ChatInput/ChatInput.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport { Send } from \"@emotion-icons/material-rounded\"\nimport { Textarea as UITextArea } from \"baseui/textarea\"\n\nimport { ChatInput as ChatInputProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport InputInstructions from \"@streamlit/lib/src/components/shared/InputInstructions/InputInstructions\"\nimport { hasLightBackgroundColor } from \"@streamlit/lib/src/theme\"\n\nimport {\n  StyledChatInput,\n  StyledChatInputContainer,\n  StyledInputInstructionsContainer,\n  StyledSendIconButton,\n  StyledSendIconButtonContainer,\n} from \"./styled-components\"\n\nexport interface Props {\n  disabled: boolean\n  element: ChatInputProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\n// We want to show easily that there's scrolling so we deliberately choose\n// a half size.\nconst MAX_VISIBLE_NUM_LINES = 6.5\n// Rounding errors can arbitrarily create scrollbars. We add a rounding offset\n// to manage it better.\nconst ROUNDING_OFFSET = 1\n\nconst isEnterKeyPressed = (\n  event: KeyboardEvent<HTMLTextAreaElement>\n): boolean => {\n  // Using keyCode as well due to some different behaviors on Windows\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=79407\n\n  const { keyCode, key } = event\n  return (\n    (key === \"Enter\" || keyCode === 13 || keyCode === 10) &&\n    // Do not send the sentence being composed when Enter is typed into the IME.\n    !(event.nativeEvent?.isComposing === true)\n  )\n}\n\nfunction ChatInput({\n  width,\n  element,\n  widgetMgr,\n  fragmentId,\n}: Props): React.ReactElement {\n  const theme = useTheme()\n  // True if the user-specified state.value has not yet been synced to the WidgetStateManager.\n  const [dirty, setDirty] = useState(false)\n  // The value specified by the user via the UI. If the user didn't touch this widget's UI, the default value is used.\n  const [value, setValue] = useState(element.default)\n  // The value of the height of the textarea. It depends on a variety of factors including the default height, and autogrowing\n  const [scrollHeight, setScrollHeight] = useState(0)\n  const chatInputRef = useRef<HTMLTextAreaElement>(null)\n  const heightGuidance = useRef({ minHeight: 0, maxHeight: 0 })\n\n  const getScrollHeight = (): number => {\n    let scrollHeight = 0\n    const { current: textarea } = chatInputRef\n    if (textarea) {\n      const placeholder = textarea.placeholder\n      textarea.placeholder = \"\"\n      textarea.style.height = \"auto\"\n      scrollHeight = textarea.scrollHeight\n      textarea.placeholder = placeholder\n      textarea.style.height = \"\"\n    }\n\n    return scrollHeight\n  }\n\n  const handleSubmit = (): void => {\n    // We want the chat input to always be in focus\n    // even if the user clicks the submit button\n    if (chatInputRef.current) {\n      chatInputRef.current.focus()\n    }\n\n    if (!value) {\n      return\n    }\n\n    widgetMgr.setStringTriggerValue(\n      element,\n      value,\n      { fromUi: true },\n      fragmentId\n    )\n    setDirty(false)\n    setValue(\"\")\n    setScrollHeight(0)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    const { metaKey, ctrlKey, shiftKey } = e\n    const shouldSubmit =\n      isEnterKeyPressed(e) && !shiftKey && !ctrlKey && !metaKey\n\n    if (shouldSubmit) {\n      e.preventDefault()\n\n      handleSubmit()\n    }\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = e.target\n    const { maxChars } = element\n\n    if (maxChars !== 0 && value.length > maxChars) {\n      return\n    }\n\n    setDirty(value !== \"\")\n    setValue(value)\n    setScrollHeight(getScrollHeight())\n  }\n\n  useEffect(() => {\n    if (element.setValue) {\n      // We are intentionally setting this to avoid regularly calling this effect.\n      element.setValue = false\n      const val = element.value || \"\"\n      setValue(val)\n      setDirty(val !== \"\")\n    }\n  }, [element])\n\n  useEffect(() => {\n    if (chatInputRef.current) {\n      const { offsetHeight } = chatInputRef.current\n      heightGuidance.current.minHeight = offsetHeight\n      heightGuidance.current.maxHeight = offsetHeight * MAX_VISIBLE_NUM_LINES\n    }\n  }, [chatInputRef])\n\n  const { disabled, placeholder, maxChars } = element\n  const lightTheme = hasLightBackgroundColor(theme)\n  const { minHeight, maxHeight } = heightGuidance.current\n  const placeholderColor = lightTheme\n    ? theme.colors.gray70\n    : theme.colors.gray80\n\n  const isInputExtended =\n    scrollHeight > 0 && chatInputRef.current\n      ? Math.abs(scrollHeight - minHeight) > ROUNDING_OFFSET\n      : false\n\n  return (\n    <StyledChatInputContainer\n      className=\"stChatInput\"\n      data-testid=\"stChatInput\"\n      width={width}\n    >\n      <StyledChatInput>\n        <UITextArea\n          inputRef={chatInputRef}\n          value={value}\n          placeholder={placeholder}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          aria-label={placeholder}\n          disabled={disabled}\n          rows={1}\n          overrides={{\n            Root: {\n              style: {\n                minHeight: theme.sizes.minElementHeight,\n                outline: \"none\",\n                backgroundColor: theme.colors.transparent,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n                width: `${width}px`,\n              },\n            },\n            InputContainer: {\n              style: {\n                backgroundColor: theme.colors.transparent,\n              },\n            },\n            Input: {\n              props: {\n                \"data-testid\": \"stChatInputTextArea\",\n              },\n              style: {\n                lineHeight: theme.lineHeights.inputWidget,\n                backgroundColor: theme.colors.transparent,\n                \"::placeholder\": {\n                  color: placeholderColor,\n                },\n                height: isInputExtended\n                  ? `${scrollHeight + ROUNDING_OFFSET}px`\n                  : \"auto\",\n                maxHeight: maxHeight ? `${maxHeight}px` : \"none\",\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                paddingRight: \"3rem\",\n                paddingLeft: theme.spacing.sm,\n                paddingBottom: theme.spacing.sm,\n                paddingTop: theme.spacing.sm,\n              },\n            },\n          }}\n        />\n        {/* Hide the character limit in small widget sizes */}\n        {width > theme.breakpoints.hideWidgetDetails && (\n          <StyledInputInstructionsContainer>\n            <InputInstructions\n              dirty={dirty}\n              value={value}\n              maxLength={maxChars}\n              type=\"chat\"\n              // Chat Input are not able to be used in forms\n              inForm={false}\n            />\n          </StyledInputInstructionsContainer>\n        )}\n        <StyledSendIconButtonContainer>\n          <StyledSendIconButton\n            onClick={handleSubmit}\n            disabled={!dirty || disabled}\n            extended={isInputExtended}\n            data-testid=\"stChatInputSubmitButton\"\n          >\n            <Icon content={Send} size=\"xl\" color=\"inherit\" />\n          </StyledSendIconButton>\n        </StyledSendIconButtonContainer>\n      </StyledChatInput>\n    </StyledChatInputContainer>\n  )\n}\n\nexport default ChatInput\n"],"mappings":"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"}