{"version":3,"file":"WidgetLabel.test.js","names":["React","screen","render","LabelVisibilityOptions","WidgetLabel","jsx","_jsx","getProps","props","label","describe","it","expect","getByTestId","toBeInTheDocument","getByText","toHaveStyle","disabled","toHaveAttribute","labelVisibility","Hidden"],"sources":["../../../../src/components/widgets/BaseWidget/WidgetLabel.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { LabelVisibilityOptions } from \"@streamlit/lib/src/util/utils\"\n\nimport { LabelProps, WidgetLabel } from \"./WidgetLabel\"\n\nconst getProps = (props?: Partial<LabelProps>): LabelProps => ({\n  label: \"Label\",\n  ...props,\n})\n\ndescribe(\"Widget Label\", () => {\n  it(\"renders WidgetLabel as expected\", () => {\n    const props = getProps()\n    render(<WidgetLabel {...props} />)\n\n    expect(screen.getByTestId(\"stWidgetLabel\")).toBeInTheDocument()\n  })\n\n  it(\"renders label text as expected\", () => {\n    const props = getProps()\n    render(<WidgetLabel {...props} />)\n\n    expect(screen.getByTestId(\"stWidgetLabel\")).toBeInTheDocument()\n    // Test that isLabel prop is true, which makes font size smaller\n    expect(screen.getByText(`${props.label}`)).toHaveStyle(`font-size: 14px`)\n  })\n\n  it(\"can be disabled\", () => {\n    const props = getProps({ disabled: true })\n    render(<WidgetLabel {...props} />)\n\n    expect(screen.getByTestId(\"stWidgetLabel\")).toHaveAttribute(\"disabled\")\n  })\n\n  it(\"can hide label visibility\", () => {\n    const props = getProps({ labelVisibility: LabelVisibilityOptions.Hidden })\n    render(<WidgetLabel {...props} />)\n\n    expect(screen.getByTestId(\"stWidgetLabel\")).toHaveStyle(\n      \"visibility: hidden\"\n    )\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,2BAA2B;AAClC,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,MAAM;AACf,SAASC,sBAAsB;AAE/B,SAAqBC,WAAW;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAEvD,MAAMC,QAAQ,GAAIC,KAA2B,KAAkB;EAC7DC,KAAK,EAAE,OAAO;EACd,GAAGD;AACL,CAAC,CAAC;AAEFE,QAAQ,CAAC,cAAc,EAAE,MAAM;EAC7BC,EAAE,CAAC,iCAAiC,EAAE,MAAM;IAC1C,MAAMH,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxBL,MAAM,eAACI,IAAA,CAACF,WAAW;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAElCI,MAAM,CAACX,MAAM,CAACY,WAAW,CAAC,eAAe,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACjE,CAAC,CAAC;EAEFH,EAAE,CAAC,gCAAgC,EAAE,MAAM;IACzC,MAAMH,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxBL,MAAM,eAACI,IAAA,CAACF,WAAW;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAElCI,MAAM,CAACX,MAAM,CAACY,WAAW,CAAC,eAAe,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IAC/D;IACAF,MAAM,CAACX,MAAM,CAACc,SAAS,CAAE,GAAEP,KAAK,CAACC,KAAM,EAAC,CAAC,CAAC,CAACO,WAAW,CAAE,iBAAgB,CAAC;EAC3E,CAAC,CAAC;EAEFL,EAAE,CAAC,iBAAiB,EAAE,MAAM;IAC1B,MAAMH,KAAK,GAAGD,QAAQ,CAAC;MAAEU,QAAQ,EAAE;IAAK,CAAC,CAAC;IAC1Cf,MAAM,eAACI,IAAA,CAACF,WAAW;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAElCI,MAAM,CAACX,MAAM,CAACY,WAAW,CAAC,eAAe,CAAC,CAAC,CAACK,eAAe,CAAC,UAAU,CAAC;EACzE,CAAC,CAAC;EAEFP,EAAE,CAAC,2BAA2B,EAAE,MAAM;IACpC,MAAMH,KAAK,GAAGD,QAAQ,CAAC;MAAEY,eAAe,EAAEhB,sBAAsB,CAACiB;IAAO,CAAC,CAAC;IAC1ElB,MAAM,eAACI,IAAA,CAACF,WAAW;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAElCI,MAAM,CAACX,MAAM,CAACY,WAAW,CAAC,eAAe,CAAC,CAAC,CAACG,WAAW,CACrD,oBACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}