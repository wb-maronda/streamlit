{"version":3,"file":"Multiselect.js","names":["React","isMobile","without","withTheme","FormClearHelper","ChevronDown","TYPE","Select","UISelect","WidgetLabel","StyledWidgetLabelHelp","StyledUISelect","TooltipIcon","Placement","VirtualDropdown","fuzzyFilterSelectOptions","labelVisibilityProtoValueToEnum","jsx","_jsx","jsxs","_jsxs","Multiselect","PureComponent","constructor","arguments","formClearHelper","state","value","initialValue","commitWidgetValue","source","widgetMgr","element","fragmentId","props","setIntArrayValue","onFormCleared","setState","_","prevProps","default","fromUi","onChange","params","maxSelections","type","length","generateNewState","filterOptions","options","filterValue","overMaxSelections","unselectedOptions","filter","option","includes","Number","getNoResultsMsg","concat","storedValue","getIntArrayValue","undefined","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","valueFromState","map","i","label","toString","data","getIndex","_data$option","valueId","parseInt","Error","render","_element$labelVisibil","theme","width","style","disabled","placeholder","selectOptions","idx","manageFormClearListener","formId","showKeyboardOnMobile","className","children","labelVisibility","help","content","placement","TOP_RIGHT","labelKey","valueKey","select","multi","size","noResultsMsg","closeOnSelect","overrides","SelectArrow","component","Svg","iconSizes","xl","height","IconsContainer","paddingRight","spacing","sm","ControlContainer","minHeight","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","Placeholder","flex","ValueContainer","paddingLeft","paddingTop","paddingBottom","ClearIcon","color","colors","darkGray","transform","twoXL","fill","bodyText","SearchIcon","Tag","Root","borderTopLeftRadius","radii","md","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","fontSize","fontSizes","marginLeft","marginRight","Action","ActionIcon","Text","MultiValue","Input","readOnly","Dropdown"],"sources":["../../../../src/components/widgets/Multiselect/Multiselect.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { isMobile } from \"react-device-detect\"\nimport without from \"lodash/without\"\nimport { withTheme } from \"@emotion/react\"\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  WidgetStateManager,\n  Source,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport { MultiSelect as MultiSelectProto } from \"@streamlit/lib/src/proto\"\nimport { ChevronDown } from \"baseui/icon\"\nimport {\n  TYPE,\n  Select as UISelect,\n  Option,\n  OnChangeParams,\n} from \"baseui/select\"\nimport {\n  WidgetLabel,\n  StyledWidgetLabelHelp,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { StyledUISelect } from \"@streamlit/lib/src/components/widgets/Multiselect/styled-components\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { VirtualDropdown } from \"@streamlit/lib/src/components/shared/Dropdown\"\nimport { fuzzyFilterSelectOptions } from \"@streamlit/lib/src/components/shared/Dropdown/Selectbox\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nexport interface Props {\n  disabled: boolean\n  element: MultiSelectProto\n  theme: EmotionTheme\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * The value specified by the user via the UI.\n   */\n  value: number[]\n}\n\ninterface MultiselectOption {\n  label: string\n  value: string\n}\n\nclass Multiselect extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  public state: State = {\n    value: this.initialValue,\n  }\n\n  private overMaxSelections(): boolean {\n    return (\n      this.props.element.maxSelections > 0 &&\n      this.state.value.length >= this.props.element.maxSelections\n    )\n  }\n\n  private getNoResultsMsg(): string {\n    const { maxSelections } = this.props.element\n    const { value } = this.state\n\n    if (maxSelections === 0) {\n      return \"No results\"\n    } else if (value.length === maxSelections) {\n      const option = maxSelections !== 1 ? \"options\" : \"option\"\n      return `You can only select up to ${maxSelections} ${option}. Remove an option first.`\n    }\n    return \"No results\"\n  }\n\n  get initialValue(): number[] {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf.\n    const storedValue = this.props.widgetMgr.getIntArrayValue(\n      this.props.element\n    )\n    return storedValue !== undefined ? storedValue : this.props.element.default\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState({ value }, () => {\n      this.commitWidgetValue({ fromUi: false })\n    })\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setIntArrayValue(element, this.state.value, source, fragmentId)\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private get valueFromState(): MultiselectOption[] {\n    return this.state.value.map(i => {\n      const label = this.props.element.options[i]\n      return { value: i.toString(), label }\n    })\n  }\n\n  private generateNewState(data: OnChangeParams): State {\n    const getIndex = (): number => {\n      const valueId = data.option?.value\n      return parseInt(valueId, 10)\n    }\n\n    switch (data.type) {\n      case \"remove\": {\n        return {\n          value: without(this.state.value, getIndex()),\n        }\n      }\n      case \"clear\": {\n        return { value: [] }\n      }\n      case \"select\": {\n        return {\n          value: this.state.value.concat([getIndex()]),\n        }\n      }\n      default: {\n        throw new Error(`State transition is unknown: ${data.type}`)\n      }\n    }\n  }\n\n  private onChange = (params: OnChangeParams): void => {\n    if (\n      this.props.element.maxSelections &&\n      params.type === \"select\" &&\n      this.state.value.length >= this.props.element.maxSelections\n    ) {\n      return\n    }\n    this.setState(this.generateNewState(params), () => {\n      this.commitWidgetValue({ fromUi: true })\n    })\n  }\n\n  private filterOptions = (\n    options: readonly Option[],\n    filterValue: string\n  ): readonly Option[] => {\n    if (this.overMaxSelections()) {\n      return []\n    }\n    // We need to manually filter for previously selected options here\n    const unselectedOptions = options.filter(\n      option => !this.state.value.includes(Number(option.value))\n    )\n\n    return fuzzyFilterSelectOptions(\n      unselectedOptions as MultiselectOption[],\n      filterValue\n    )\n  }\n\n  public render(): React.ReactNode {\n    const { element, theme, width, widgetMgr } = this.props\n    const style = { width }\n    const { options } = element\n    const disabled = options.length === 0 ? true : this.props.disabled\n    const placeholder =\n      options.length === 0 ? \"No options to select.\" : element.placeholder\n    const selectOptions: MultiselectOption[] = options.map(\n      (option: string, idx: number) => {\n        return {\n          label: option,\n          value: idx.toString(),\n        }\n      }\n    )\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    // Check if we have more than 10 options in the selectbox.\n    // If that's true, we show the keyboard on mobile. If not, we hide it.\n    const showKeyboardOnMobile = options.length > 10\n\n    return (\n      <div\n        className=\"row-widget stMultiSelect\"\n        data-testid=\"stMultiSelect\"\n        style={style}\n      >\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <StyledUISelect>\n          <UISelect\n            options={selectOptions}\n            labelKey=\"label\"\n            valueKey=\"value\"\n            aria-label={element.label}\n            placeholder={placeholder}\n            type={TYPE.select}\n            multi\n            onChange={this.onChange}\n            value={this.valueFromState}\n            disabled={disabled}\n            size={\"compact\"}\n            noResultsMsg={this.getNoResultsMsg()}\n            filterOptions={this.filterOptions}\n            closeOnSelect={false}\n            overrides={{\n              SelectArrow: {\n                component: ChevronDown,\n\n                props: {\n                  overrides: {\n                    Svg: {\n                      style: () => ({\n                        width: theme.iconSizes.xl,\n                        height: theme.iconSizes.xl,\n                      }),\n                    },\n                  },\n                },\n              },\n\n              IconsContainer: {\n                style: () => ({\n                  paddingRight: theme.spacing.sm,\n                }),\n              },\n              ControlContainer: {\n                style: {\n                  minHeight: theme.sizes.minElementHeight,\n                  // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                  borderLeftWidth: theme.sizes.borderWidth,\n                  borderRightWidth: theme.sizes.borderWidth,\n                  borderTopWidth: theme.sizes.borderWidth,\n                  borderBottomWidth: theme.sizes.borderWidth,\n                },\n              },\n              Placeholder: {\n                style: () => ({\n                  flex: \"inherit\",\n                }),\n              },\n              ValueContainer: {\n                style: () => ({\n                  paddingLeft: theme.spacing.sm,\n                  paddingTop: 0,\n                  paddingBottom: 0,\n                  paddingRight: 0,\n                }),\n              },\n              ClearIcon: {\n                props: {\n                  overrides: {\n                    Svg: {\n                      style: {\n                        color: theme.colors.darkGray,\n                        // Since the close icon is an SVG, and we can't control its viewbox nor its attributes,\n                        // Let's use a scale transform effect to make it bigger.\n                        // The width property only enlarges its bounding box, so it's easier to click.\n                        transform: \"scale(1.5)\",\n                        width: theme.spacing.twoXL,\n\n                        \":hover\": {\n                          fill: theme.colors.bodyText,\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n              SearchIcon: {\n                style: {\n                  color: theme.colors.darkGray,\n                },\n              },\n              Tag: {\n                props: {\n                  overrides: {\n                    Root: {\n                      style: {\n                        borderTopLeftRadius: theme.radii.md,\n                        borderTopRightRadius: theme.radii.md,\n                        borderBottomRightRadius: theme.radii.md,\n                        borderBottomLeftRadius: theme.radii.md,\n                        fontSize: theme.fontSizes.sm,\n                        paddingLeft: theme.spacing.sm,\n                        marginLeft: 0,\n                        marginRight: theme.spacing.sm,\n                        height: \"28px\",\n                      },\n                    },\n                    Action: {\n                      style: {\n                        paddingLeft: 0,\n                      },\n                    },\n                    ActionIcon: {\n                      props: {\n                        overrides: {\n                          Svg: {\n                            style: {\n                              width: \"10px\",\n                              height: \"10px\",\n                            },\n                          },\n                        },\n                      },\n                    },\n                    Text: {\n                      style: {\n                        fontSize: theme.fontSizes.md,\n                      },\n                    },\n                  },\n                },\n              },\n              MultiValue: {\n                props: {\n                  overrides: {\n                    Root: {\n                      style: {\n                        fontSize: theme.fontSizes.sm,\n                      },\n                    },\n                  },\n                },\n              },\n              Input: {\n                props: {\n                  // Change the 'readonly' prop to hide the mobile keyboard if options < 10\n                  readOnly:\n                    isMobile && showKeyboardOnMobile === false\n                      ? \"readonly\"\n                      : null,\n                },\n              },\n              Dropdown: { component: VirtualDropdown },\n            }}\n          />\n        </StyledUISelect>\n      </div>\n    )\n  }\n}\n\nexport default withTheme(Multiselect)\n"],"mappings":"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"}