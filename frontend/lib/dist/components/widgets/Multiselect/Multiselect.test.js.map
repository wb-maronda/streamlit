{"version":3,"file":"Multiselect.test.js","names":["React","screen","fireEvent","render","WidgetStateManager","LabelVisibilityMessage","LabelVisibilityMessageProto","MultiSelect","MultiSelectProto","mockTheme","Multiselect","jsx","_jsx","getProps","elementProps","arguments","length","undefined","widgetProps","element","create","id","label","default","options","placeholder","width","disabled","theme","emotion","widgetMgr","sendRerunBackMsg","jest","fn","formsDataChanged","describe","it","props","multiSelect","getByRole","expect","toBeInTheDocument","spyOn","setIntArrayValue","toHaveBeenCalledWith","fromUi","fragmentId","getByTestId","toHaveClass","toHaveStyle","concat","widgetLabel","queryByText","labelVisibility","value","LabelVisibilityOptions","HIDDEN","COLLAPSED","getByText","expandListButton","getAllByTitle","click","getAllByRole","toBe","forEach","option","idx","toHaveTextContent","change","target","match","toBeDisabled","selections","deleteOptionButton","clearAllButton","name","formId","setFormClearOnSubmit","remainingOptions","submitForm","updatedOptions","toHaveBeenLastCalledWith","maxSelections"],"sources":["../../../../src/components/widgets/Multiselect/Multiselect.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport \"@testing-library/jest-dom\"\n\nimport { screen, fireEvent } from \"@testing-library/react\"\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  LabelVisibilityMessage as LabelVisibilityMessageProto,\n  MultiSelect as MultiSelectProto,\n} from \"@streamlit/lib/src/proto\"\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\nimport Multiselect, { Props } from \"./Multiselect\"\n\nconst getProps = (\n  elementProps: Partial<MultiSelectProto> = {},\n  widgetProps: Partial<Props> = {}\n): Props => ({\n  element: MultiSelectProto.create({\n    id: \"1\",\n    label: \"Label\",\n    default: [0],\n    options: [\"a\", \"b\", \"c\"],\n    placeholder: \"Please select\",\n    ...elementProps,\n  }),\n  width: 0,\n  disabled: false,\n  theme: mockTheme.emotion,\n  widgetMgr: new WidgetStateManager({\n    sendRerunBackMsg: jest.fn(),\n    formsDataChanged: jest.fn(),\n  }),\n  ...widgetProps,\n})\n\ndescribe(\"Multiselect widget\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(<Multiselect {...props} />)\n\n    const multiSelect = screen.getByRole(\"combobox\")\n    expect(multiSelect).toBeInTheDocument()\n  })\n\n  it(\"sets widget value on mount\", () => {\n    const props = getProps()\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<Multiselect {...props} />)\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n      props.element,\n      props.element.default,\n      {\n        fromUi: false,\n      },\n      undefined\n    )\n  })\n\n  it(\"can pass fragmentId to setIntArrayValue\", () => {\n    const props = getProps(undefined, { fragmentId: \"myFragmentId\" })\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<Multiselect {...props} />)\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n      props.element,\n      props.element.default,\n      {\n        fromUi: false,\n      },\n      \"myFragmentId\"\n    )\n  })\n\n  it(\"has correct className and style\", () => {\n    const props = getProps()\n    render(<Multiselect {...props} />)\n    const multiSelect = screen.getByTestId(\"stMultiSelect\")\n\n    expect(multiSelect).toHaveClass(\"row-widget\")\n    expect(multiSelect).toHaveClass(\"stMultiSelect\")\n    expect(multiSelect).toHaveStyle(`width: ${props.width}px`)\n  })\n\n  it(\"renders a label\", () => {\n    const props = getProps()\n    render(<Multiselect {...props} />)\n\n    const widgetLabel = screen.queryByText(`${props.element.label}`)\n    expect(widgetLabel).toBeInTheDocument()\n  })\n\n  it(\"pass labelVisibility prop to StyledWidgetLabel correctly when hidden\", () => {\n    const props = getProps({\n      labelVisibility: {\n        value: LabelVisibilityMessageProto.LabelVisibilityOptions.HIDDEN,\n      },\n    })\n    render(<Multiselect {...props} />)\n    expect(screen.getByTestId(\"stWidgetLabel\")).toHaveStyle(\n      \"visibility: hidden\"\n    )\n  })\n\n  it(\"pass labelVisibility prop to StyledWidgetLabel correctly when collapsed\", () => {\n    const props = getProps({\n      labelVisibility: {\n        value: LabelVisibilityMessageProto.LabelVisibilityOptions.COLLAPSED,\n      },\n    })\n    render(<Multiselect {...props} />)\n    expect(screen.getByTestId(\"stWidgetLabel\")).toHaveStyle(\"display: none\")\n  })\n\n  describe(\"placeholder\", () => {\n    it(\"renders when it's empty\", () => {\n      const props = getProps({ default: [] })\n      render(<Multiselect {...props} />)\n\n      const placeholder = screen.getByText(\"Please select\")\n      expect(placeholder).toBeInTheDocument()\n    })\n\n    it(\"renders with empty options\", () => {\n      const props = getProps({ default: [], options: [] })\n      render(<Multiselect {...props} />)\n\n      const placeholder = screen.getByText(\"No options to select.\")\n      expect(placeholder).toBeInTheDocument()\n    })\n  })\n\n  it(\"renders options\", () => {\n    const props = getProps({ default: [] })\n    render(<Multiselect {...props} />)\n\n    const expandListButton = screen.getAllByTitle(\"open\")[0]\n    fireEvent.click(expandListButton)\n\n    const options = screen.getAllByRole(\"option\")\n    expect(options.length).toBe(props.element.options.length)\n    options.forEach((option, idx) => {\n      expect(option).toHaveTextContent(props.element.options[idx])\n    })\n  })\n\n  it(\"filters based on label, not value\", () => {\n    const props = getProps({ default: [] })\n    render(<Multiselect {...props} />)\n\n    const multiSelect = screen.getByRole(\"combobox\")\n\n    fireEvent.change(multiSelect, { target: { value: \"1\" } })\n    expect(screen.getByText(\"No results\")).toBeInTheDocument()\n\n    fireEvent.change(multiSelect, { target: { value: \"a\" } })\n    const match = screen.getByRole(\"option\")\n    expect(match).toHaveTextContent(\"a\")\n  })\n\n  it(\"can be disabled\", () => {\n    const props = getProps({}, { disabled: true })\n    render(<Multiselect {...props} />)\n    const multiSelect = screen.getByRole(\"combobox\")\n    expect(multiSelect).toBeDisabled()\n  })\n\n  it(\"can select multiple options\", () => {\n    const props = getProps()\n    render(<Multiselect {...props} />)\n\n    const multiSelect = screen.getByRole(\"combobox\")\n    fireEvent.change(multiSelect, { target: { value: \"b\" } })\n    const match = screen.getByRole(\"option\")\n    fireEvent.click(match)\n\n    const selections = screen.getAllByRole(\"button\")\n    expect(selections[0]).toHaveTextContent(\"a\")\n    expect(selections[1]).toHaveTextContent(\"b\")\n  })\n\n  it(\"can remove options\", () => {\n    const props = getProps()\n    render(<Multiselect {...props} />)\n\n    // Clear current selection\n    const deleteOptionButton = screen.getAllByTitle(\"Delete\")[0]\n    fireEvent.click(deleteOptionButton)\n\n    // Should now see all options available again\n    const expandListButton = screen.getAllByTitle(\"open\")[0]\n    fireEvent.click(expandListButton)\n\n    const options = screen.getAllByRole(\"option\")\n    expect(options.length).toBe(props.element.options.length)\n    options.forEach((option, idx) => {\n      expect(option).toHaveTextContent(props.element.options[idx])\n    })\n  })\n\n  it(\"can clear all\", () => {\n    const props = getProps()\n    render(<Multiselect {...props} />)\n\n    // Clear all selections\n    const clearAllButton = screen.getByRole(\"button\", { name: \"Clear all\" })\n    fireEvent.click(clearAllButton)\n\n    // Should now see all options available again\n    const expandListButton = screen.getAllByTitle(\"open\")[0]\n    fireEvent.click(expandListButton)\n\n    const options = screen.getAllByRole(\"option\")\n    expect(options.length).toBe(props.element.options.length)\n    options.forEach((option, idx) => {\n      expect(option).toHaveTextContent(props.element.options[idx])\n    })\n  })\n\n  it(\"resets its value when form is cleared\", () => {\n    // Create a widget in a clearOnSubmit form\n    const props = getProps({ formId: \"form\" })\n    props.widgetMgr.setFormClearOnSubmit(\"form\", true)\n\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<Multiselect {...props} />)\n\n    // Change the widget value\n    const multiSelect = screen.getByRole(\"combobox\")\n    fireEvent.change(multiSelect, { target: { value: \"b\" } })\n    const match = screen.getByRole(\"option\")\n    // Select b\n    fireEvent.click(match)\n\n    // Options list should only have c available - a & b selected\n    const remainingOptions = screen.getAllByRole(\"option\")\n    expect(remainingOptions.length).toBe(1)\n    expect(remainingOptions[0]).toHaveTextContent(\"c\")\n\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n      props.element,\n      [0, 1],\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n\n    // \"Submit\" the form\n    props.widgetMgr.submitForm(\"form\", undefined)\n\n    // Our widget should be reset, and the widgetMgr should be updated\n    const expandListButton = screen.getAllByTitle(\"open\")[0]\n    fireEvent.click(expandListButton)\n    // Options list should only have b & c available - default a selected\n    const updatedOptions = screen.getAllByRole(\"option\")\n    expect(updatedOptions.length).toBe(2)\n    expect(updatedOptions[0]).toHaveTextContent(\"b\")\n    expect(updatedOptions[1]).toHaveTextContent(\"c\")\n\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenLastCalledWith(\n      props.element,\n      props.element.default,\n      {\n        fromUi: true,\n      },\n      undefined\n    )\n  })\n\n  describe(\"properly invalidates going over max selections\", () => {\n    it(\"has correct noResultsMsg when maxSelections is not passed\", () => {\n      const props = getProps(\n        MultiSelectProto.create({\n          id: \"1\",\n          label: \"Label\",\n          default: [0],\n          options: [\"a\", \"b\", \"c\"],\n        })\n      )\n      render(<Multiselect {...props} />)\n\n      // Type something with no matches\n      const multiSelect = screen.getByRole(\"combobox\")\n      fireEvent.change(multiSelect, { target: { value: \"z\" } })\n\n      expect(screen.getByText(\"No results\")).toBeInTheDocument()\n    })\n\n    it(\"has correct noResultsMsg when no match and selections < maxSelections\", () => {\n      const props = getProps(\n        MultiSelectProto.create({\n          id: \"1\",\n          label: \"Label\",\n          default: [0],\n          options: [\"a\", \"b\", \"c\"],\n          maxSelections: 3,\n        })\n      )\n      render(<Multiselect {...props} />)\n\n      // Type something with no matches\n      const multiSelect = screen.getByRole(\"combobox\")\n      fireEvent.change(multiSelect, { target: { value: \"z\" } })\n\n      expect(screen.getByText(\"No results\")).toBeInTheDocument()\n    })\n\n    it(\"has correct noResultsMsg when maxSelections reached\", () => {\n      const props = getProps(\n        MultiSelectProto.create({\n          id: \"1\",\n          label: \"Label\",\n          default: [0],\n          options: [\"a\", \"b\", \"c\"],\n          maxSelections: 2,\n        })\n      )\n      render(<Multiselect {...props} />)\n\n      // Select another option, b\n      const multiSelect = screen.getByRole(\"combobox\")\n      fireEvent.change(multiSelect, { target: { value: \"b\" } })\n      const match = screen.getByRole(\"option\")\n      fireEvent.click(match)\n\n      expect(\n        screen.getByText(\n          \"You can only select up to 2 options. Remove an option first.\"\n        )\n      ).toBeInTheDocument()\n    })\n\n    it(\"does not allow for more selection when an option is picked & maxSelections === 1\", () => {\n      const props = getProps(\n        MultiSelectProto.create({\n          id: \"1\",\n          label: \"Label\",\n          default: [0],\n          options: [\"a\", \"b\", \"c\"],\n          maxSelections: 1,\n        })\n      )\n      render(<Multiselect {...props} />)\n\n      const multiSelect = screen.getByRole(\"combobox\")\n      fireEvent.click(multiSelect)\n\n      expect(\n        screen.getByText(\n          \"You can only select up to 1 option. Remove an option first.\"\n        )\n      ).toBeInTheDocument()\n    })\n\n    it(\"does allow an option to be removed when we are at max selections\", () => {\n      const props = getProps(\n        MultiSelectProto.create({\n          id: \"1\",\n          label: \"Label\",\n          default: [0, 1],\n          options: [\"a\", \"b\", \"c\"],\n          maxSelections: 2,\n        })\n      )\n      render(<Multiselect {...props} />)\n\n      // Clear a selection\n      const deleteOptionButton = screen.getAllByTitle(\"Delete\")[0]\n      fireEvent.click(deleteOptionButton)\n\n      // Options list should only have a & c available - b selected\n      const expandListButton = screen.getAllByTitle(\"open\")[0]\n      fireEvent.click(expandListButton)\n      const updatedOptions = screen.getAllByRole(\"option\")\n      expect(updatedOptions.length).toBe(2)\n      expect(updatedOptions[0]).toHaveTextContent(\"a\")\n      expect(updatedOptions[1]).toHaveTextContent(\"c\")\n    })\n  })\n})\n"],"mappings":"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"}