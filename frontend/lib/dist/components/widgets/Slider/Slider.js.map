{"version":3,"file":"Slider.js","names":["React","pick","Slider","UISlider","withTheme","sprintf","moment","FormClearHelper","SliderProto","debounce","labelVisibilityProtoValueToEnum","StyledWidgetLabelHelp","WidgetLabel","TooltipIcon","Placement","StyledThumb","StyledThumbValue","StyledTickBar","StyledTickBarItem","jsx","_jsx","jsxs","_jsxs","DEBOUNCE_TIME_MS","PureComponent","constructor","props","formClearHelper","state","sliderRef","createRef","thumbRef","thumbValueRef","commitWidgetValueDebounced","commitWidgetValue","source","widgetMgr","element","fragmentId","setDoubleArrayValue","value","onFormCleared","setState","_","prevProps","default","fromUi","handleChange","_ref","renderThumb","forwardRef","ref","$value","$thumbIndex","thumbIndex","formattedValue","formatValue","passThrough","ariaValueText","options","length","isDateTimeType","disabled","$disabled","label","children","renderTickBar","max","min","bind","initialValue","storedValue","getDoubleArrayValue","undefined","componentDidMount","setTimeout","thumbValueAlignment","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","start","end","dataType","DataType","DATETIME","DATE","TIME","format","utc","alignValueOnThumb","slider","thumb","thumbValue","sliderPosition","getBoundingClientRect","thumbPosition","thumbValuePosition","thumbMidpoint","left","width","thumbValueOverflowsLeft","thumbValueOverflowsRight","right","style","sliderDiv","current","thumb1Div","thumb2Div","thumb1ValueDiv","thumb2ValueDiv","labelGap","thumb1","thumb2","thumb1Value","thumb2Value","moveLeft","render","theme","colors","fonts","fontSizes","spacing","manageFormClearListener","formId","className","labelVisibility","help","content","placement","TOP_RIGHT","step","onChange","overrides","Root","paddingTop","twoThirdsSmFont","Thumb","Tick","fontFamily","monospace","fontSize","sm","Track","backgroundColor","paddingBottom","none","paddingLeft","paddingRight","InnerTrack","_ref2","height","background","darkenedBgMix25","TickBar"],"sources":["../../../../src/components/widgets/Slider/Slider.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport pick from \"lodash/pick\"\nimport { StyleProps, Slider as UISlider } from \"baseui/slider\"\nimport { withTheme } from \"@emotion/react\"\nimport { sprintf } from \"sprintf-js\"\nimport moment from \"moment\"\n\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport {\n  Source,\n  WidgetStateManager,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport { Slider as SliderProto } from \"@streamlit/lib/src/proto\"\nimport {\n  debounce,\n  labelVisibilityProtoValueToEnum,\n} from \"@streamlit/lib/src/util/utils\"\nimport {\n  StyledWidgetLabelHelp,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport {\n  StyledThumb,\n  StyledThumbValue,\n  StyledTickBar,\n  StyledTickBarItem,\n} from \"./styled-components\"\n\nconst DEBOUNCE_TIME_MS = 200\n\nexport interface Props {\n  disabled: boolean\n  element: SliderProto\n  theme: EmotionTheme\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\ninterface State {\n  /**\n   * The value specified by the user via the UI. If the user didn't touch this\n   * widget's UI, the default value is used.\n   */\n  value: number[]\n}\n\nclass Slider extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  public state: State\n\n  private sliderRef = React.createRef<HTMLDivElement>()\n\n  private thumbRef: React.MutableRefObject<HTMLDivElement>[] = []\n\n  private thumbValueRef: React.RefObject<HTMLDivElement>[] = []\n\n  private readonly commitWidgetValueDebounced: (source: Source) => void\n\n  public constructor(props: Props) {\n    super(props)\n    this.commitWidgetValueDebounced = debounce(\n      DEBOUNCE_TIME_MS,\n      this.commitWidgetValue.bind(this)\n    )\n    this.state = { value: this.initialValue }\n  }\n\n  get initialValue(): number[] {\n    const storedValue = this.props.widgetMgr.getDoubleArrayValue(\n      this.props.element\n    )\n    return storedValue !== undefined ? storedValue : this.props.element.default\n  }\n\n  public componentDidMount(): void {\n    // Check thumb value's alignment vs. slider container\n    // Delay the alignment to allow the page layout to complete\n    setTimeout(() => {\n      this.thumbValueAlignment()\n    }, 0)\n\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState({ value }, () => {\n      this.commitWidgetValue({ fromUi: false })\n    })\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { widgetMgr, element, fragmentId } = this.props\n    widgetMgr.setDoubleArrayValue(\n      element,\n      this.state.value,\n      source,\n      fragmentId\n    )\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private handleChange = ({ value }: { value: number[] }): void => {\n    this.setState({ value }, () =>\n      this.commitWidgetValueDebounced({ fromUi: true })\n    )\n  }\n\n  /**\n   * Return the value of the slider. This will either be an array with\n   * one value (for a single value slider), or an array with two\n   * values (for a range slider).\n   */\n  private get value(): number[] {\n    const { min, max } = this.props.element\n    const { value } = this.state\n    let start = value[0]\n    let end = value.length > 1 ? value[1] : value[0]\n    // Adjust the value if it's out of bounds.\n    if (start > end) {\n      start = end\n    }\n    if (start < min) {\n      start = min\n    }\n    if (start > max) {\n      start = max\n    }\n    if (end < min) {\n      end = min\n    }\n    if (end > max) {\n      end = max\n    }\n    return value.length > 1 ? [start, end] : [start]\n  }\n\n  private isDateTimeType(): boolean {\n    const { dataType } = this.props.element\n    return (\n      dataType === SliderProto.DataType.DATETIME ||\n      dataType === SliderProto.DataType.DATE ||\n      dataType === SliderProto.DataType.TIME\n    )\n  }\n\n  private formatValue(value: number): string {\n    const { format, options } = this.props.element\n    if (this.isDateTimeType()) {\n      // Python datetime uses microseconds, but JS & Moment uses milliseconds\n      // The timestamp is always set to the UTC timezone, even so, the actual timezone\n      // for this timestamp in the backend could be different.\n      // However, the frontend component does not need to know about the actual timezone.\n      return moment.utc(value / 1000).format(format)\n    }\n\n    if (options.length > 0) {\n      return sprintf(format, options[value])\n    }\n\n    return sprintf(format, value)\n  }\n\n  private alignValueOnThumb(\n    slider: HTMLDivElement | null,\n    thumb: HTMLDivElement | null,\n    thumbValue: HTMLDivElement | null\n  ): void {\n    if (slider && thumb && thumbValue) {\n      const sliderPosition = slider.getBoundingClientRect()\n      const thumbPosition = thumb.getBoundingClientRect()\n      const thumbValuePosition = thumbValue.getBoundingClientRect()\n\n      const thumbMidpoint = thumbPosition.left + thumbPosition.width / 2\n      const thumbValueOverflowsLeft =\n        thumbMidpoint - thumbValuePosition.width / 2 < sliderPosition.left\n      const thumbValueOverflowsRight =\n        thumbMidpoint + thumbValuePosition.width / 2 > sliderPosition.right\n\n      thumbValue.style.left = thumbValueOverflowsLeft ? \"0\" : \"\"\n      thumbValue.style.right = thumbValueOverflowsRight ? \"0\" : \"\"\n    }\n  }\n\n  private thumbValueAlignment(): void {\n    const sliderDiv = this.sliderRef.current\n    const thumb1Div = this.thumbRef[0]?.current\n    const thumb2Div = this.thumbRef[1]?.current\n    const thumb1ValueDiv = this.thumbValueRef[0]?.current\n    const thumb2ValueDiv = this.thumbValueRef[1]?.current\n    // Minimum gap between thumb values (in px)\n    const labelGap = 16\n\n    // Handles label alignment over each thumb\n    this.alignValueOnThumb(sliderDiv, thumb1Div, thumb1ValueDiv)\n    this.alignValueOnThumb(sliderDiv, thumb2Div, thumb2ValueDiv)\n\n    // Checks & handles label spacing when two thumb values & they overlap\n    if (\n      sliderDiv &&\n      thumb1Div &&\n      thumb2Div &&\n      thumb1ValueDiv &&\n      thumb2ValueDiv\n    ) {\n      const slider = sliderDiv.getBoundingClientRect()\n      const thumb1 = thumb1Div.getBoundingClientRect()\n      const thumb2 = thumb2Div.getBoundingClientRect()\n      const thumb1Value = thumb1ValueDiv.getBoundingClientRect()\n      const thumb2Value = thumb2ValueDiv.getBoundingClientRect()\n\n      // Check if thumb values are overlapping or too close together\n      if (thumb1Value.right + labelGap > thumb2Value.left) {\n        // Check whether to shift 1st thumb value left or 2nd thumb value right\n        const moveLeft =\n          thumb2Value.left - labelGap - thumb1Value.width > slider.left\n\n        if (moveLeft) {\n          thumb1ValueDiv.style.right = `${\n            thumb2Value.width + labelGap - (thumb2.right - thumb1.right)\n          }px`\n        } else {\n          thumb2ValueDiv.style.left = `${\n            thumb1Value.width + labelGap - (thumb2.left - thumb1.left)\n          }px`\n        }\n      }\n    }\n  }\n\n  // eslint-disable-next-line react/display-name\n  private renderThumb = React.forwardRef<HTMLDivElement, StyleProps>(\n    (props: StyleProps, ref): JSX.Element => {\n      const { $value, $thumbIndex } = props\n      const thumbIndex = $thumbIndex || 0\n      this.thumbRef[thumbIndex] = ref as React.MutableRefObject<HTMLDivElement>\n      this.thumbValueRef[thumbIndex] ||= React.createRef<HTMLDivElement>()\n\n      const formattedValue = $value\n        ? this.formatValue($value[$thumbIndex as number])\n        : \"\"\n      const passThrough = pick(props, [\n        \"role\",\n        \"style\",\n        \"aria-valuemax\",\n        \"aria-valuemin\",\n        \"aria-valuenow\",\n        \"tabIndex\",\n        \"onKeyUp\",\n        \"onKeyDown\",\n        \"onMouseEnter\",\n        \"onMouseLeave\",\n        \"draggable\",\n      ])\n      const ariaValueText: Record<string, string> = {}\n\n      if (this.props.element.options.length > 0 || this.isDateTimeType()) {\n        ariaValueText[\"aria-valuetext\"] = formattedValue\n      }\n\n      return (\n        <StyledThumb\n          {...passThrough}\n          disabled={props.$disabled === true}\n          ref={this.thumbRef[thumbIndex]}\n          aria-valuetext={formattedValue}\n          aria-label={this.props.element.label}\n        >\n          <StyledThumbValue\n            data-testid=\"stSliderThumbValue\"\n            disabled={props.$disabled === true}\n            ref={this.thumbValueRef[thumbIndex]}\n          >\n            {formattedValue}\n          </StyledThumbValue>\n        </StyledThumb>\n      )\n    }\n  )\n\n  private renderTickBar = (): JSX.Element => {\n    const { disabled, element } = this.props\n    const { max, min } = element\n\n    return (\n      <StyledTickBar data-testid=\"stSliderTickBar\">\n        <StyledTickBarItem\n          disabled={disabled}\n          data-testid=\"stSliderTickBarMin\"\n        >\n          {this.formatValue(min)}\n        </StyledTickBarItem>\n        <StyledTickBarItem\n          disabled={disabled}\n          data-testid=\"stSliderTickBarMax\"\n        >\n          {this.formatValue(max)}\n        </StyledTickBarItem>\n      </StyledTickBar>\n    )\n  }\n\n  public render(): React.ReactNode {\n    const { disabled, element, theme, width, widgetMgr } = this.props\n    const { colors, fonts, fontSizes, spacing } = theme\n    const style = { width }\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    // Check the thumb value's alignment vs. slider container\n    this.thumbValueAlignment()\n\n    return (\n      <div\n        ref={this.sliderRef}\n        className=\"stSlider\"\n        data-testid=\"stSlider\"\n        style={style}\n      >\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <UISlider\n          min={element.min}\n          max={element.max}\n          step={element.step}\n          value={this.value}\n          onChange={this.handleChange}\n          disabled={disabled}\n          overrides={{\n            Root: {\n              style: {\n                paddingTop: spacing.twoThirdsSmFont,\n              },\n            },\n            Thumb: this.renderThumb,\n            Tick: {\n              style: {\n                fontFamily: fonts.monospace,\n                fontSize: fontSizes.sm,\n              },\n            },\n            Track: {\n              style: {\n                backgroundColor: \"none !important\",\n                paddingBottom: spacing.none,\n                paddingLeft: spacing.none,\n                paddingRight: spacing.none,\n                paddingTop: spacing.twoThirdsSmFont,\n              },\n            },\n            InnerTrack: {\n              style: ({ $disabled }: StyleProps) => ({\n                height: \"4px\",\n                ...($disabled ? { background: colors.darkenedBgMix25 } : {}),\n              }),\n            },\n            TickBar: this.renderTickBar,\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withTheme(Slider)\n"],"mappings":"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"}