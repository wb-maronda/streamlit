import _styled from "@emotion/styled/base";
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
/**
 * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const CONTROLS_WIDTH = 32; // px

export const StyledInputContainer = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e116k4er3"
} : {
  target: "e116k4er3",
  label: "StyledInputContainer"
})(_ref => {
  let {
    theme
  } = _ref;
  return {
    display: "flex",
    flexDirection: "row",
    flexWrap: "nowrap",
    alignItems: "center",
    height: theme.sizes.minElementHeight,
    // Mimic the baseweb's borders here, so we can apply the focus style
    // to the entire container and not only the input itself
    borderWidth: theme.sizes.borderWidth,
    borderStyle: "solid",
    // Mimic the logic from createThemeOverrides.
    borderColor: theme.colors.widgetBorderColor || theme.colors.widgetBackgroundColor || theme.colors.bgColor,
    transitionDuration: "200ms",
    transitionProperty: "border",
    transitionTimingFunction: "cubic-bezier(0.2, 0.8, 0.4, 1)",
    borderRadius: theme.radii.default,
    overflow: "hidden",
    // Fix rounded corner being overlayed with corner of internal input.

    "&.focused": {
      borderColor: theme.colors.primary
    },
    input: {
      MozAppearance: "textfield",
      "&::-webkit-inner-spin-button, &::-webkit-outer-spin-button": {
        WebkitAppearance: "none",
        margin: theme.spacing.none
      }
    }
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvTnVtYmVySW5wdXQvc3R5bGVkLWNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0JvQyIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy93aWRnZXRzL051bWJlcklucHV0L3N0eWxlZC1jb21wb25lbnRzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFN0cmVhbWxpdCBJbmMuICgyMDE4LTIwMjIpIFNub3dmbGFrZSBJbmMuICgyMDIyLTIwMjQpXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiXG5cbmNvbnN0IENPTlRST0xTX1dJRFRIID0gMzIgLy8gcHhcblxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0Q29udGFpbmVyID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgZmxleFdyYXA6IFwibm93cmFwXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGhlaWdodDogdGhlbWUuc2l6ZXMubWluRWxlbWVudEhlaWdodCxcbiAgLy8gTWltaWMgdGhlIGJhc2V3ZWIncyBib3JkZXJzIGhlcmUsIHNvIHdlIGNhbiBhcHBseSB0aGUgZm9jdXMgc3R5bGVcbiAgLy8gdG8gdGhlIGVudGlyZSBjb250YWluZXIgYW5kIG5vdCBvbmx5IHRoZSBpbnB1dCBpdHNlbGZcbiAgYm9yZGVyV2lkdGg6IHRoZW1lLnNpemVzLmJvcmRlcldpZHRoLFxuICBib3JkZXJTdHlsZTogXCJzb2xpZFwiLFxuICAvLyBNaW1pYyB0aGUgbG9naWMgZnJvbSBjcmVhdGVUaGVtZU92ZXJyaWRlcy5cbiAgYm9yZGVyQ29sb3I6XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJvcmRlckNvbG9yIHx8XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJhY2tncm91bmRDb2xvciB8fFxuICAgIHRoZW1lLmNvbG9ycy5iZ0NvbG9yLFxuICB0cmFuc2l0aW9uRHVyYXRpb246IFwiMjAwbXNcIixcbiAgdHJhbnNpdGlvblByb3BlcnR5OiBcImJvcmRlclwiLFxuICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IFwiY3ViaWMtYmV6aWVyKDAuMiwgMC44LCAwLjQsIDEpXCIsXG4gIGJvcmRlclJhZGl1czogdGhlbWUucmFkaWkuZGVmYXVsdCxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsIC8vIEZpeCByb3VuZGVkIGNvcm5lciBiZWluZyBvdmVybGF5ZWQgd2l0aCBjb3JuZXIgb2YgaW50ZXJuYWwgaW5wdXQuXG5cbiAgXCImLmZvY3VzZWRcIjoge1xuICAgIGJvcmRlckNvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeSxcbiAgfSxcblxuICBpbnB1dDoge1xuICAgIE1vekFwcGVhcmFuY2U6IFwidGV4dGZpZWxkXCIsXG4gICAgXCImOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCAmOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uXCI6IHtcbiAgICAgIFdlYmtpdEFwcGVhcmFuY2U6IFwibm9uZVwiLFxuICAgICAgbWFyZ2luOiB0aGVtZS5zcGFjaW5nLm5vbmUsXG4gICAgfSxcbiAgfSxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRDb250cm9scyA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgYWxpZ25TZWxmOiBcInN0cmV0Y2hcIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRJbnB1dENvbnRyb2wgPSBzdHlsZWQuYnV0dG9uKCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICBib3JkZXI6IFwibm9uZVwiLFxuICBoZWlnaHQ6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICB3aWR0aDogYCR7Q09OVFJPTFNfV0lEVEh9cHhgLFxuICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgY29sb3I6IHRoZW1lLmNvbG9ycy5ib2R5VGV4dCxcbiAgdHJhbnNpdGlvbjogXCJjb2xvciAzMDBtcywgYmFja2dyb3VuZENvbG9yIDMwMG1zXCIsXG4gIC8vIE1pbWljIHRoZSBsb2dpYyBmcm9tIGNyZWF0ZVRoZW1lT3ZlcnJpZGVzLlxuICBiYWNrZ3JvdW5kQ29sb3I6XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJhY2tncm91bmRDb2xvciB8fCB0aGVtZS5jb2xvcnMuc2Vjb25kYXJ5QmcsXG4gIFwiJjpob3ZlcjplbmFibGVkLCAmOmZvY3VzOmVuYWJsZWRcIjoge1xuICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMud2hpdGUsXG4gICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeSxcbiAgICB0cmFuc2l0aW9uOiBcIm5vbmVcIixcbiAgICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgfSxcbiAgXCImOmFjdGl2ZVwiOiB7XG4gICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgYm9yZGVyOiBcIm5vbmVcIixcbiAgfSxcbiAgXCImOmxhc3Qtb2YtdHlwZVwiOiB7XG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gIH0sXG4gIFwiJjpkaXNhYmxlZFwiOiB7XG4gICAgY3Vyc29yOiBcIm5vdC1hbGxvd2VkXCIsXG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5mYWRlZFRleHQ0MCxcbiAgfSxcbn0pKVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEluc3RydWN0aW9uc0NvbnRhaW5lclByb3BzIHtcbiAgLy8gSWYgd2lkZ2V0IGlzIGNsZWFyYWJsZSwgdGhlIGluc3RydWN0aW9uIG5lZWRzIHRvIGJlIG1vdmVkIGEgY291cGxlXG4gIC8vIHBpeGVscyB0byB0aGUgbGVmdCB0byBhdm9pZCBvdmVybGFwcGluZyB3aXRoIHRoZSBjbGVhciBidXR0b24uXG4gIGNsZWFyYWJsZTogYm9vbGVhblxufVxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5zdHJ1Y3Rpb25zQ29udGFpbmVyID1cbiAgc3R5bGVkLmRpdjxTdHlsZWRJbnN0cnVjdGlvbnNDb250YWluZXJQcm9wcz4oKHsgdGhlbWUsIGNsZWFyYWJsZSB9KSA9PiAoe1xuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogYCR7Q09OVFJPTFNfV0lEVEggKiAyICsgKGNsZWFyYWJsZSA/IDEyIDogMCl9cHhgLFxuICB9KSlcbiJdfQ== */");
export const StyledInputControls = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e116k4er2"
} : {
  target: "e116k4er2",
  label: "StyledInputControls"
})(process.env.NODE_ENV === "production" ? {
  name: "76z9jo",
  styles: "display:flex;flex-direction:row;align-self:stretch"
} : {
  name: "76z9jo",
  styles: "display:flex;flex-direction:row;align-self:stretch",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvTnVtYmVySW5wdXQvc3R5bGVkLWNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0RtQyIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy93aWRnZXRzL051bWJlcklucHV0L3N0eWxlZC1jb21wb25lbnRzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFN0cmVhbWxpdCBJbmMuICgyMDE4LTIwMjIpIFNub3dmbGFrZSBJbmMuICgyMDIyLTIwMjQpXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiXG5cbmNvbnN0IENPTlRST0xTX1dJRFRIID0gMzIgLy8gcHhcblxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0Q29udGFpbmVyID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgZmxleFdyYXA6IFwibm93cmFwXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGhlaWdodDogdGhlbWUuc2l6ZXMubWluRWxlbWVudEhlaWdodCxcbiAgLy8gTWltaWMgdGhlIGJhc2V3ZWIncyBib3JkZXJzIGhlcmUsIHNvIHdlIGNhbiBhcHBseSB0aGUgZm9jdXMgc3R5bGVcbiAgLy8gdG8gdGhlIGVudGlyZSBjb250YWluZXIgYW5kIG5vdCBvbmx5IHRoZSBpbnB1dCBpdHNlbGZcbiAgYm9yZGVyV2lkdGg6IHRoZW1lLnNpemVzLmJvcmRlcldpZHRoLFxuICBib3JkZXJTdHlsZTogXCJzb2xpZFwiLFxuICAvLyBNaW1pYyB0aGUgbG9naWMgZnJvbSBjcmVhdGVUaGVtZU92ZXJyaWRlcy5cbiAgYm9yZGVyQ29sb3I6XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJvcmRlckNvbG9yIHx8XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJhY2tncm91bmRDb2xvciB8fFxuICAgIHRoZW1lLmNvbG9ycy5iZ0NvbG9yLFxuICB0cmFuc2l0aW9uRHVyYXRpb246IFwiMjAwbXNcIixcbiAgdHJhbnNpdGlvblByb3BlcnR5OiBcImJvcmRlclwiLFxuICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IFwiY3ViaWMtYmV6aWVyKDAuMiwgMC44LCAwLjQsIDEpXCIsXG4gIGJvcmRlclJhZGl1czogdGhlbWUucmFkaWkuZGVmYXVsdCxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsIC8vIEZpeCByb3VuZGVkIGNvcm5lciBiZWluZyBvdmVybGF5ZWQgd2l0aCBjb3JuZXIgb2YgaW50ZXJuYWwgaW5wdXQuXG5cbiAgXCImLmZvY3VzZWRcIjoge1xuICAgIGJvcmRlckNvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeSxcbiAgfSxcblxuICBpbnB1dDoge1xuICAgIE1vekFwcGVhcmFuY2U6IFwidGV4dGZpZWxkXCIsXG4gICAgXCImOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCAmOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uXCI6IHtcbiAgICAgIFdlYmtpdEFwcGVhcmFuY2U6IFwibm9uZVwiLFxuICAgICAgbWFyZ2luOiB0aGVtZS5zcGFjaW5nLm5vbmUsXG4gICAgfSxcbiAgfSxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRDb250cm9scyA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgYWxpZ25TZWxmOiBcInN0cmV0Y2hcIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRJbnB1dENvbnRyb2wgPSBzdHlsZWQuYnV0dG9uKCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICBib3JkZXI6IFwibm9uZVwiLFxuICBoZWlnaHQ6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICB3aWR0aDogYCR7Q09OVFJPTFNfV0lEVEh9cHhgLFxuICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgY29sb3I6IHRoZW1lLmNvbG9ycy5ib2R5VGV4dCxcbiAgdHJhbnNpdGlvbjogXCJjb2xvciAzMDBtcywgYmFja2dyb3VuZENvbG9yIDMwMG1zXCIsXG4gIC8vIE1pbWljIHRoZSBsb2dpYyBmcm9tIGNyZWF0ZVRoZW1lT3ZlcnJpZGVzLlxuICBiYWNrZ3JvdW5kQ29sb3I6XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJhY2tncm91bmRDb2xvciB8fCB0aGVtZS5jb2xvcnMuc2Vjb25kYXJ5QmcsXG4gIFwiJjpob3ZlcjplbmFibGVkLCAmOmZvY3VzOmVuYWJsZWRcIjoge1xuICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMud2hpdGUsXG4gICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeSxcbiAgICB0cmFuc2l0aW9uOiBcIm5vbmVcIixcbiAgICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgfSxcbiAgXCImOmFjdGl2ZVwiOiB7XG4gICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgYm9yZGVyOiBcIm5vbmVcIixcbiAgfSxcbiAgXCImOmxhc3Qtb2YtdHlwZVwiOiB7XG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gIH0sXG4gIFwiJjpkaXNhYmxlZFwiOiB7XG4gICAgY3Vyc29yOiBcIm5vdC1hbGxvd2VkXCIsXG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5mYWRlZFRleHQ0MCxcbiAgfSxcbn0pKVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEluc3RydWN0aW9uc0NvbnRhaW5lclByb3BzIHtcbiAgLy8gSWYgd2lkZ2V0IGlzIGNsZWFyYWJsZSwgdGhlIGluc3RydWN0aW9uIG5lZWRzIHRvIGJlIG1vdmVkIGEgY291cGxlXG4gIC8vIHBpeGVscyB0byB0aGUgbGVmdCB0byBhdm9pZCBvdmVybGFwcGluZyB3aXRoIHRoZSBjbGVhciBidXR0b24uXG4gIGNsZWFyYWJsZTogYm9vbGVhblxufVxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5zdHJ1Y3Rpb25zQ29udGFpbmVyID1cbiAgc3R5bGVkLmRpdjxTdHlsZWRJbnN0cnVjdGlvbnNDb250YWluZXJQcm9wcz4oKHsgdGhlbWUsIGNsZWFyYWJsZSB9KSA9PiAoe1xuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogYCR7Q09OVFJPTFNfV0lEVEggKiAyICsgKGNsZWFyYWJsZSA/IDEyIDogMCl9cHhgLFxuICB9KSlcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
export const StyledInputControl = /*#__PURE__*/_styled("button", process.env.NODE_ENV === "production" ? {
  target: "e116k4er1"
} : {
  target: "e116k4er1",
  label: "StyledInputControl"
})(_ref2 => {
  let {
    theme
  } = _ref2;
  return {
    margin: theme.spacing.none,
    border: "none",
    height: theme.sizes.full,
    display: "flex",
    alignItems: "center",
    width: "".concat(CONTROLS_WIDTH, "px"),
    justifyContent: "center",
    color: theme.colors.bodyText,
    transition: "color 300ms, backgroundColor 300ms",
    // Mimic the logic from createThemeOverrides.
    backgroundColor: theme.colors.widgetBackgroundColor || theme.colors.secondaryBg,
    "&:hover:enabled, &:focus:enabled": {
      color: theme.colors.white,
      backgroundColor: theme.colors.primary,
      transition: "none",
      outline: "none"
    },
    "&:active": {
      outline: "none",
      border: "none"
    },
    "&:last-of-type": {
      borderTopRightRadius: theme.radii.default,
      borderBottomRightRadius: theme.radii.default
    },
    "&:disabled": {
      cursor: "not-allowed",
      color: theme.colors.fadedText40
    }
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvTnVtYmVySW5wdXQvc3R5bGVkLWNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNERrQyIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy93aWRnZXRzL051bWJlcklucHV0L3N0eWxlZC1jb21wb25lbnRzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFN0cmVhbWxpdCBJbmMuICgyMDE4LTIwMjIpIFNub3dmbGFrZSBJbmMuICgyMDIyLTIwMjQpXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiXG5cbmNvbnN0IENPTlRST0xTX1dJRFRIID0gMzIgLy8gcHhcblxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0Q29udGFpbmVyID0gc3R5bGVkLmRpdigoeyB0aGVtZSB9KSA9PiAoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgZmxleFdyYXA6IFwibm93cmFwXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIGhlaWdodDogdGhlbWUuc2l6ZXMubWluRWxlbWVudEhlaWdodCxcbiAgLy8gTWltaWMgdGhlIGJhc2V3ZWIncyBib3JkZXJzIGhlcmUsIHNvIHdlIGNhbiBhcHBseSB0aGUgZm9jdXMgc3R5bGVcbiAgLy8gdG8gdGhlIGVudGlyZSBjb250YWluZXIgYW5kIG5vdCBvbmx5IHRoZSBpbnB1dCBpdHNlbGZcbiAgYm9yZGVyV2lkdGg6IHRoZW1lLnNpemVzLmJvcmRlcldpZHRoLFxuICBib3JkZXJTdHlsZTogXCJzb2xpZFwiLFxuICAvLyBNaW1pYyB0aGUgbG9naWMgZnJvbSBjcmVhdGVUaGVtZU92ZXJyaWRlcy5cbiAgYm9yZGVyQ29sb3I6XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJvcmRlckNvbG9yIHx8XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJhY2tncm91bmRDb2xvciB8fFxuICAgIHRoZW1lLmNvbG9ycy5iZ0NvbG9yLFxuICB0cmFuc2l0aW9uRHVyYXRpb246IFwiMjAwbXNcIixcbiAgdHJhbnNpdGlvblByb3BlcnR5OiBcImJvcmRlclwiLFxuICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IFwiY3ViaWMtYmV6aWVyKDAuMiwgMC44LCAwLjQsIDEpXCIsXG4gIGJvcmRlclJhZGl1czogdGhlbWUucmFkaWkuZGVmYXVsdCxcbiAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsIC8vIEZpeCByb3VuZGVkIGNvcm5lciBiZWluZyBvdmVybGF5ZWQgd2l0aCBjb3JuZXIgb2YgaW50ZXJuYWwgaW5wdXQuXG5cbiAgXCImLmZvY3VzZWRcIjoge1xuICAgIGJvcmRlckNvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeSxcbiAgfSxcblxuICBpbnB1dDoge1xuICAgIE1vekFwcGVhcmFuY2U6IFwidGV4dGZpZWxkXCIsXG4gICAgXCImOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCAmOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uXCI6IHtcbiAgICAgIFdlYmtpdEFwcGVhcmFuY2U6IFwibm9uZVwiLFxuICAgICAgbWFyZ2luOiB0aGVtZS5zcGFjaW5nLm5vbmUsXG4gICAgfSxcbiAgfSxcbn0pKVxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRDb250cm9scyA9IHN0eWxlZC5kaXYoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgYWxpZ25TZWxmOiBcInN0cmV0Y2hcIixcbn0pXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRJbnB1dENvbnRyb2wgPSBzdHlsZWQuYnV0dG9uKCh7IHRoZW1lIH0pID0+ICh7XG4gIG1hcmdpbjogdGhlbWUuc3BhY2luZy5ub25lLFxuICBib3JkZXI6IFwibm9uZVwiLFxuICBoZWlnaHQ6IHRoZW1lLnNpemVzLmZ1bGwsXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICB3aWR0aDogYCR7Q09OVFJPTFNfV0lEVEh9cHhgLFxuICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgY29sb3I6IHRoZW1lLmNvbG9ycy5ib2R5VGV4dCxcbiAgdHJhbnNpdGlvbjogXCJjb2xvciAzMDBtcywgYmFja2dyb3VuZENvbG9yIDMwMG1zXCIsXG4gIC8vIE1pbWljIHRoZSBsb2dpYyBmcm9tIGNyZWF0ZVRoZW1lT3ZlcnJpZGVzLlxuICBiYWNrZ3JvdW5kQ29sb3I6XG4gICAgdGhlbWUuY29sb3JzLndpZGdldEJhY2tncm91bmRDb2xvciB8fCB0aGVtZS5jb2xvcnMuc2Vjb25kYXJ5QmcsXG4gIFwiJjpob3ZlcjplbmFibGVkLCAmOmZvY3VzOmVuYWJsZWRcIjoge1xuICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMud2hpdGUsXG4gICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeSxcbiAgICB0cmFuc2l0aW9uOiBcIm5vbmVcIixcbiAgICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgfSxcbiAgXCImOmFjdGl2ZVwiOiB7XG4gICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgYm9yZGVyOiBcIm5vbmVcIixcbiAgfSxcbiAgXCImOmxhc3Qtb2YtdHlwZVwiOiB7XG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gICAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IHRoZW1lLnJhZGlpLmRlZmF1bHQsXG4gIH0sXG4gIFwiJjpkaXNhYmxlZFwiOiB7XG4gICAgY3Vyc29yOiBcIm5vdC1hbGxvd2VkXCIsXG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy5mYWRlZFRleHQ0MCxcbiAgfSxcbn0pKVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEluc3RydWN0aW9uc0NvbnRhaW5lclByb3BzIHtcbiAgLy8gSWYgd2lkZ2V0IGlzIGNsZWFyYWJsZSwgdGhlIGluc3RydWN0aW9uIG5lZWRzIHRvIGJlIG1vdmVkIGEgY291cGxlXG4gIC8vIHBpeGVscyB0byB0aGUgbGVmdCB0byBhdm9pZCBvdmVybGFwcGluZyB3aXRoIHRoZSBjbGVhciBidXR0b24uXG4gIGNsZWFyYWJsZTogYm9vbGVhblxufVxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5zdHJ1Y3Rpb25zQ29udGFpbmVyID1cbiAgc3R5bGVkLmRpdjxTdHlsZWRJbnN0cnVjdGlvbnNDb250YWluZXJQcm9wcz4oKHsgdGhlbWUsIGNsZWFyYWJsZSB9KSA9PiAoe1xuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcudHdvWFMsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogYCR7Q09OVFJPTFNfV0lEVEggKiAyICsgKGNsZWFyYWJsZSA/IDEyIDogMCl9cHhgLFxuICB9KSlcbiJdfQ== */");
export const StyledInstructionsContainer = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e116k4er0"
} : {
  target: "e116k4er0",
  label: "StyledInstructionsContainer"
})(_ref3 => {
  let {
    theme,
    clearable
  } = _ref3;
  return {
    position: "absolute",
    marginRight: theme.spacing.twoXS,
    left: 0,
    right: "".concat(CONTROLS_WIDTH * 2 + (clearable ? 12 : 0), "px")
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvTnVtYmVySW5wdXQvc3R5bGVkLWNvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0dFIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvTnVtYmVySW5wdXQvc3R5bGVkLWNvbXBvbmVudHMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgU3RyZWFtbGl0IEluYy4gKDIwMTgtMjAyMikgU25vd2ZsYWtlIEluYy4gKDIwMjItMjAyNClcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCJcblxuY29uc3QgQ09OVFJPTFNfV0lEVEggPSAzMiAvLyBweFxuXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRDb250YWluZXIgPSBzdHlsZWQuZGl2KCh7IHRoZW1lIH0pID0+ICh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLFxuICBmbGV4V3JhcDogXCJub3dyYXBcIixcbiAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgaGVpZ2h0OiB0aGVtZS5zaXplcy5taW5FbGVtZW50SGVpZ2h0LFxuICAvLyBNaW1pYyB0aGUgYmFzZXdlYidzIGJvcmRlcnMgaGVyZSwgc28gd2UgY2FuIGFwcGx5IHRoZSBmb2N1cyBzdHlsZVxuICAvLyB0byB0aGUgZW50aXJlIGNvbnRhaW5lciBhbmQgbm90IG9ubHkgdGhlIGlucHV0IGl0c2VsZlxuICBib3JkZXJXaWR0aDogdGhlbWUuc2l6ZXMuYm9yZGVyV2lkdGgsXG4gIGJvcmRlclN0eWxlOiBcInNvbGlkXCIsXG4gIC8vIE1pbWljIHRoZSBsb2dpYyBmcm9tIGNyZWF0ZVRoZW1lT3ZlcnJpZGVzLlxuICBib3JkZXJDb2xvcjpcbiAgICB0aGVtZS5jb2xvcnMud2lkZ2V0Qm9yZGVyQ29sb3IgfHxcbiAgICB0aGVtZS5jb2xvcnMud2lkZ2V0QmFja2dyb3VuZENvbG9yIHx8XG4gICAgdGhlbWUuY29sb3JzLmJnQ29sb3IsXG4gIHRyYW5zaXRpb25EdXJhdGlvbjogXCIyMDBtc1wiLFxuICB0cmFuc2l0aW9uUHJvcGVydHk6IFwiYm9yZGVyXCIsXG4gIHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbjogXCJjdWJpYy1iZXppZXIoMC4yLCAwLjgsIDAuNCwgMSlcIixcbiAgYm9yZGVyUmFkaXVzOiB0aGVtZS5yYWRpaS5kZWZhdWx0LFxuICBvdmVyZmxvdzogXCJoaWRkZW5cIiwgLy8gRml4IHJvdW5kZWQgY29ybmVyIGJlaW5nIG92ZXJsYXllZCB3aXRoIGNvcm5lciBvZiBpbnRlcm5hbCBpbnB1dC5cblxuICBcIiYuZm9jdXNlZFwiOiB7XG4gICAgYm9yZGVyQ29sb3I6IHRoZW1lLmNvbG9ycy5wcmltYXJ5LFxuICB9LFxuXG4gIGlucHV0OiB7XG4gICAgTW96QXBwZWFyYW5jZTogXCJ0ZXh0ZmllbGRcIixcbiAgICBcIiY6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sICY6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b25cIjoge1xuICAgICAgV2Via2l0QXBwZWFyYW5jZTogXCJub25lXCIsXG4gICAgICBtYXJnaW46IHRoZW1lLnNwYWNpbmcubm9uZSxcbiAgICB9LFxuICB9LFxufSkpXG5cbmV4cG9ydCBjb25zdCBTdHlsZWRJbnB1dENvbnRyb2xzID0gc3R5bGVkLmRpdih7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLFxuICBhbGlnblNlbGY6IFwic3RyZXRjaFwiLFxufSlcblxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0Q29udHJvbCA9IHN0eWxlZC5idXR0b24oKHsgdGhlbWUgfSkgPT4gKHtcbiAgbWFyZ2luOiB0aGVtZS5zcGFjaW5nLm5vbmUsXG4gIGJvcmRlcjogXCJub25lXCIsXG4gIGhlaWdodDogdGhlbWUuc2l6ZXMuZnVsbCxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gIHdpZHRoOiBgJHtDT05UUk9MU19XSURUSH1weGAsXG4gIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICBjb2xvcjogdGhlbWUuY29sb3JzLmJvZHlUZXh0LFxuICB0cmFuc2l0aW9uOiBcImNvbG9yIDMwMG1zLCBiYWNrZ3JvdW5kQ29sb3IgMzAwbXNcIixcbiAgLy8gTWltaWMgdGhlIGxvZ2ljIGZyb20gY3JlYXRlVGhlbWVPdmVycmlkZXMuXG4gIGJhY2tncm91bmRDb2xvcjpcbiAgICB0aGVtZS5jb2xvcnMud2lkZ2V0QmFja2dyb3VuZENvbG9yIHx8IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlCZyxcbiAgXCImOmhvdmVyOmVuYWJsZWQsICY6Zm9jdXM6ZW5hYmxlZFwiOiB7XG4gICAgY29sb3I6IHRoZW1lLmNvbG9ycy53aGl0ZSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5wcmltYXJ5LFxuICAgIHRyYW5zaXRpb246IFwibm9uZVwiLFxuICAgIG91dGxpbmU6IFwibm9uZVwiLFxuICB9LFxuICBcIiY6YWN0aXZlXCI6IHtcbiAgICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgICBib3JkZXI6IFwibm9uZVwiLFxuICB9LFxuICBcIiY6bGFzdC1vZi10eXBlXCI6IHtcbiAgICBib3JkZXJUb3BSaWdodFJhZGl1czogdGhlbWUucmFkaWkuZGVmYXVsdCxcbiAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogdGhlbWUucmFkaWkuZGVmYXVsdCxcbiAgfSxcbiAgXCImOmRpc2FibGVkXCI6IHtcbiAgICBjdXJzb3I6IFwibm90LWFsbG93ZWRcIixcbiAgICBjb2xvcjogdGhlbWUuY29sb3JzLmZhZGVkVGV4dDQwLFxuICB9LFxufSkpXG5cbmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkSW5zdHJ1Y3Rpb25zQ29udGFpbmVyUHJvcHMge1xuICAvLyBJZiB3aWRnZXQgaXMgY2xlYXJhYmxlLCB0aGUgaW5zdHJ1Y3Rpb24gbmVlZHMgdG8gYmUgbW92ZWQgYSBjb3VwbGVcbiAgLy8gcGl4ZWxzIHRvIHRoZSBsZWZ0IHRvIGF2b2lkIG92ZXJsYXBwaW5nIHdpdGggdGhlIGNsZWFyIGJ1dHRvbi5cbiAgY2xlYXJhYmxlOiBib29sZWFuXG59XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRJbnN0cnVjdGlvbnNDb250YWluZXIgPVxuICBzdHlsZWQuZGl2PFN0eWxlZEluc3RydWN0aW9uc0NvbnRhaW5lclByb3BzPigoeyB0aGVtZSwgY2xlYXJhYmxlIH0pID0+ICh7XG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICBtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy50d29YUyxcbiAgICBsZWZ0OiAwLFxuICAgIHJpZ2h0OiBgJHtDT05UUk9MU19XSURUSCAqIDIgKyAoY2xlYXJhYmxlID8gMTIgOiAwKX1weGAsXG4gIH0pKVxuIl19 */");
//# sourceMappingURL=styled-components.js.map