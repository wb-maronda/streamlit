{"version":3,"file":"NumberInput.js","names":["React","Plus","Minus","withTheme","sprintf","FormClearHelper","logWarning","NumberInput","NumberInputProto","breakpoints","TooltipIcon","Placement","Icon","Input","UIInput","InputInstructions","WidgetLabel","StyledWidgetLabelHelp","isInForm","labelVisibilityProtoValueToEnum","isNullOrUndefined","notNullOrUndefined","StyledInputContainer","StyledInputControl","StyledInputControls","StyledInstructionsContainer","uniqueId","jsx","_jsx","jsxs","_jsxs","PureComponent","constructor","props","formClearHelper","id","inputRef","createRef","formatValue","value","format","getNonEmptyString","element","toString","e","concat","String","isIntData","dataType","DataType","INT","getMin","hasMin","min","Infinity","getMax","hasMax","max","getStep","step","commitWidgetValue","source","state","widgetMgr","fragmentId","data","node","current","reportValidity","_ref","valueToBeSaved","default","setIntValue","setDoubleValue","setState","dirty","formattedValue","onFormCleared","_","prevProps","_prevProps$element$de","fromUi","onBlur","isFocused","onFocus","onChange","target","numValue","parseInt","parseFloat","onKeyDown","key","preventDefault","modifyValueUsingStep","onKeyPress","submitForm","formId","modifier","canIncrement","canDecrement","initialValue","_ref2","storedValue","getIntValue","getDoubleValue","componentDidMount","setValue","updateFromProtobuf","componentDidUpdate","maybeUpdateFromProtobuf","componentWillUnmount","disconnect","render","_element$labelVisibil","width","disabled","theme","style","disableDecrement","disableIncrement","clearable","manageFormClearListener","className","children","label","labelVisibility","htmlFor","help","content","placement","TOP_RIGHT","type","placeholder","clearOnEscape","overrides","ClearIcon","Svg","color","colors","darkGray","transform","spacing","twoXL","marginRight","fill","bodyText","lineHeight","lineHeights","inputWidget","paddingRight","sm","paddingLeft","paddingBottom","paddingTop","InputContainer","borderTopRightRadius","borderBottomRightRadius","Root","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","hideNumberInputControls","onClick","tabIndex","size","hideWidgetDetails","inForm","undefined"],"sources":["../../../../src/components/widgets/NumberInput/NumberInput.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { Plus, Minus } from \"@emotion-icons/open-iconic\"\nimport { withTheme } from \"@emotion/react\"\nimport { sprintf } from \"sprintf-js\"\n\nimport { FormClearHelper } from \"@streamlit/lib/src/components/widgets/Form\"\nimport { logWarning } from \"@streamlit/lib/src/util/log\"\nimport { NumberInput as NumberInputProto } from \"@streamlit/lib/src/proto\"\nimport { breakpoints } from \"@streamlit/lib/src/theme/primitives/breakpoints\"\nimport {\n  WidgetStateManager,\n  Source,\n} from \"@streamlit/lib/src/WidgetStateManager\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport { Input as UIInput } from \"baseui/input\"\nimport InputInstructions from \"@streamlit/lib/src/components/shared/InputInstructions/InputInstructions\"\nimport {\n  WidgetLabel,\n  StyledWidgetLabelHelp,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport {\n  isInForm,\n  labelVisibilityProtoValueToEnum,\n  isNullOrUndefined,\n  notNullOrUndefined,\n} from \"@streamlit/lib/src/util/utils\"\n\nimport {\n  StyledInputContainer,\n  StyledInputControl,\n  StyledInputControls,\n  StyledInstructionsContainer,\n} from \"./styled-components\"\nimport uniqueId from \"lodash/uniqueId\"\n\nexport interface Props {\n  disabled: boolean\n  element: NumberInputProto\n  widgetMgr: WidgetStateManager\n  width: number\n  theme: EmotionTheme\n  fragmentId?: string\n}\n\nexport interface State {\n  /**\n   * True if the user-specified state.value has not yet been synced to the WidgetStateManager.\n   */\n  dirty: boolean\n\n  /**\n   * The value specified by the user via the UI. If the user didn't touch this\n   * widget's UI, the default value is used.\n   */\n  value: number | null\n\n  /**\n   * The value with applied format that is going to be shown to the user\n   */\n  formattedValue: string | null\n\n  /**\n   * True if the input is selected\n   */\n  isFocused: boolean\n}\n\nexport class NumberInput extends React.PureComponent<Props, State> {\n  private readonly formClearHelper = new FormClearHelper()\n\n  private readonly id: string\n\n  private inputRef = React.createRef<HTMLInputElement | HTMLTextAreaElement>()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      dirty: false,\n      value: this.initialValue,\n      formattedValue: this.formatValue(this.initialValue),\n      isFocused: false,\n    }\n\n    this.id = uniqueId(\"number_input_\")\n  }\n\n  get initialValue(): number | null {\n    // If WidgetStateManager knew a value for this widget, initialize to that.\n    // Otherwise, use the default value from the widget protobuf\n    const storedValue = this.isIntData()\n      ? this.props.widgetMgr.getIntValue(this.props.element)\n      : this.props.widgetMgr.getDoubleValue(this.props.element)\n\n    return storedValue ?? this.props.element.default ?? null\n  }\n\n  public componentDidMount(): void {\n    if (this.props.element.setValue) {\n      this.updateFromProtobuf()\n    } else {\n      this.commitWidgetValue({ fromUi: false })\n    }\n  }\n\n  public componentDidUpdate(): void {\n    this.maybeUpdateFromProtobuf()\n  }\n\n  public componentWillUnmount(): void {\n    this.formClearHelper.disconnect()\n  }\n\n  private maybeUpdateFromProtobuf(): void {\n    const { setValue } = this.props.element\n    if (setValue) {\n      this.updateFromProtobuf()\n    }\n  }\n\n  private updateFromProtobuf(): void {\n    const { value } = this.props.element\n    this.props.element.setValue = false\n    this.setState(\n      {\n        value: value ?? null,\n        formattedValue: this.formatValue(value ?? null),\n      },\n      () => {\n        this.commitWidgetValue({ fromUi: false })\n      }\n    )\n  }\n\n  private formatValue = (value: number | null): string | null => {\n    if (isNullOrUndefined(value)) {\n      return null\n    }\n\n    const format = getNonEmptyString(this.props.element.format)\n    if (format == null) {\n      return value.toString()\n    }\n\n    try {\n      return sprintf(format, value)\n    } catch (e) {\n      // Don't explode if we have a malformed format string.\n      logWarning(`Error in sprintf(${format}, ${value}): ${e}`)\n      return String(value)\n    }\n  }\n\n  private isIntData = (): boolean => {\n    return this.props.element.dataType === NumberInputProto.DataType.INT\n  }\n\n  private getMin = (): number => {\n    return this.props.element.hasMin ? this.props.element.min : -Infinity\n  }\n\n  private getMax = (): number => {\n    return this.props.element.hasMax ? this.props.element.max : +Infinity\n  }\n\n  private getStep = (): number => {\n    const { step } = this.props.element\n\n    if (step) {\n      return step\n    }\n    if (this.isIntData()) {\n      return 1\n    }\n    return 0.01\n  }\n\n  /** Commit state.value to the WidgetStateManager. */\n  private commitWidgetValue = (source: Source): void => {\n    const { value } = this.state\n    const { element, widgetMgr, fragmentId } = this.props\n    const data = this.props.element\n\n    const min = this.getMin()\n    const max = this.getMax()\n\n    if (notNullOrUndefined(value) && (min > value || value > max)) {\n      const node = this.inputRef.current\n      if (node) {\n        node.reportValidity()\n      }\n    } else {\n      const valueToBeSaved = value ?? data.default ?? null\n\n      if (this.isIntData()) {\n        widgetMgr.setIntValue(element, valueToBeSaved, source, fragmentId)\n      } else {\n        widgetMgr.setDoubleValue(element, valueToBeSaved, source, fragmentId)\n      }\n\n      this.setState({\n        dirty: false,\n        value: valueToBeSaved,\n        formattedValue: this.formatValue(valueToBeSaved),\n      })\n    }\n  }\n\n  /**\n   * If we're part of a clear_on_submit form, this will be called when our\n   * form is submitted. Restore our default value and update the WidgetManager.\n   */\n  private onFormCleared = (): void => {\n    this.setState(\n      (_, prevProps) => {\n        return { value: prevProps.element.default ?? null }\n      },\n      () => this.commitWidgetValue({ fromUi: true })\n    )\n  }\n\n  private onBlur = (): void => {\n    if (this.state.dirty) {\n      this.commitWidgetValue({ fromUi: true })\n    }\n\n    this.setState({ isFocused: false })\n  }\n\n  private onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private onChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    const { value } = e.target\n\n    if (value === \"\") {\n      this.setState({\n        dirty: true,\n        value: null,\n        formattedValue: null,\n      })\n    } else {\n      let numValue: number\n\n      if (this.isIntData()) {\n        numValue = parseInt(value, 10)\n      } else {\n        numValue = parseFloat(value)\n      }\n\n      this.setState({\n        dirty: true,\n        value: numValue,\n        formattedValue: value,\n      })\n    }\n  }\n\n  private onKeyDown = (\n    e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    const { key } = e\n\n    switch (key) {\n      case \"ArrowUp\":\n        e.preventDefault()\n\n        this.modifyValueUsingStep(\"increment\")()\n        break\n      case \"ArrowDown\":\n        e.preventDefault()\n\n        this.modifyValueUsingStep(\"decrement\")()\n        break\n      default: // Do nothing\n    }\n  }\n\n  private onKeyPress = (\n    e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    if (e.key === \"Enter\") {\n      if (this.state.dirty) {\n        this.commitWidgetValue({ fromUi: true })\n      }\n      if (isInForm(this.props.element)) {\n        this.props.widgetMgr.submitForm(\n          this.props.element.formId,\n          this.props.fragmentId\n        )\n      }\n    }\n  }\n\n  /** True if the input's current value can be decremented by its step. */\n  private get canDecrement(): boolean {\n    if (isNullOrUndefined(this.state.value)) {\n      return false\n    }\n\n    return this.state.value - this.getStep() >= this.getMin()\n  }\n\n  /** True if the input's current value can be incremented by its step. */\n  private get canIncrement(): boolean {\n    if (isNullOrUndefined(this.state.value)) {\n      return false\n    }\n\n    return this.state.value + this.getStep() <= this.getMax()\n  }\n\n  private modifyValueUsingStep =\n    (modifier: \"increment\" | \"decrement\"): any =>\n    (): void => {\n      const { value } = this.state\n      const step = this.getStep()\n\n      switch (modifier) {\n        case \"increment\":\n          if (this.canIncrement) {\n            this.setState(\n              {\n                dirty: true,\n                value: (value ?? this.getMin()) + step,\n              },\n              () => {\n                this.commitWidgetValue({ fromUi: true })\n              }\n            )\n          }\n          break\n        case \"decrement\":\n          if (this.canDecrement) {\n            this.setState(\n              {\n                dirty: true,\n                value: (value ?? this.getMax()) - step,\n              },\n              () => {\n                this.commitWidgetValue({ fromUi: true })\n              }\n            )\n          }\n          break\n        default: // Do nothing\n      }\n    }\n\n  public render(): React.ReactNode {\n    const { element, width, disabled, widgetMgr, theme } = this.props\n    const { formattedValue, dirty, isFocused } = this.state\n\n    const style = { width }\n\n    const disableDecrement = !this.canDecrement || disabled\n    const disableIncrement = !this.canIncrement || disabled\n    const clearable = isNullOrUndefined(element.default) && !disabled\n\n    // Manage our form-clear event handler.\n    this.formClearHelper.manageFormClearListener(\n      widgetMgr,\n      element.formId,\n      this.onFormCleared\n    )\n\n    return (\n      <div className=\"stNumberInput\" data-testid=\"stNumberInput\" style={style}>\n        <WidgetLabel\n          label={element.label}\n          disabled={disabled}\n          labelVisibility={labelVisibilityProtoValueToEnum(\n            element.labelVisibility?.value\n          )}\n          htmlFor={this.id}\n        >\n          {element.help && (\n            <StyledWidgetLabelHelp>\n              <TooltipIcon\n                content={element.help}\n                placement={Placement.TOP_RIGHT}\n              />\n            </StyledWidgetLabelHelp>\n          )}\n        </WidgetLabel>\n        <StyledInputContainer\n          className={isFocused ? \"focused\" : \"\"}\n          data-testid=\"stNumberInputContainer\"\n        >\n          <UIInput\n            type=\"number\"\n            inputRef={this.inputRef}\n            value={formattedValue ?? \"\"}\n            placeholder={element.placeholder}\n            onBlur={this.onBlur}\n            onFocus={this.onFocus}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            onKeyDown={this.onKeyDown}\n            clearable={clearable}\n            clearOnEscape={clearable}\n            disabled={disabled}\n            aria-label={element.label}\n            id={this.id}\n            overrides={{\n              ClearIcon: {\n                props: {\n                  overrides: {\n                    Svg: {\n                      style: {\n                        color: theme.colors.darkGray,\n                        // Since the close icon is an SVG, and we can't control its viewbox nor its attributes,\n                        // Let's use a scale transform effect to make it bigger.\n                        // The width property only enlarges its bounding box, so it's easier to click.\n                        transform: \"scale(1.4)\",\n                        width: theme.spacing.twoXL,\n                        marginRight: \"-1.25em\",\n\n                        \":hover\": {\n                          fill: theme.colors.bodyText,\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n              Input: {\n                props: {\n                  \"data-testid\": \"stNumberInput-Input\",\n                  step: this.getStep(),\n                  min: this.getMin(),\n                  max: this.getMax(),\n                },\n                style: {\n                  lineHeight: theme.lineHeights.inputWidget,\n                  // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                  paddingRight: theme.spacing.sm,\n                  paddingLeft: theme.spacing.sm,\n                  paddingBottom: theme.spacing.sm,\n                  paddingTop: theme.spacing.sm,\n                },\n              },\n              InputContainer: {\n                style: () => ({\n                  borderTopRightRadius: 0,\n                  borderBottomRightRadius: 0,\n                }),\n              },\n              Root: {\n                style: () => ({\n                  borderTopRightRadius: 0,\n                  borderBottomRightRadius: 0,\n                  // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                  borderLeftWidth: 0,\n                  borderRightWidth: 0,\n                  borderTopWidth: 0,\n                  borderBottomWidth: 0,\n                }),\n              },\n            }}\n          />\n\n          {/* We only want to show the increment/decrement controls when there is sufficient room to display the value and these controls. */}\n          {width > breakpoints.hideNumberInputControls && (\n            <StyledInputControls>\n              <StyledInputControl\n                className=\"step-down\"\n                data-testid=\"stNumberInput-StepDown\"\n                onClick={this.modifyValueUsingStep(\"decrement\")}\n                disabled={disableDecrement}\n                tabIndex={-1}\n              >\n                <Icon\n                  content={Minus}\n                  size=\"xs\"\n                  color={this.canDecrement ? \"inherit\" : \"disabled\"}\n                />\n              </StyledInputControl>\n              <StyledInputControl\n                className=\"step-up\"\n                data-testid=\"stNumberInput-StepUp\"\n                onClick={this.modifyValueUsingStep(\"increment\")}\n                disabled={disableIncrement}\n                tabIndex={-1}\n              >\n                <Icon\n                  content={Plus}\n                  size=\"xs\"\n                  color={this.canIncrement ? \"inherit\" : \"disabled\"}\n                />\n              </StyledInputControl>\n            </StyledInputControls>\n          )}\n        </StyledInputContainer>\n        {/* Hide the \"Please enter to apply\" text in small widget sizes */}\n        {width > breakpoints.hideWidgetDetails && (\n          <StyledInstructionsContainer clearable={clearable}>\n            <InputInstructions\n              dirty={dirty}\n              value={formattedValue ?? \"\"}\n              inForm={isInForm({ formId: element.formId })}\n            />\n          </StyledInstructionsContainer>\n        )}\n      </div>\n    )\n  }\n}\n\n/**\n * Return a string property from an element. If the string is\n * null or empty, return undefined instead.\n */\nfunction getNonEmptyString(\n  value: string | null | undefined\n): string | undefined {\n  return value == null || value === \"\" ? undefined : value\n}\n\nexport default withTheme(NumberInput)\n"],"mappings":"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"}