{"version":3,"file":"ButtonGroup.test.js","names":["React","act","fireEvent","screen","within","render","WidgetStateManager","ButtonGroup","ButtonGroupProto","LabelVisibilityMessage","LabelVisibilityMessageProto","BaseButtonKind","BaseButtonSize","DynamicIcon","StreamlitMarkdown","getContentElement","jsx","_jsx","materialIconNames","defaultSelectedIndex","expectHighlightStyle","element","should_exist","arguments","length","undefined","expectCheck","expect","not","toHaveStyle","getButtonGroupButtons","buttonGroupWidget","getByTestId","getAllByRole","materialIconOnlyOptions","Option","create","contentIcon","selectedContentIcon","options","content","getProps","elementProps","widgetProps","id","clickMode","ClickMode","SINGLE_SELECT","default","disabled","label","selectionVisualization","SelectionVisualization","ONLY_SELECTED","style","Style","BORDERLESS","widgetMgr","sendRerunBackMsg","jest","fn","formsDataChanged","EXPECTED_BUTTONS_LENGTH","describe","it","props","toBeInTheDocument","toHaveClass","buttons","toHaveLength","forEach","button","index","toHaveAttribute","icon","textContent","toContain","SEGMENT","text","spyOn","setIntArrayValue","toHaveBeenCalledWith","fromUi","buttonGroup","queryAllByRole","toHaveBeenCalledTimes","click","MULTI_SELECT","fragmentId","toBeDisabled","value","setValue","PILLS","widgetLabel","queryByText","labelVisibility","LabelVisibilityOptions","HIDDEN","COLLAPSED","help","tooltip","mouseOver","helpText","findByText","ALL_UP_TO_SELECTED","buttonToClick","disabledVisualizationOption","selectedContent","formId","setFormSubmitBehaviors","submitForm","toHaveBeenLastCalledWith","kind","size","type","toBe","Fragment","children","BORDERLESS_ICON","XSMALL"],"sources":["../../../../src/components/widgets/ButtonGroup/ButtonGroup.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable jest/expect-expect */\nimport React from \"react\"\n\nimport { act, fireEvent, screen, within } from \"@testing-library/react\"\n\nimport \"@testing-library/jest-dom\"\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  ButtonGroup as ButtonGroupProto,\n  LabelVisibilityMessage as LabelVisibilityMessageProto,\n} from \"@streamlit/lib/src/proto\"\nimport {\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport { DynamicIcon } from \"@streamlit/lib/src/components/shared/Icon\"\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown/StreamlitMarkdown\"\n\nimport ButtonGroup, { getContentElement, Props } from \"./ButtonGroup\"\n\nconst materialIconNames = [\"icon\", \"icon_2\", \"icon_3\", \"icon_4\"]\nconst defaultSelectedIndex = 2\n\nconst expectHighlightStyle = (\n  element: HTMLElement,\n  should_exist = true\n): void => {\n  let expectCheck: any = expect(element)\n  if (!should_exist) {\n    expectCheck = expect.not\n  }\n  expectCheck.toHaveStyle(\"color: rgb(49, 51, 63);\")\n}\n\nconst getButtonGroupButtons = (): HTMLElement[] => {\n  const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n  return within(buttonGroupWidget).getAllByRole(\"button\")\n}\n\n// options where content is only a material icon; used by st.feedback\nconst materialIconOnlyOptions = [\n  ButtonGroupProto.Option.create({\n    contentIcon: `:material/${materialIconNames[0]}:`,\n  }),\n  ButtonGroupProto.Option.create({\n    contentIcon: `:material/${materialIconNames[1]}:`,\n    selectedContentIcon: \":material/icon2_selected:\",\n  }),\n  ButtonGroupProto.Option.create({\n    contentIcon: `:material/${materialIconNames[2]}:`,\n  }),\n  ButtonGroupProto.Option.create({\n    contentIcon: `:material/${materialIconNames[3]}:`,\n  }),\n]\n\nconst options = [\n  ButtonGroupProto.Option.create({\n    content: `Some text: ${materialIconNames[0]}:`,\n    contentIcon: \"ðŸ”¥\",\n  }),\n  ButtonGroupProto.Option.create({\n    content: `Some other text: ${materialIconNames[1]}:`,\n    contentIcon: `:material/${materialIconNames[1]}:`,\n  }),\n]\n\nconst getProps = (\n  elementProps: Partial<ButtonGroupProto> = {},\n  widgetProps: Partial<Props> = {}\n): Props => ({\n  element: ButtonGroupProto.create({\n    id: \"1\",\n    clickMode: ButtonGroupProto.ClickMode.SINGLE_SELECT,\n    default: [defaultSelectedIndex],\n    disabled: false,\n    label: \"My ButtonGroup label\",\n    options: [...materialIconOnlyOptions, ...options],\n    selectionVisualization:\n      ButtonGroupProto.SelectionVisualization.ONLY_SELECTED,\n    style: ButtonGroupProto.Style.BORDERLESS,\n    ...elementProps,\n  }),\n  disabled: false,\n  widgetMgr: new WidgetStateManager({\n    sendRerunBackMsg: jest.fn(),\n    formsDataChanged: jest.fn(),\n  }),\n  ...widgetProps,\n})\nconst EXPECTED_BUTTONS_LENGTH = materialIconOnlyOptions.length + options.length\n\ndescribe(\"ButtonGroup widget\", () => {\n  it(\"renders without crashing\", () => {\n    const props = getProps()\n    render(<ButtonGroup {...props} />)\n\n    const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n    expect(buttonGroupWidget).toBeInTheDocument()\n    expect(buttonGroupWidget).toHaveClass(\"stButtonGroup\")\n  })\n\n  it(\"option-children with material-icon render correctly\", () => {\n    const props = getProps({ default: [], options: materialIconOnlyOptions })\n    render(<ButtonGroup {...props} />)\n\n    const buttons = getButtonGroupButtons()\n    expect(buttons).toHaveLength(materialIconOnlyOptions.length)\n    buttons.forEach((button, index) => {\n      expect(button).toHaveAttribute(\"kind\", \"borderlessIcon\")\n      const icon = within(button).getByTestId(\"stIconMaterial\")\n      expect(icon.textContent).toContain(materialIconNames[index])\n    })\n  })\n\n  it(\"option-children with contentIcon render correctly\", () => {\n    const props = getProps({\n      default: [],\n      options: options,\n      style: ButtonGroupProto.Style.SEGMENT,\n    })\n    render(<ButtonGroup {...props} />)\n\n    const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n    const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n    expect(buttons).toHaveLength(options.length)\n\n    let button = buttons[0]\n    expect(button).toHaveAttribute(\"kind\", \"icon\")\n    let text = within(button).getByTestId(\"stMarkdownContainer\")\n    expect(text.textContent).toContain(materialIconNames[0])\n    let icon = within(button).getByTestId(\"stIconEmoji\")\n    expect(icon.textContent).toContain(\"ðŸ”¥\")\n\n    button = buttons[1]\n    expect(button).toHaveAttribute(\"kind\", \"icon\")\n    text = within(button).getByTestId(\"stMarkdownContainer\")\n    expect(text.textContent).toContain(materialIconNames[1])\n    icon = within(button).getByTestId(\"stIconMaterial\")\n    expect(icon.textContent).toContain(materialIconNames[1])\n  })\n\n  it(\"sets widget value on mount\", () => {\n    const props = getProps()\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<ButtonGroup {...props} />)\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n      props.element,\n      props.element.default,\n      {\n        fromUi: false,\n      },\n      undefined\n    )\n  })\n\n  describe(\"ButtonGroup props should work\", () => {\n    it(\"renders with empty options\", () => {\n      const props = getProps({ default: [], options: [] })\n      render(<ButtonGroup {...props} />)\n\n      const buttonGroup = screen.getByTestId(\"stButtonGroup\")\n      expect(buttonGroup).toBeInTheDocument()\n      const buttons = within(buttonGroup).queryAllByRole(\"button\")\n      expect(buttons).toHaveLength(0)\n    })\n\n    it(\"onClick prop for single select\", () => {\n      const props = getProps()\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      expect(buttons).toHaveLength(EXPECTED_BUTTONS_LENGTH)\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        { fromUi: false },\n        undefined\n      )\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(1)\n\n      // click element at index 1 to select it\n      fireEvent.click(buttons[1])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [1],\n        { fromUi: true },\n        undefined\n      )\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(2)\n\n      // click element at index 0 to select it\n      fireEvent.click(getButtonGroupButtons()[0])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [0],\n        { fromUi: true },\n        undefined\n      )\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(3)\n\n      // click on same button does deselect it\n      fireEvent.click(getButtonGroupButtons()[0])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [],\n        { fromUi: true },\n        undefined\n      )\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledTimes(4)\n    })\n\n    it(\"onClick prop for multi select\", () => {\n      const props = getProps({\n        clickMode: ButtonGroupProto.ClickMode.MULTI_SELECT,\n      })\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        { fromUi: false },\n        undefined\n      )\n\n      fireEvent.click(buttons[1])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        // the 2 is default value\n        [2, 1],\n        { fromUi: true },\n        undefined\n      )\n\n      fireEvent.click(getButtonGroupButtons()[0])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [2, 1, 0],\n        { fromUi: true },\n        undefined\n      )\n\n      // unselect the second button\n      fireEvent.click(getButtonGroupButtons()[1])\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [2, 0],\n        { fromUi: true },\n        undefined\n      )\n    })\n\n    it(\"passes fragmentId to onClick prop\", () => {\n      const props = getProps(\n        {},\n        {\n          fragmentId: \"myFragmentId\",\n        }\n      )\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n      render(<ButtonGroup {...props} />)\n\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        { fromUi: false },\n        \"myFragmentId\"\n      )\n\n      const button = getButtonGroupButtons()[0]\n      fireEvent.click(button)\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        [0],\n        { fromUi: true },\n        \"myFragmentId\"\n      )\n    })\n\n    it(\"can be disabled\", () => {\n      const props = getProps({}, { disabled: true })\n      render(<ButtonGroup {...props} />)\n\n      const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n      const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n      expect(buttons).toHaveLength(EXPECTED_BUTTONS_LENGTH)\n      buttons.forEach(button => {\n        expect(button).toBeDisabled()\n      })\n    })\n\n    it(\"sets widget value on update\", () => {\n      const props = getProps({ value: [3], setValue: true })\n      jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n      render(<ButtonGroup {...props} />)\n      const buttons = getButtonGroupButtons()\n      expectHighlightStyle(buttons[3])\n      expectHighlightStyle(buttons[defaultSelectedIndex], false)\n\n      expect(props.widgetMgr.setIntArrayValue).toHaveBeenCalledWith(\n        props.element,\n        props.element.default,\n        {\n          fromUi: false,\n        },\n        undefined\n      )\n    })\n\n    it(\"renders correct button style\", () => {\n      const props = getProps({\n        default: [],\n        options: options,\n        style: ButtonGroupProto.Style.PILLS,\n      })\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      expect(buttons).toHaveLength(options.length)\n      buttons.forEach(button => {\n        expect(button).toHaveAttribute(\"kind\", \"pills\")\n      })\n    })\n\n    it(\"renders a label\", () => {\n      const props = getProps()\n      render(<ButtonGroup {...props} />)\n\n      const widgetLabel = screen.queryByText(`${props.element.label}`)\n      expect(widgetLabel).toBeInTheDocument()\n    })\n\n    it(\"passes labelVisibility prop correctly when hidden\", () => {\n      const props = getProps({\n        labelVisibility: {\n          value: LabelVisibilityMessageProto.LabelVisibilityOptions.HIDDEN,\n        },\n      })\n      render(<ButtonGroup {...props} />)\n      expect(screen.getByTestId(\"stWidgetLabel\")).toHaveStyle(\n        \"visibility: hidden\"\n      )\n    })\n\n    it(\"passes labelVisibility prop correctly when collapsed\", () => {\n      const props = getProps({\n        labelVisibility: {\n          value: LabelVisibilityMessageProto.LabelVisibilityOptions.COLLAPSED,\n        },\n      })\n      render(<ButtonGroup {...props} />)\n      expect(screen.getByTestId(\"stWidgetLabel\")).toHaveStyle(\"display: none\")\n    })\n\n    it(\"renders help prop correctly\", async () => {\n      const props = getProps({\n        help: \"help text\",\n      })\n      render(<ButtonGroup {...props} />)\n      const tooltip = screen.getByTestId(\"stTooltipHoverTarget\")\n      expect(tooltip).toBeInTheDocument()\n\n      fireEvent.mouseOver(tooltip)\n      const helpText = await screen.findByText(\"help text\")\n      expect(helpText).toBeInTheDocument()\n    })\n\n    describe(\"visualizes selection behavior\", () => {\n      it(\"visualize only selected option\", () => {\n        const props = getProps({\n          selectionVisualization:\n            ButtonGroupProto.SelectionVisualization.ONLY_SELECTED,\n        })\n        render(<ButtonGroup {...props} />)\n\n        fireEvent.click(getButtonGroupButtons()[0])\n        const buttons = getButtonGroupButtons()\n        expectHighlightStyle(buttons[0])\n        expectHighlightStyle(buttons[1], false)\n        expectHighlightStyle(buttons[2], false)\n      })\n\n      it(\"visualizes all up to the selected option\", () => {\n        const props = getProps({\n          selectionVisualization:\n            ButtonGroupProto.SelectionVisualization.ALL_UP_TO_SELECTED,\n        })\n        render(<ButtonGroup {...props} />)\n\n        const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n        const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n        const buttonToClick = buttons[2]\n        fireEvent.click(buttonToClick)\n        expectHighlightStyle(buttonToClick)\n        expectHighlightStyle(buttons[0])\n        // the second button has selectedContent set, so it should not be highlighted visually\n        expectHighlightStyle(buttons[1], false)\n        expectHighlightStyle(buttons[3], false)\n      })\n\n      it(\"has no default visualization when selected content present\", () => {\n        // used for example by feedback stars\n        const disabledVisualizationOption = [\n          ButtonGroupProto.Option.create({\n            content: \"Some text\",\n            selectedContent: \"Some text selected\",\n          }),\n          ButtonGroupProto.Option.create({\n            content: \"Some text 2\",\n            selectedContent: \"Some text selected 2\",\n          }),\n        ]\n        const props = getProps({\n          selectionVisualization:\n            ButtonGroupProto.SelectionVisualization.ALL_UP_TO_SELECTED,\n          options: disabledVisualizationOption,\n        })\n        render(<ButtonGroup {...props} />)\n\n        const buttonGroupWidget = screen.getByTestId(\"stButtonGroup\")\n        const buttons = within(buttonGroupWidget).getAllByRole(\"button\")\n        const buttonToClick = buttons[1]\n        fireEvent.click(buttonToClick)\n        expectHighlightStyle(buttonToClick, false)\n        expectHighlightStyle(buttons[0], false)\n      })\n    })\n\n    it(\"shows selection content when selected and available\", () => {\n      const props = getProps({ default: [], options: materialIconOnlyOptions })\n      render(<ButtonGroup {...props} />)\n\n      const buttons = getButtonGroupButtons()\n      buttons.forEach((button, index) => {\n        expect(button).toHaveAttribute(\"kind\", \"borderlessIcon\")\n        const icon = within(button).getByTestId(\"stIconMaterial\")\n        expect(icon.textContent).toContain(materialIconNames[index])\n      })\n\n      fireEvent.click(buttons[1])\n      expect(getButtonGroupButtons()[1].textContent).toContain(\n        \"icon_2_selected\"\n      )\n    })\n\n    it(\"shows bigger icons for borderless ButtonGroup\", () => {\n      const props = getProps({ default: [], options: materialIconOnlyOptions })\n      render(<ButtonGroup {...props} />)\n      const buttons = getButtonGroupButtons()\n      buttons.forEach((button, index) => {\n        expect(button).toHaveAttribute(\"kind\", \"borderlessIcon\")\n        const icon = within(button).getByTestId(\"stIconMaterial\")\n        expect(icon.textContent).toContain(materialIconNames[index])\n        expect(icon).toHaveStyle(\"width: 1.25rem\")\n      })\n    })\n\n    it(\"shows smaller icons for non-borderless ButtonGroup\", () => {\n      const props = getProps({\n        default: [],\n        options: materialIconOnlyOptions,\n        style: ButtonGroupProto.Style.SEGMENT,\n      })\n      render(<ButtonGroup {...props} />)\n      const buttons = getButtonGroupButtons()\n      buttons.forEach((button, index) => {\n        expect(button).toHaveAttribute(\"kind\", \"icon\")\n        const icon = within(button).getByTestId(\"stIconMaterial\")\n        expect(icon.textContent).toContain(materialIconNames[index])\n        expect(icon).toHaveStyle(\"width: 1rem\")\n      })\n    })\n  })\n\n  it(\"resets its value when form is cleared\", () => {\n    // Create a widget in a clearOnSubmit form\n    const props = getProps({\n      formId: \"form\",\n      clickMode: ButtonGroupProto.ClickMode.MULTI_SELECT,\n    })\n    props.widgetMgr.setFormSubmitBehaviors(\"form\", true)\n\n    jest.spyOn(props.widgetMgr, \"setIntArrayValue\")\n\n    render(<ButtonGroup {...props} />)\n\n    // Change the widget value\n    // de-select default value\n    fireEvent.click(getButtonGroupButtons()[0])\n    fireEvent.click(getButtonGroupButtons()[1])\n    let buttons = getButtonGroupButtons()\n    expectHighlightStyle(buttons[0])\n    // the second button has selectedContent set, so it should not be highlighted visually\n    expectHighlightStyle(buttons[1], false)\n    expectHighlightStyle(buttons[2], false)\n    expectHighlightStyle(buttons[3], false)\n\n    // \"Submit\" the form\n    act(() => props.widgetMgr.submitForm(\"form\", undefined))\n\n    buttons = getButtonGroupButtons()\n    // default option selected\n    expectHighlightStyle(buttons[0], false)\n    expectHighlightStyle(buttons[1], false)\n    expectHighlightStyle(buttons[2])\n    expect(props.widgetMgr.setIntArrayValue).toHaveBeenLastCalledWith(\n      props.element,\n      props.element.default,\n      { fromUi: true },\n      undefined\n    )\n  })\n})\n\ndescribe(\"ButtonGroup getContentElement\", () => {\n  it(\"tests element with content, icon and borderless-style\", () => {\n    const { element, kind, size } = getContentElement(\n      \"foo\",\n      \"bar\",\n      ButtonGroupProto.Style.BORDERLESS\n    )\n\n    expect(element.type).toBe(React.Fragment)\n    const { children } = element.props\n    expect(children).toHaveLength(2)\n    expect(children[0].type).toBe(DynamicIcon)\n    expect(children[1].type).toBe(StreamlitMarkdown)\n    expect(kind).toBe(BaseButtonKind.BORDERLESS_ICON)\n    expect(size).toBe(BaseButtonSize.XSMALL)\n  })\n\n  it(\"tests element with content and no icon and borderless-style\", () => {\n    const { element, kind, size } = getContentElement(\n      \"foo\",\n      undefined,\n      ButtonGroupProto.Style.BORDERLESS\n    )\n\n    expect(element.type).toBe(React.Fragment)\n    const { children } = element.props\n    expect(children).toHaveLength(2)\n    expect(children[0]).toBe(undefined)\n    expect(children[1].type).toBe(StreamlitMarkdown)\n    expect(kind).toBe(BaseButtonKind.BORDERLESS_ICON)\n    expect(size).toBe(BaseButtonSize.XSMALL)\n  })\n\n  it(\"tests element with no content, an icon and borderless-style\", () => {\n    const { element, kind, size } = getContentElement(\n      \"\",\n      \"foo\",\n      ButtonGroupProto.Style.BORDERLESS\n    )\n\n    expect(element.type).toBe(React.Fragment)\n    const { children } = element.props\n    expect(children).toHaveLength(2)\n    expect(children[0].type).toBe(DynamicIcon)\n    expect(children[1]).toBe(\"\")\n    expect(kind).toBe(BaseButtonKind.BORDERLESS_ICON)\n    expect(size).toBe(BaseButtonSize.XSMALL)\n  })\n})\n"],"mappings":"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"}