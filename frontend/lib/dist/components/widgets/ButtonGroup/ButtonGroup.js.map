{"version":3,"file":"ButtonGroup.js","names":["React","forwardRef","memo","useMemo","useTheme","ButtonGroup","BasewebButtonGroup","MODE","StreamlitMarkdown","BaseButton","BaseButtonKind","BaseButtonSize","DynamicIcon","ButtonGroupProto","LabelVisibilityMessage","StyledWidgetLabelHelpInline","WidgetLabel","TooltipIcon","Placement","labelVisibilityProtoValueToEnum","useBasicWidgetState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","handleMultiSelection","index","currentSelection","includes","filter","value","handleSelection","mode","ClickMode","MULTI_SELECT","getSingleSelection","length","syncWithWidgetManager","element","widgetMgr","valueWithSource","fragmentId","setIntArrayValue","fromUi","getContentElement","content","icon","style","kind","Style","PILLS","BORDERLESS","BORDERLESS_ICON","SEGMENT","size","XSMALL","MEDIUM","iconSize","children","iconValue","source","allowHTML","showAsSelected","selectionVisualization","clickMode","selected","indexOf","SINGLE_SELECT","SelectionVisualization","ALL_UP_TO_SELECTED","getButtonKindAndSize","isVisuallySelected","buttonKind","createOptionChild","option","contentIcon","selectedContent","selectedContentIcon","BaseButtonGroup","props","_","undefined","getInitialValue","getIntArrayValue","getDefaultStateFromProto","default","getCurrStateFromProto","disabled","options","label","labelVisibility","help","theme","setValueWSource","getStateFromWidgetMgr","updateWidgetMgrState","onClick","_event","newSelected","radio","checkbox","optionElements","map","Element","gap","spacing","threeXS","twoXS","className","LabelVisibilityOptions","COLLAPSED","placement","TOP","overrides","Root","flexWrap"],"sources":["../../../../src/components/widgets/ButtonGroup/ButtonGroup.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { forwardRef, memo, ReactElement, Ref, useMemo } from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport { ButtonGroup as BasewebButtonGroup, MODE } from \"baseui/button-group\"\n\nimport StreamlitMarkdown from \"@streamlit/lib/src/components/shared/StreamlitMarkdown/StreamlitMarkdown\"\nimport BaseButton, {\n  BaseButtonKind,\n  BaseButtonSize,\n} from \"@streamlit/lib/src/components/shared/BaseButton\"\nimport { DynamicIcon } from \"@streamlit/lib/src/components/shared/Icon\"\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\nimport {\n  ButtonGroup as ButtonGroupProto,\n  LabelVisibilityMessage,\n} from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport {\n  StyledWidgetLabelHelpInline,\n  WidgetLabel,\n} from \"@streamlit/lib/src/components/widgets/BaseWidget\"\nimport TooltipIcon from \"@streamlit/lib/src/components/shared/TooltipIcon\"\nimport { Placement } from \"@streamlit/lib/src/components/shared/Tooltip\"\nimport { labelVisibilityProtoValueToEnum } from \"@streamlit/lib/src/util/utils\"\nimport {\n  useBasicWidgetState,\n  ValueWSource,\n} from \"@streamlit/lib/src/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: ButtonGroupProto\n  widgetMgr: WidgetStateManager\n  fragmentId?: string\n}\n\nfunction handleMultiSelection(\n  index: number,\n  currentSelection: number[]\n): number[] {\n  if (!currentSelection.includes(index)) {\n    return [...currentSelection, index]\n  }\n  return currentSelection.filter(value => value !== index)\n}\n\nfunction handleSelection(\n  mode: ButtonGroupProto.ClickMode,\n  index: number,\n  currentSelection?: number[]\n): number[] {\n  if (mode == ButtonGroupProto.ClickMode.MULTI_SELECT) {\n    return handleMultiSelection(index, currentSelection ?? [])\n  }\n\n  // unselect if item is already selected\n  return currentSelection?.includes(index) ? [] : [index]\n}\n\nfunction getSingleSelection(currentSelection: number[]): number {\n  if (currentSelection.length === 0) {\n    return -1\n  }\n  return currentSelection[0]\n}\n\nfunction syncWithWidgetManager(\n  element: ButtonGroupProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWSource<ButtonGroupValue>,\n  fragmentId?: string\n): void {\n  widgetMgr.setIntArrayValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nexport function getContentElement(\n  content: string,\n  icon?: string,\n  style?: ButtonGroupProto.Style\n): { element: ReactElement; kind: BaseButtonKind; size: BaseButtonSize } {\n  const kind =\n    style === ButtonGroupProto.Style.PILLS\n      ? BaseButtonKind.PILLS\n      : style === ButtonGroupProto.Style.BORDERLESS\n      ? BaseButtonKind.BORDERLESS_ICON\n      : BaseButtonKind.SEGMENT\n  const size =\n    style === ButtonGroupProto.Style.BORDERLESS\n      ? BaseButtonSize.XSMALL\n      : BaseButtonSize.MEDIUM\n\n  const iconSize = style === ButtonGroupProto.Style.BORDERLESS ? \"lg\" : \"base\"\n\n  return {\n    element: (\n      <>\n        {icon && <DynamicIcon size={iconSize} iconValue={icon} />}\n        {content && <StreamlitMarkdown source={content} allowHTML={false} />}\n      </>\n    ),\n    kind: kind,\n    size: size,\n  }\n}\n\n/**\n * Returns true if the element should be shown as selected (even though its technically not).\n * This is used, for example, to show all elements as selected that come before the actually selected element.\n *\n * @param selectionVisualization sets the visualization mode\n * @param clickMode either SINGLE_SELECT or MULTI_SELECT\n * @param selected list of selected indices. Since only SINGLE_SELECT is considered, this list will always have a length of 1.\n * @param index of the current element\n * @returns true if the element is the selected one, or if click_mode is SINGLE_SELECT and selectionVisualization is set to\n *  ALL_UP_TO_SELECTED and the index of the element is smaller than the index of the selected element, false otherwise.\n */\nfunction showAsSelected(\n  selectionVisualization: ButtonGroupProto.SelectionVisualization,\n  clickMode: ButtonGroupProto.ClickMode,\n  selected: number[],\n  index: number\n): boolean {\n  if (selected.indexOf(index) > -1) {\n    return true\n  }\n\n  if (\n    clickMode !== ButtonGroupProto.ClickMode.SINGLE_SELECT ||\n    selectionVisualization !==\n      ButtonGroupProto.SelectionVisualization.ALL_UP_TO_SELECTED\n  ) {\n    return false\n  }\n\n  return selected.length > 0 && index < selected[0]\n}\n\nfunction getButtonKindAndSize(\n  isVisuallySelected: boolean,\n  buttonKind: BaseButtonKind\n): BaseButtonKind {\n  if (isVisuallySelected) {\n    buttonKind = `${buttonKind}Active` as BaseButtonKind\n  }\n\n  return buttonKind\n}\n\nfunction createOptionChild(\n  option: ButtonGroupProto.IOption,\n  index: number,\n  selectionVisualization: ButtonGroupProto.SelectionVisualization,\n  clickMode: ButtonGroupProto.ClickMode,\n  selected: number[],\n  style: ButtonGroupProto.Style\n): React.FunctionComponent {\n  const isVisuallySelected = showAsSelected(\n    selectionVisualization,\n    clickMode,\n    selected,\n    index\n  )\n\n  let content = option.content\n  let icon = option.contentIcon\n  if (isVisuallySelected) {\n    content = option.selectedContent ? option.selectedContent : content\n    icon = option.selectedContentIcon ? option.selectedContentIcon : icon\n  }\n\n  // we have to use forwardRef here because BasewebButtonGroup passes the ref down to its children\n  // and we see a console.error otherwise\n  return forwardRef(function BaseButtonGroup(\n    props: any,\n    _: Ref<BasewebButtonGroup>\n  ): ReactElement {\n    const { element, kind, size } = getContentElement(\n      content ?? \"\",\n      icon ?? undefined,\n      style\n    )\n    const buttonKind = getButtonKindAndSize(\n      !!(\n        isVisuallySelected &&\n        !option.selectedContent &&\n        !option.selectedContentIcon\n      ),\n      kind\n    )\n    return (\n      <BaseButton {...props} size={size} kind={buttonKind}>\n        {element}\n      </BaseButton>\n    )\n  })\n}\n\ntype ButtonGroupValue = number[]\n\nfunction getInitialValue(\n  widgetMgr: WidgetStateManager,\n  element: ButtonGroupProto\n): ButtonGroupValue | undefined {\n  return widgetMgr.getIntArrayValue(element)\n}\n\nfunction getDefaultStateFromProto(\n  element: ButtonGroupProto\n): ButtonGroupValue {\n  return element.default ?? null\n}\n\nfunction getCurrStateFromProto(element: ButtonGroupProto): ButtonGroupValue {\n  return element.value ?? null\n}\n\nfunction ButtonGroup(props: Readonly<Props>): ReactElement {\n  const { disabled, element, fragmentId, widgetMgr } = props\n  const {\n    clickMode,\n    options,\n    selectionVisualization,\n    style,\n    label,\n    labelVisibility,\n    help,\n  } = element\n  const theme: EmotionTheme = useTheme()\n\n  const [value, setValueWSource] = useBasicWidgetState<\n    ButtonGroupValue,\n    ButtonGroupProto\n  >({\n    getStateFromWidgetMgr: getInitialValue,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState: syncWithWidgetManager,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const onClick = (\n    _event: React.SyntheticEvent<HTMLButtonElement>,\n    index: number\n  ): void => {\n    const newSelected = handleSelection(clickMode, index, value)\n    setValueWSource({ value: newSelected, fromUi: true })\n  }\n\n  let mode = undefined\n  if (clickMode === ButtonGroupProto.ClickMode.SINGLE_SELECT) {\n    mode = MODE.radio\n  } else if (clickMode === ButtonGroupProto.ClickMode.MULTI_SELECT) {\n    mode = MODE.checkbox\n  }\n\n  const optionElements = useMemo(\n    () =>\n      options.map((option, index) => {\n        const Element = createOptionChild(\n          option,\n          index,\n          selectionVisualization,\n          clickMode,\n          value,\n          style\n        )\n        return <Element key={`${option.content}-${index}`} />\n      }),\n    [clickMode, options, selectionVisualization, style, value]\n  )\n\n  const gap =\n    style === ButtonGroupProto.Style.BORDERLESS\n      ? theme.spacing.threeXS\n      : theme.spacing.twoXS\n  return (\n    <div className=\"stButtonGroup\" data-testid=\"stButtonGroup\">\n      <WidgetLabel\n        label={label}\n        disabled={disabled}\n        labelVisibility={labelVisibilityProtoValueToEnum(\n          labelVisibility?.value ??\n            LabelVisibilityMessage.LabelVisibilityOptions.COLLAPSED\n        )}\n      >\n        {help && (\n          <StyledWidgetLabelHelpInline>\n            <TooltipIcon content={help} placement={Placement.TOP} />\n          </StyledWidgetLabelHelpInline>\n        )}\n      </WidgetLabel>\n      <BasewebButtonGroup\n        disabled={disabled}\n        mode={mode}\n        onClick={onClick}\n        selected={\n          clickMode === ButtonGroupProto.ClickMode.MULTI_SELECT\n            ? value\n            : getSingleSelection(value)\n        }\n        overrides={{\n          Root: {\n            style: {\n              flexWrap: \"wrap\",\n              gap: gap,\n            },\n          },\n        }}\n      >\n        {optionElements}\n      </BasewebButtonGroup>\n    </div>\n  )\n}\n\nexport default memo(ButtonGroup)\n"],"mappings":"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"}