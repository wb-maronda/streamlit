{"version":3,"file":"ComponentRegistry.js","names":["isNullOrUndefined","logWarning","ComponentRegistry","constructor","endpoints","msgListeners","Map","registerListener","source","listener","has","set","deregisterListener","removed","delete","getComponentURL","componentName","path","buildComponentURL","onMessageEvent","event","data","hasOwnProperty","get","type","window","addEventListener"],"sources":["../../../../src/components/widgets/CustomComponent/ComponentRegistry.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNullOrUndefined } from \"@streamlit/lib/src/util/utils\"\nimport { logWarning } from \"@streamlit/lib/src/util/log\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\n\nimport { ComponentMessageType } from \"./enums\"\n\nexport type ComponentMessageListener = (\n  type: ComponentMessageType,\n  data: any\n) => void\n\n/**\n * Dispatches iframe messages to ComponentInstances.\n */\nexport class ComponentRegistry {\n  private readonly endpoints: StreamlitEndpoints\n\n  private readonly msgListeners = new Map<\n    MessageEventSource,\n    ComponentMessageListener\n  >()\n\n  public constructor(endpoints: StreamlitEndpoints) {\n    this.endpoints = endpoints\n    window.addEventListener(\"message\", this.onMessageEvent)\n  }\n\n  /**\n   * Register a listener for component messages dispatched by the given source.\n   */\n  public registerListener = (\n    source: MessageEventSource,\n    listener: ComponentMessageListener\n  ): void => {\n    if (this.msgListeners.has(source)) {\n      logWarning(`MessageEventSource registered multiple times!`, source)\n    }\n\n    this.msgListeners.set(source, listener)\n  }\n\n  public deregisterListener = (source: MessageEventSource): void => {\n    const removed = this.msgListeners.delete(source)\n    if (!removed) {\n      logWarning(`Could not deregister unregistered MessageEventSource!`)\n    }\n  }\n\n  /** Return a URL for fetching a resource for the given component. */\n  public getComponentURL = (componentName: string, path: string): string => {\n    return this.endpoints.buildComponentURL(componentName, path)\n  }\n\n  private onMessageEvent = (event: MessageEvent): void => {\n    if (\n      isNullOrUndefined(event.data) ||\n      !event.data.hasOwnProperty(\"isStreamlitMessage\")\n    ) {\n      // Disregard messages that don't come from components.\n      return\n    }\n\n    if (isNullOrUndefined(event.source)) {\n      // This should not be possible.\n      logWarning(`Received component message with no eventSource!`, event.data)\n      return\n    }\n\n    // Get the ComponentInstance associated with the event\n    const listener = this.msgListeners.get(event.source)\n    if (isNullOrUndefined(listener) || typeof listener !== \"function\") {\n      logWarning(\n        `Received component message for unregistered ComponentInstance!`,\n        event.data\n      )\n      return\n    }\n\n    const { type } = event.data\n    if (isNullOrUndefined(type)) {\n      logWarning(`Received Streamlit message with no type!`, event.data)\n      return\n    }\n\n    // Forward the message on to the appropriate ComponentInstance.\n    listener(type, event.data)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,iBAAiB;AAC1B,SAASC,UAAU;AAUnB;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,CAAC;EAQtBC,WAAWA,CAACC,SAA6B,EAAE;IAAA,KAPjCA,SAAS;IAAA,KAETC,YAAY,GAAG,IAAIC,GAAG,CAGrC,CAAC;IAAA,KAUIC,gBAAgB,GAAG,CACxBC,MAA0B,EAC1BC,QAAkC,KACzB;MACT,IAAI,IAAI,CAACJ,YAAY,CAACK,GAAG,CAACF,MAAM,CAAC,EAAE;QACjCP,UAAU,CAAE,+CAA8C,EAAEO,MAAM,CAAC;MACrE;MAEA,IAAI,CAACH,YAAY,CAACM,GAAG,CAACH,MAAM,EAAEC,QAAQ,CAAC;IACzC,CAAC;IAAA,KAEMG,kBAAkB,GAAIJ,MAA0B,IAAW;MAChE,MAAMK,OAAO,GAAG,IAAI,CAACR,YAAY,CAACS,MAAM,CAACN,MAAM,CAAC;MAChD,IAAI,CAACK,OAAO,EAAE;QACZZ,UAAU,CAAE,uDAAsD,CAAC;MACrE;IACF,CAAC;IAAA,KAGMc,eAAe,GAAG,CAACC,aAAqB,EAAEC,IAAY,KAAa;MACxE,OAAO,IAAI,CAACb,SAAS,CAACc,iBAAiB,CAACF,aAAa,EAAEC,IAAI,CAAC;IAC9D,CAAC;IAAA,KAEOE,cAAc,GAAIC,KAAmB,IAAW;MACtD,IACEpB,iBAAiB,CAACoB,KAAK,CAACC,IAAI,CAAC,IAC7B,CAACD,KAAK,CAACC,IAAI,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAChD;QACA;QACA;MACF;MAEA,IAAItB,iBAAiB,CAACoB,KAAK,CAACZ,MAAM,CAAC,EAAE;QACnC;QACAP,UAAU,CAAE,iDAAgD,EAAEmB,KAAK,CAACC,IAAI,CAAC;QACzE;MACF;;MAEA;MACA,MAAMZ,QAAQ,GAAG,IAAI,CAACJ,YAAY,CAACkB,GAAG,CAACH,KAAK,CAACZ,MAAM,CAAC;MACpD,IAAIR,iBAAiB,CAACS,QAAQ,CAAC,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;QACjER,UAAU,CACP,gEAA+D,EAChEmB,KAAK,CAACC,IACR,CAAC;QACD;MACF;MAEA,MAAM;QAAEG;MAAK,CAAC,GAAGJ,KAAK,CAACC,IAAI;MAC3B,IAAIrB,iBAAiB,CAACwB,IAAI,CAAC,EAAE;QAC3BvB,UAAU,CAAE,0CAAyC,EAAEmB,KAAK,CAACC,IAAI,CAAC;QAClE;MACF;;MAEA;MACAZ,QAAQ,CAACe,IAAI,EAAEJ,KAAK,CAACC,IAAI,CAAC;IAC5B,CAAC;IA/DC,IAAI,CAACjB,SAAS,GAAGA,SAAS;IAC1BqB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACP,cAAc,CAAC;EACzD;;EAEA;AACF;AACA;;EAmBE;AAuCF"}