{"version":3,"file":"componentUtils.test.js","names":["mockTheme","CUSTOM_COMPONENT_API_VERSION","createIframeMessageHandler","parseArgs","sendRenderMessage","ComponentMessageType","StreamlitMessageType","ArrowDataframe","ComponentInstance","ComponentInstanceProto","WidgetStateManager","jest","mock","describe","element","create","widgetMgr","setComponentError","componentReadyCallback","frameHeightCallback","ref","iframeMessageHandler","beforeEach","mockWidgetStateManager","mockClear","fn","sendRerunBackMsg","formsDataChanged","current","isReady","it","COMPONENT_READY","apiVersion","expect","toBeCalledTimes","height","SET_FRAME_HEIGHT","toBeCalledWith","jsonValue","someData","SET_COMPONENT_VALUE","value","dataType","setJsonValue","toHaveBeenCalledWith","fromUi","undefined","handleAction","mockIframe","contentWindow","postMessage","args","foo","dataframeArgs","key","disabled","emotion","type","RENDER","dfs","theme","any","Object","Uint8Array","someBytes","arrowDataframe","specialArgs","bytes","newArgs","JSON","stringify","toMatchObject","toThrowError","Error"],"sources":["../../../../src/components/widgets/CustomComponent/componentUtils.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject } from \"react\"\nimport \"@testing-library/jest-dom\"\n\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\n\nimport {\n  CUSTOM_COMPONENT_API_VERSION,\n  IframeMessage,\n  IframeMessageHandlerProps,\n  createIframeMessageHandler,\n  parseArgs,\n  sendRenderMessage,\n} from \"./componentUtils\"\nimport { ComponentMessageType, StreamlitMessageType } from \"./enums\"\nimport {\n  ArrowDataframe,\n  ComponentInstance as ComponentInstanceProto,\n} from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\n\n// Mock our WidgetStateManager\njest.mock(\"@streamlit/lib/src/WidgetStateManager\")\n\ndescribe(\"test componentUtils\", () => {\n  describe(\"createIframeMsgHandler\", () => {\n    const element = ComponentInstanceProto.create({})\n    let widgetMgr: WidgetStateManager\n    let setComponentError: jest.Mock\n    let componentReadyCallback: jest.Mock\n    let frameHeightCallback: jest.Mock\n\n    let ref: RefObject<IframeMessageHandlerProps>\n    let iframeMessageHandler: (type: string, data: IframeMessage) => void\n\n    beforeEach(() => {\n      // Clear our class mocks\n      const mockWidgetStateManager = WidgetStateManager as unknown as jest.Mock\n      mockWidgetStateManager.mockClear()\n\n      componentReadyCallback = jest.fn()\n      frameHeightCallback = jest.fn()\n      setComponentError = jest.fn()\n      widgetMgr = new WidgetStateManager({\n        sendRerunBackMsg: jest.fn(),\n        formsDataChanged: jest.fn(),\n      })\n      ref = {\n        current: {\n          isReady: () => true,\n          element,\n          widgetMgr,\n          setComponentError,\n          componentReadyCallback,\n          frameHeightCallback,\n        },\n      }\n      iframeMessageHandler = createIframeMessageHandler(ref)\n    })\n\n    it(\"should call readyCallback when iframeMessageHandler receives COMPONENT_READY message\", () => {\n      iframeMessageHandler(ComponentMessageType.COMPONENT_READY, {\n        apiVersion: CUSTOM_COMPONENT_API_VERSION,\n      })\n      expect(componentReadyCallback).toBeCalledTimes(1)\n    })\n\n    it(\"should call componentErrorCallback when iframeMessageHandler receives message with wrong API version\", () => {\n      iframeMessageHandler(ComponentMessageType.COMPONENT_READY, {\n        apiVersion: CUSTOM_COMPONENT_API_VERSION + 1,\n      })\n      expect(componentReadyCallback).toBeCalledTimes(0)\n      expect(setComponentError).toBeCalledTimes(1)\n    })\n\n    it(\"should call frameHeightCallback when iframeMessageHandler receives SET_FRAME_HEIGHT message\", () => {\n      const height = 100\n      iframeMessageHandler(ComponentMessageType.SET_FRAME_HEIGHT, {\n        height: height,\n      })\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      ref.current!.isReady = () => false\n      // when isReady = false, the callback should not be called\n      iframeMessageHandler(ComponentMessageType.SET_FRAME_HEIGHT, {\n        height: height,\n      })\n\n      expect(frameHeightCallback).toBeCalledTimes(1)\n      expect(frameHeightCallback).toBeCalledWith(height)\n    })\n\n    it(\"should call widgetManager when iframeMessageHandler receives SET_COMPONENT_VALUE message\", () => {\n      const jsonValue = { someData: \"foo\" }\n      iframeMessageHandler(ComponentMessageType.SET_COMPONENT_VALUE, {\n        value: jsonValue,\n        dataType: \"json\",\n      })\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      ref.current!.isReady = () => false\n      // when isReady = false, the callback should not be called\n      iframeMessageHandler(ComponentMessageType.SET_COMPONENT_VALUE, {\n        value: jsonValue,\n        dataType: \"json\",\n      })\n\n      expect(widgetMgr.setJsonValue).toBeCalledTimes(1)\n      expect(widgetMgr.setJsonValue).toHaveBeenCalledWith(\n        element,\n        jsonValue,\n        {\n          fromUi: true,\n        },\n        undefined\n      )\n    })\n  })\n\n  describe(\"sendRenderMessage\", () => {\n    it(\"should send message to iframe\", () => {\n      const handleAction = jest.fn()\n\n      const mockIframe: any = {\n        contentWindow: {\n          postMessage: handleAction,\n        },\n      }\n\n      const args = { foo: \"bar\" }\n      const dataframeArgs = [{ key: \"foo\", value: \"bar\" }]\n      const disabled = true\n\n      sendRenderMessage(\n        args,\n        dataframeArgs,\n        disabled,\n        mockTheme.emotion,\n        mockIframe\n      )\n      expect(handleAction).toBeCalledTimes(1)\n      expect(handleAction).toHaveBeenCalledWith(\n        {\n          type: StreamlitMessageType.RENDER,\n          args,\n          dfs: dataframeArgs,\n          disabled,\n          theme: expect.any(Object),\n        },\n        \"*\"\n      )\n    })\n\n    it(\"should not send message when iframe is undefined\", () => {\n      const handleAction = jest.fn()\n\n      const mockIframe: any = undefined\n      sendRenderMessage({}, [], false, mockTheme.emotion, mockIframe)\n      expect(handleAction).toBeCalledTimes(0)\n    })\n\n    it(\"should not send message when iframe's content window is undefined\", () => {\n      const handleAction = jest.fn()\n\n      const mockIframe: any = {\n        contentWindow: undefined,\n      }\n      sendRenderMessage({}, [], false, mockTheme.emotion, mockIframe)\n      expect(handleAction).toBeCalledTimes(0)\n    })\n  })\n\n  describe(\"parseArgs\", () => {\n    it(\"should parse jsonArgs and specialArgs\", () => {\n      const args = { foo: \"bar\", \"some-bytes\": new Uint8Array(8) }\n      const someBytes = new Uint8Array(8)\n      // set one byte to a different value\n      someBytes[1] = 10\n      const arrowDataframe = new ArrowDataframe()\n      arrowDataframe.height = 100\n      const specialArgs = [\n        {\n          key: \"some-dataframe\",\n          value: \"arrowDataFrame\",\n          arrowDataframe: arrowDataframe,\n        },\n        {\n          key: \"some-bytes\",\n          value: \"bytes\",\n          bytes: someBytes,\n        },\n      ]\n\n      const [newArgs, dataframeArgs] = parseArgs(\n        JSON.stringify(args),\n        specialArgs\n      )\n      expect(newArgs).toMatchObject({ foo: \"bar\", \"some-bytes\": someBytes })\n      expect(dataframeArgs).toMatchObject([\n        {\n          key: \"some-dataframe\",\n          value: arrowDataframe,\n        },\n      ])\n    })\n\n    it(\"should throw an error with with unknown specialArgs type\", () => {\n      const args = {}\n      const specialArgs = [\n        {\n          key: \"some-dataframe\",\n          value: \"some-unknown-type\",\n        },\n      ]\n\n      expect(() => parseArgs(JSON.stringify(args), specialArgs)).toThrowError(\n        Error\n      )\n    })\n  })\n})\n"],"mappings":"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"}