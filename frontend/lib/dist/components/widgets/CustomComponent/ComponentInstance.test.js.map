{"version":3,"file":"ComponentInstance.test.js","names":["React","act","fireEvent","screen","ComponentInstance","ComponentInstanceProto","SpecialArg","DEFAULT_IFRAME_FEATURE_POLICY","DEFAULT_IFRAME_SANDBOX_POLICY","logWarning","buildHttpUri","WidgetStateManager","bgColorToBaseString","toExportedTheme","fonts","mockEndpoints","mockTheme","render","COMPONENT_READY_WARNING_TIME_MS","CUSTOM_COMPONENT_API_VERSION","ComponentRegistry","ComponentMessageType","StreamlitMessageType","jsx","_jsx","jest","mock","useFakeTimers","mockedBuildHttpUri","mockImplementation","MOCK_COMPONENT_URL","MOCK_WIDGET_ID","MOCK_COMPONENT_NAME","describe","getComponentRegistry","beforeEach","mockWidgetStateManager","mockClear","mockLog","it","componentRegistry","registerListener","spyOn","element","createElementProp","registry","width","disabled","theme","emotion","widgetMgr","sendRerunBackMsg","fn","formsDataChanged","expect","toHaveBeenCalledTimes","deregisterListener","unmount","iframe","getByTitle","toHaveAttribute","toHaveClass","skeleton","getByTestId","toBeInTheDocument","toHaveStyle","height","queryByTestId","not","jsonArgs","foo","bar","postMessage","contentWindow","window","MessageEvent","data","isStreamlitMessage","apiVersion","type","COMPONENT_READY","source","toHaveBeenCalledWith","renderMsg","rerender","badAPIVersion","toBeVisible","key","getByText","advanceTimersByTime","jsonValue","list","SET_COMPONENT_VALUE","dataType","value","instances","setJsonValue","fromUi","undefined","fragmentId","bytesValue","Uint8Array","setBytesValue","toHaveBeenCalled","SET_FRAME_HEIGHT","args","dataframes","arguments","length","base","colors","bgColor","font","sansSerif","forwardMsg","RENDER","dfs","specialArgs","create","JSON","stringify","componentName","id","url"],"sources":["../../../../src/components/widgets/CustomComponent/ComponentInstance.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { act, fireEvent, screen } from \"@testing-library/react\"\n\nimport {\n  ComponentInstance as ComponentInstanceProto,\n  SpecialArg,\n} from \"@streamlit/lib/src/proto\"\nimport {\n  DEFAULT_IFRAME_FEATURE_POLICY,\n  DEFAULT_IFRAME_SANDBOX_POLICY,\n} from \"@streamlit/lib/src/util/IFrameUtil\"\nimport { logWarning } from \"@streamlit/lib/src/util/log\"\nimport { buildHttpUri } from \"@streamlit/lib/src/util/UriUtil\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport { bgColorToBaseString, toExportedTheme } from \"@streamlit/lib/src/theme\"\nimport { fonts } from \"@streamlit/lib/src/theme/primitives/typography\"\nimport { mockEndpoints } from \"@streamlit/lib/src/mocks/mocks\"\nimport { mockTheme } from \"@streamlit/lib/src/mocks/mockTheme\"\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport ComponentInstance, {\n  COMPONENT_READY_WARNING_TIME_MS,\n} from \"./ComponentInstance\"\nimport { CUSTOM_COMPONENT_API_VERSION } from \"./componentUtils\"\nimport { ComponentRegistry } from \"./ComponentRegistry\"\nimport { ComponentMessageType, StreamlitMessageType } from \"./enums\"\n\n// Mock log functions.\njest.mock(\"@streamlit/lib/src/util/log\")\n\n// We have some timeouts that we want to use fake timers for.\njest.useFakeTimers()\n\n// Mock uri utils.\njest.mock(\"@streamlit/lib/src/util/UriUtil\")\nconst mockedBuildHttpUri = buildHttpUri as jest.Mock\nmockedBuildHttpUri.mockImplementation(() => \"registry/url\")\n\n// Mock our WidgetStateManager\njest.mock(\"@streamlit/lib/src/WidgetStateManager\")\n\nconst MOCK_COMPONENT_URL = \"http://a.mock.url\"\nconst MOCK_WIDGET_ID = \"mock_widget_id\"\nconst MOCK_COMPONENT_NAME = \"mock_component_name\"\n\ndescribe(\"ComponentInstance\", () => {\n  const getComponentRegistry = (): ComponentRegistry => {\n    return new ComponentRegistry(mockEndpoints())\n  }\n\n  beforeEach(() => {\n    // Clear our class mocks\n    const mockWidgetStateManager = WidgetStateManager as unknown as jest.Mock\n    mockWidgetStateManager.mockClear()\n\n    const mockLog = logWarning as jest.Mock\n    mockLog.mockClear()\n  })\n\n  it(\"registers a message listener on render\", () => {\n    const componentRegistry = getComponentRegistry()\n    const registerListener = jest.spyOn(componentRegistry, \"registerListener\")\n    render(\n      <ComponentInstance\n        element={createElementProp()}\n        registry={componentRegistry}\n        width={100}\n        disabled={false}\n        theme={mockTheme.emotion}\n        widgetMgr={\n          new WidgetStateManager({\n            sendRerunBackMsg: jest.fn(),\n            formsDataChanged: jest.fn(),\n          })\n        }\n      />\n    )\n    expect(registerListener).toHaveBeenCalledTimes(1)\n  })\n\n  it(\"deregisters its message listener on rerender\", () => {\n    const componentRegistry = getComponentRegistry()\n    const deregisterListener = jest.spyOn(\n      componentRegistry,\n      \"deregisterListener\"\n    )\n    const { unmount } = render(\n      <ComponentInstance\n        element={createElementProp()}\n        registry={componentRegistry}\n        width={100}\n        disabled={false}\n        theme={mockTheme.emotion}\n        widgetMgr={\n          new WidgetStateManager({\n            sendRerunBackMsg: jest.fn(),\n            formsDataChanged: jest.fn(),\n          })\n        }\n      />\n    )\n    unmount()\n    expect(deregisterListener).toHaveBeenCalledTimes(1)\n  })\n\n  it(\"renders its iframe correctly\", () => {\n    const componentRegistry = getComponentRegistry()\n    render(\n      <ComponentInstance\n        element={createElementProp()}\n        registry={componentRegistry}\n        width={100}\n        disabled={false}\n        theme={mockTheme.emotion}\n        widgetMgr={\n          new WidgetStateManager({\n            sendRerunBackMsg: jest.fn(),\n            formsDataChanged: jest.fn(),\n          })\n        }\n      />\n    )\n    const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n    expect(iframe).toHaveAttribute(\n      \"src\",\n      \"http://a.mock.url?streamlitUrl=http%3A%2F%2Flocalhost%2F\"\n    )\n    expect(iframe).toHaveAttribute(\"allow\", DEFAULT_IFRAME_FEATURE_POLICY)\n    expect(iframe).toHaveAttribute(\"sandbox\", DEFAULT_IFRAME_SANDBOX_POLICY)\n    expect(iframe).toHaveClass(\"stCustomComponentV1\")\n  })\n\n  it(\"displays a skeleton initially with a certain height\", () => {\n    const componentRegistry = getComponentRegistry()\n    render(\n      <ComponentInstance\n        element={createElementProp()}\n        registry={componentRegistry}\n        width={100}\n        disabled={false}\n        theme={mockTheme.emotion}\n        widgetMgr={\n          new WidgetStateManager({\n            sendRerunBackMsg: jest.fn(),\n            formsDataChanged: jest.fn(),\n          })\n        }\n      />\n    )\n    const skeleton = screen.getByTestId(\"stSkeleton\")\n    expect(skeleton).toBeInTheDocument()\n    expect(skeleton).toHaveStyle(\"height: 2.75rem\")\n\n    const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n    expect(iframe).toHaveAttribute(\"height\", \"0\")\n  })\n\n  it(\"will not displays a skeleton when height is explicitly set to 0\", () => {\n    const componentRegistry = getComponentRegistry()\n    render(\n      <ComponentInstance\n        element={createElementProp({ height: 0 })}\n        registry={componentRegistry}\n        width={100}\n        disabled={false}\n        theme={mockTheme.emotion}\n        widgetMgr={\n          new WidgetStateManager({\n            sendRerunBackMsg: jest.fn(),\n            formsDataChanged: jest.fn(),\n          })\n        }\n      />\n    )\n    expect(screen.queryByTestId(\"stSkeleton\")).not.toBeInTheDocument()\n\n    const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n    expect(iframe).toHaveAttribute(\"height\", \"0\")\n  })\n\n  describe(\"COMPONENT_READY handler\", () => {\n    it(\"posts a RENDER message to the iframe\", () => {\n      const jsonArgs = { foo: \"string\", bar: 5 }\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // @ts-expect-error\n      const postMessage = jest.spyOn(iframe.contentWindow, \"postMessage\")\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      expect(postMessage).toHaveBeenCalledWith(renderMsg(jsonArgs, []), \"*\")\n    })\n\n    it(\"hides the skeleton and maintains iframe height of 0\", () => {\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={createElementProp()}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      expect(screen.queryByTestId(\"stSkeleton\")).not.toBeInTheDocument()\n      expect(iframe).toHaveAttribute(\"height\", \"0\")\n    })\n\n    it(\"prevents RENDER message until component is ready\", () => {\n      const jsonArgs = { foo: \"string\", bar: 5 }\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // @ts-expect-error\n      const postMessage = jest.spyOn(iframe.contentWindow, \"postMessage\")\n      expect(postMessage).toHaveBeenCalledTimes(0)\n    })\n\n    it(\"can be called multiple times\", () => {\n      // It's not an error for a component to call READY multiple times.\n      // (This can happen during development, when the component's devserver\n      // reloads.)\n      const jsonArgs = { foo: \"string\", bar: 5 }\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // @ts-expect-error\n      const postMessage = jest.spyOn(iframe.contentWindow, \"postMessage\")\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      expect(postMessage).toHaveBeenCalledTimes(2)\n    })\n\n    it(\"send render message whenever the args change and the component is ready\", () => {\n      let jsonArgs = { foo: \"string\", bar: 5 }\n      const componentRegistry = getComponentRegistry()\n      const { rerender } = render(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // @ts-expect-error\n      const postMessage = jest.spyOn(iframe.contentWindow, \"postMessage\")\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      jsonArgs = { foo: \"string\", bar: 10 }\n      rerender(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n\n      expect(postMessage).toHaveBeenCalledTimes(2)\n    })\n\n    it(\"send render message when viewport changes\", () => {\n      const jsonArgs = { foo: \"string\", bar: 5 }\n      let width = 100\n      const componentRegistry = getComponentRegistry()\n      const { rerender } = render(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={width}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // @ts-expect-error\n      const postMessage = jest.spyOn(iframe.contentWindow, \"postMessage\")\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      width = width + 1\n      rerender(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={width}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n\n      expect(postMessage).toHaveBeenCalledTimes(2)\n    })\n\n    it(\"errors on unrecognized API version\", () => {\n      const badAPIVersion = CUSTOM_COMPONENT_API_VERSION + 1\n      const jsonArgs = { foo: \"string\", bar: 5 }\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={createElementProp(jsonArgs)}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: badAPIVersion,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      expect(screen.getByTestId(\"stAlertContentError\")).toBeVisible()\n    })\n\n    it(\"errors on unrecognized special args\", () => {\n      const jsonArgs = {}\n      const element = createElementProp(jsonArgs, [\n        new SpecialArg({ key: \"foo\" }),\n      ])\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={element}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      expect(\n        screen.getByText(\"Unrecognized SpecialArg type: undefined\")\n      ).toBeVisible()\n    })\n\n    it(\"warns if COMPONENT_READY hasn't been received after a timeout\", () => {\n      const componentRegistry = getComponentRegistry()\n      render(\n        <ComponentInstance\n          element={createElementProp()}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      // Advance past our warning timeout, and force a re-render.\n      act(() => jest.advanceTimersByTime(COMPONENT_READY_WARNING_TIME_MS))\n\n      expect(\n        screen.getByText(/The app is attempting to load the component from/)\n      ).toBeVisible()\n    })\n  })\n\n  describe(\"SET_COMPONENT_VALUE handler\", () => {\n    it(\"handles JSON values\", () => {\n      const jsonValue = {\n        foo: \"string\",\n        bar: 123,\n        list: [1, \"foo\", false],\n      }\n\n      const componentRegistry = getComponentRegistry()\n      const element = createElementProp(jsonValue)\n      render(\n        <ComponentInstance\n          element={element}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      // SET COMPONENT_VALUE\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.SET_COMPONENT_VALUE,\n            dataType: \"json\",\n            value: jsonValue,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      const widgetMgr = (WidgetStateManager as any).mock.instances[0]\n      expect(widgetMgr.setJsonValue).toHaveBeenCalledWith(\n        element,\n        jsonValue,\n        {\n          fromUi: true,\n        },\n        undefined\n      )\n    })\n\n    it(\"handles bytes values\", () => {\n      const jsonValue = {}\n\n      const componentRegistry = getComponentRegistry()\n      const element = createElementProp(jsonValue)\n      render(\n        <ComponentInstance\n          element={element}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n          // Also verify that we can pass a fragmentID down to setBytesValue.\n          fragmentId=\"myFragmentId\"\n        />\n      )\n\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // SET COMPONENT_READY\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.COMPONENT_READY,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n\n      const bytesValue = new Uint8Array([0, 1, 2])\n      // SET COMPONENT_VALUE\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.SET_COMPONENT_VALUE,\n            dataType: \"bytes\",\n            value: bytesValue,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      const widgetMgr = (WidgetStateManager as any).mock.instances[0]\n      expect(widgetMgr.setBytesValue).toHaveBeenCalledWith(\n        element,\n        bytesValue,\n        { fromUi: true },\n        \"myFragmentId\"\n      )\n    })\n\n    //   // TODO: implement test to check handling of daataframe values\n\n    it(\"warns if called before COMPONENT_READY\", () => {\n      const jsonValue = {\n        foo: \"string\",\n        bar: 123,\n        list: [1, \"foo\", false],\n      }\n\n      const componentRegistry = getComponentRegistry()\n      const element = createElementProp(jsonValue)\n      render(\n        <ComponentInstance\n          element={element}\n          registry={componentRegistry}\n          width={100}\n          disabled={false}\n          theme={mockTheme.emotion}\n          widgetMgr={\n            new WidgetStateManager({\n              sendRerunBackMsg: jest.fn(),\n              formsDataChanged: jest.fn(),\n            })\n          }\n        />\n      )\n      const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n      // SET COMPONENT_VALUE\n      fireEvent(\n        window,\n        new MessageEvent(\"message\", {\n          data: {\n            isStreamlitMessage: true,\n            apiVersion: 1,\n            type: ComponentMessageType.SET_COMPONENT_VALUE,\n            dataType: \"bytes\",\n            value: jsonValue,\n          },\n          // @ts-expect-error\n          source: iframe.contentWindow,\n        })\n      )\n      const widgetMgr = (WidgetStateManager as any).mock.instances[0]\n      expect(widgetMgr.setJsonValue).not.toHaveBeenCalled()\n\n      expect(logWarning).toHaveBeenCalledWith(\n        `Got ${ComponentMessageType.SET_COMPONENT_VALUE} before ${ComponentMessageType.COMPONENT_READY}!`\n      )\n    })\n\n    describe(\"SET_FRAME_HEIGHT handler\", () => {\n      it(\"updates the frameHeight without re-rendering\", () => {\n        const jsonValue = {}\n        const componentRegistry = getComponentRegistry()\n        const element = createElementProp(jsonValue)\n        render(\n          <ComponentInstance\n            element={element}\n            registry={componentRegistry}\n            width={100}\n            disabled={false}\n            theme={mockTheme.emotion}\n            widgetMgr={\n              new WidgetStateManager({\n                sendRerunBackMsg: jest.fn(),\n                formsDataChanged: jest.fn(),\n              })\n            }\n          />\n        )\n        const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n        // SET COMPONENT_READY\n        fireEvent(\n          window,\n          new MessageEvent(\"message\", {\n            data: {\n              isStreamlitMessage: true,\n              apiVersion: 1,\n              type: ComponentMessageType.COMPONENT_READY,\n            },\n            // @ts-expect-error\n            source: iframe.contentWindow,\n          })\n        )\n        // SET IFRAME_HEIGHT\n        fireEvent(\n          window,\n          new MessageEvent(\"message\", {\n            data: {\n              isStreamlitMessage: true,\n              apiVersion: 1,\n              type: ComponentMessageType.SET_FRAME_HEIGHT,\n              height: 100,\n            },\n            // @ts-expect-error\n            source: iframe.contentWindow,\n          })\n        )\n\n        // Updating the frameheight intentionally does *not* cause a re-render\n        // (instead, it directly updates the iframeRef) - so we can't check\n        // that `child.prop(\"height\") == 100`\n        expect(iframe).toHaveAttribute(\"height\", \"100\")\n      })\n\n      it(\"warns if called before COMPONENT_READY\", () => {\n        const jsonValue = {\n          foo: \"string\",\n          bar: 123,\n          list: [1, \"foo\", false],\n        }\n\n        const componentRegistry = getComponentRegistry()\n        const element = createElementProp(jsonValue)\n        render(\n          <ComponentInstance\n            element={element}\n            registry={componentRegistry}\n            width={100}\n            disabled={false}\n            theme={mockTheme.emotion}\n            widgetMgr={\n              new WidgetStateManager({\n                sendRerunBackMsg: jest.fn(),\n                formsDataChanged: jest.fn(),\n              })\n            }\n          />\n        )\n        const iframe = screen.getByTitle(MOCK_COMPONENT_NAME)\n        // SET IFRAME_HEIGHT\n        fireEvent(\n          window,\n          new MessageEvent(\"message\", {\n            data: {\n              isStreamlitMessage: true,\n              apiVersion: 1,\n              type: ComponentMessageType.SET_FRAME_HEIGHT,\n              height: 100,\n            },\n            // @ts-expect-error\n            source: iframe.contentWindow,\n          })\n        )\n        const widgetMgr = (WidgetStateManager as any).mock.instances[0]\n        expect(widgetMgr.setJsonValue).not.toHaveBeenCalled()\n\n        expect(logWarning).toHaveBeenCalledWith(\n          `Got ${ComponentMessageType.SET_FRAME_HEIGHT} before ${ComponentMessageType.COMPONENT_READY}!`\n        )\n      })\n    })\n  })\n\n  function renderMsg(\n    args: { [name: string]: any },\n    dataframes: any[],\n    disabled = false,\n    theme = {\n      ...toExportedTheme(mockTheme.emotion),\n      base: bgColorToBaseString(mockTheme.emotion.colors.bgColor),\n      font: fonts.sansSerif,\n    }\n  ): any {\n    return forwardMsg(StreamlitMessageType.RENDER, {\n      args,\n      dfs: dataframes,\n      disabled,\n      theme,\n    })\n  }\n\n  function forwardMsg(type: StreamlitMessageType, data: any): any {\n    return { type, ...data }\n  }\n\n  /** Create a ComponentInstance.props.element prop with the given args. */\n  function createElementProp(\n    jsonArgs: { [name: string]: any } = {},\n    specialArgs: SpecialArg[] = []\n  ): ComponentInstanceProto {\n    return ComponentInstanceProto.create({\n      jsonArgs: JSON.stringify(jsonArgs),\n      specialArgs,\n      componentName: MOCK_COMPONENT_NAME,\n      id: MOCK_WIDGET_ID,\n      url: MOCK_COMPONENT_URL,\n    })\n  }\n})\n"],"mappings":"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"}