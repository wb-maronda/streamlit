{"version":3,"file":"ComponentRegistry.test.js","names":["mockEndpoints","ComponentRegistry","describe","test","endpoint","registry","url","getComponentURL","expect","toEqual","buildComponentURL","onMessageEvent","msgSource1","msgSource2","msgListener1","jest","fn","msgListener2","MessageEvent","source","registerListener","messageData","isStreamlitMessage","type","data","toHaveBeenCalledWith","mockReset","not","toHaveBeenCalled","deregisterListener"],"sources":["../../../../src/components/widgets/CustomComponent/ComponentRegistry.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { mockEndpoints } from \"@streamlit/lib/src/mocks/mocks\"\nimport { ComponentRegistry } from \"./ComponentRegistry\"\n\ndescribe(\"ComponentRegistry\", () => {\n  test(\"Constructs component URLs\", () => {\n    const endpoint = mockEndpoints()\n    const registry = new ComponentRegistry(endpoint)\n    const url = registry.getComponentURL(\"foo\", \"index.html\")\n    expect(url).toEqual(endpoint.buildComponentURL(\"foo\", \"index.html\"))\n  })\n\n  test(\"Dispatches messages to listeners\", () => {\n    const registry = new ComponentRegistry(mockEndpoints())\n    // @ts-expect-error\n    const { onMessageEvent } = registry\n\n    // Create some mocks\n    const msgSource1: any = {}\n    const msgSource2: any = {}\n    const msgListener1 = jest.fn()\n    const msgListener2 = jest.fn()\n\n    // This should not error (and will not be handled).\n    onMessageEvent(new MessageEvent(\"message\", { source: msgSource1 }))\n\n    // Register a listener for message events from the window.\n    registry.registerListener(msgSource1, msgListener1)\n\n    // Send a message to the registry. It should be re-dispatched\n    // to our listener.\n    const messageData = {\n      isStreamlitMessage: true,\n      type: \"setComponentValue\",\n    }\n    onMessageEvent(\n      new MessageEvent(\"message\", { source: msgSource1, data: messageData })\n    )\n    expect(msgListener1).toHaveBeenCalledWith(messageData.type, messageData)\n\n    // Send a message that's missing data. It should *not* be re-dispatched.\n    msgListener1.mockReset()\n    onMessageEvent(new MessageEvent(\"message\", { source: msgSource1 }))\n    expect(msgListener1).not.toHaveBeenCalled()\n\n    // De-register our listener. Messages should not be re-dispatched.\n    msgListener1.mockReset()\n    registry.deregisterListener(msgSource1)\n    onMessageEvent(\n      new MessageEvent(\"message\", { source: msgSource1, data: messageData })\n    )\n    expect(msgListener1).not.toHaveBeenCalled()\n\n    // Ensure that listeners only receive messages for their own source.\n    registry.registerListener(msgSource1, msgListener1)\n    registry.registerListener(msgSource2, msgListener2)\n\n    msgListener1.mockReset()\n    msgListener2.mockReset()\n    onMessageEvent(\n      new MessageEvent(\"message\", { source: msgSource1, data: messageData })\n    )\n    expect(msgListener1).toHaveBeenCalledWith(messageData.type, messageData)\n    expect(msgListener2).not.toHaveBeenCalled()\n\n    msgListener1.mockReset()\n    msgListener2.mockReset()\n    onMessageEvent(\n      new MessageEvent(\"message\", { source: msgSource2, data: messageData })\n    )\n    expect(msgListener1).not.toHaveBeenCalled()\n    expect(msgListener2).toHaveBeenCalledWith(messageData.type, messageData)\n  })\n})\n"],"mappings":"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"}