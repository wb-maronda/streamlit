{"version":3,"file":"Maybe.js","names":["React","Maybe","Component","shouldComponentUpdate","nextProps","props","enable","render","children"],"sources":["../../../../src/components/core/Maybe/Maybe.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactNode } from \"react\"\n\nexport interface MaybeProps {\n  enable: boolean\n  children?: ReactNode\n}\n\nexport interface State {}\n\nclass Maybe extends React.Component<MaybeProps, State> {\n  // eslint-disable-next-line class-methods-use-this\n  public shouldComponentUpdate(nextProps: Readonly<MaybeProps>): boolean {\n    // We have our component update if either props.enable or nextProps.enable\n    // is true to ensure that we rerender in the case that an Element is\n    // removed by replacing it with an empty one (so goes from enabled->disabled).\n    return this.props.enable || nextProps.enable\n  }\n\n  public render(): React.ReactNode {\n    return this.props.children\n  }\n}\n\nexport default Maybe\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAqB,OAAO;AASxC,MAAMC,KAAK,SAASD,KAAK,CAACE,SAAS,CAAoB;EACrD;EACOC,qBAAqBA,CAACC,SAA+B,EAAW;IACrE;IACA;IACA;IACA,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,IAAIF,SAAS,CAACE,MAAM;EAC9C;EAEOC,MAAMA,CAAA,EAAoB;IAC/B,OAAO,IAAI,CAACF,KAAK,CAACG,QAAQ;EAC5B;AACF;AAEA,eAAeP,KAAK"}