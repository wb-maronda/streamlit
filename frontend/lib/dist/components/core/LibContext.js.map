{"version":3,"file":"LibContext.js","names":["React","baseTheme","LibContext","createContext","isFullScreen","setFullScreen","addScriptFinishedHandler","removeScriptFinishedHandler","activeTheme","setTheme","availableThemes","addThemes","onPageChange","currentPageScriptHash","libConfig","fragmentIdsThisRun"],"sources":["../../../src/components/core/LibContext.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { baseTheme, ThemeConfig } from \"@streamlit/lib/src/theme\"\n\n/**\n * The lib config contains various configurations that the host platform can\n * use to configure streamlit-lib frontend behavior. This should to be treated as part of the public\n * API, and changes need to be backwards-compatible meaning that an old host configuration\n * should still work with a new frontend versions.\n */\nexport type LibConfig = {\n  /**\n   * the mapbox token that can be configured by a platform\n   */\n  mapboxToken?: string\n\n  /**\n   * Whether to disable the full screen mode all elements / widgets.\n   */\n  disableFullscreenMode?: boolean\n\n  enforceDownloadInNewTab?: boolean\n}\n\nexport interface LibContextProps {\n  /** True if the app is in full-screen mode. */\n  isFullScreen: boolean\n\n  /** Function that sets the `isFullScreen` property. */\n  setFullScreen: (value: boolean) => void\n\n  /**\n   * Add a callback that will be called every time the app's script finishes\n   * executing.\n   */\n  addScriptFinishedHandler: (func: () => void) => void\n\n  /** Remove a previously-added scriptFinishedHandler callback. */\n  removeScriptFinishedHandler: (func: () => void) => void\n\n  /** The currently active app theme. */\n  activeTheme: ThemeConfig\n\n  /**\n   * Set the app's active theme locally and send it the app's host (if any).\n   * @see App.setAndSendTheme\n   */\n  setTheme: (theme: ThemeConfig) => void\n\n  /** List of all available themes. */\n  availableThemes: ThemeConfig[]\n\n  /**\n   * Call to add additional themes to the app.\n   * @see ThemeCreatorDialog\n   */\n  addThemes: (themes: ThemeConfig[]) => void\n\n  /**\n   * Change the page in a multi-page app.\n   * @see PageLink\n   */\n  onPageChange: (pageScriptHash: string) => void\n\n  /**\n   * The current page of a multi-page app.\n   * @see PageLink\n   */\n  currentPageScriptHash: string\n\n  /**\n   * The lib-specific configuration from the apps host which is requested via the\n   * _stcore/host-config endpoint.\n   */\n  libConfig: LibConfig\n\n  /**\n   * The IDs of the fragments that the current script run corresponds to. If the\n   * current script run isn't due to a fragment, this field is falsy.\n   */\n  fragmentIdsThisRun: Array<string>\n}\n\nexport const LibContext = React.createContext<LibContextProps>({\n  isFullScreen: false,\n  setFullScreen: () => {},\n  addScriptFinishedHandler: () => {},\n  removeScriptFinishedHandler: () => {},\n  activeTheme: baseTheme,\n  setTheme: () => {},\n  availableThemes: [],\n  addThemes: () => {},\n  onPageChange: () => {},\n  currentPageScriptHash: \"\",\n  libConfig: {},\n  fragmentIdsThisRun: [],\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS;;AAElB;AACA;AACA;AACA;AACA;AACA;;AA0EA,OAAO,MAAMC,UAAU,gBAAGF,KAAK,CAACG,aAAa,CAAkB;EAC7DC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAEA,CAAA,KAAM,CAAC,CAAC;EACvBC,wBAAwB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClCC,2BAA2B,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrCC,WAAW,EAAEP,SAAS;EACtBQ,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,eAAe,EAAE,EAAE;EACnBC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EACtBC,qBAAqB,EAAE,EAAE;EACzBC,SAAS,EAAE,CAAC,CAAC;EACbC,kBAAkB,EAAE;AACtB,CAAC,CAAC"}