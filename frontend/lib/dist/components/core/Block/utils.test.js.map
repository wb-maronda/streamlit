{"version":3,"file":"utils.test.js","names":["ElementNode","ScriptRunState","isElementStale","describe","node","it","expect","RERUN_REQUESTED","toBe","RUNNING","states","NOT_RUNNING","STOP_REQUESTED","COMPILATION_ERROR","forEach","s"],"sources":["../../../../src/components/core/Block/utils.test.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ElementNode } from \"@streamlit/lib/src/AppNode\"\nimport { ScriptRunState } from \"@streamlit/lib/src/ScriptRunState\"\n\nimport { isElementStale } from \"./utils\"\n\ndescribe(\"isElementStale\", () => {\n  const node = new ElementNode(\n    // @ts-expect-error\n    null,\n    null,\n    \"myScriptRunId\",\n    \"activeScriptHash\",\n    \"myFragmentId\"\n  )\n\n  it(\"returns true if scriptRunState is RERUN_REQUESTED\", () => {\n    expect(\n      isElementStale(\n        node,\n        ScriptRunState.RERUN_REQUESTED,\n        \"someScriptRunId\",\n        []\n      )\n    ).toBe(true)\n  })\n\n  // When running in a fragment, the only elements that should be set to stale\n  // are those belonging to the fragment that's currently running.\n  it(\"if running and currentFragmentId is set, compares with node's fragmentId\", () => {\n    expect(\n      isElementStale(node, ScriptRunState.RUNNING, \"myScriptRunId\", [\n        \"myFragmentId\",\n      ])\n    ).toBe(true)\n\n    expect(\n      isElementStale(node, ScriptRunState.RUNNING, \"myScriptRunId\", [\n        \"someFragmentId\",\n        \"someOtherFragmentId\",\n      ])\n    ).toBe(false)\n  })\n\n  // When not running in a fragment, all elements from script runs aside from\n  // the current one should be set to stale.\n  it(\"if running and currentFragmentId is not set, compares with node's scriptRunId\", () => {\n    expect(\n      isElementStale(node, ScriptRunState.RUNNING, \"someOtherScriptRunId\", [])\n    ).toBe(true)\n\n    expect(\n      isElementStale(node, ScriptRunState.RUNNING, \"myScriptRunId\", [])\n    ).toBe(false)\n  })\n\n  it(\"returns false for all other script run states\", () => {\n    const states = [\n      ScriptRunState.NOT_RUNNING,\n      ScriptRunState.STOP_REQUESTED,\n      ScriptRunState.COMPILATION_ERROR,\n    ]\n    states.forEach(s => {\n      expect(isElementStale(node, s, \"someOtherScriptRunId\", [])).toBe(false)\n    })\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW;AACpB,SAASC,cAAc;AAEvB,SAASC,cAAc;AAEvBC,QAAQ,CAAC,gBAAgB,EAAE,MAAM;EAC/B,MAAMC,IAAI,GAAG,IAAIJ,WAAW;EAC1B;EACA,IAAI,EACJ,IAAI,EACJ,eAAe,EACf,kBAAkB,EAClB,cACF,CAAC;EAEDK,EAAE,CAAC,mDAAmD,EAAE,MAAM;IAC5DC,MAAM,CACJJ,cAAc,CACZE,IAAI,EACJH,cAAc,CAACM,eAAe,EAC9B,iBAAiB,EACjB,EACF,CACF,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACd,CAAC,CAAC;;EAEF;EACA;EACAH,EAAE,CAAC,0EAA0E,EAAE,MAAM;IACnFC,MAAM,CACJJ,cAAc,CAACE,IAAI,EAAEH,cAAc,CAACQ,OAAO,EAAE,eAAe,EAAE,CAC5D,cAAc,CACf,CACH,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;IAEZF,MAAM,CACJJ,cAAc,CAACE,IAAI,EAAEH,cAAc,CAACQ,OAAO,EAAE,eAAe,EAAE,CAC5D,gBAAgB,EAChB,qBAAqB,CACtB,CACH,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;EACf,CAAC,CAAC;;EAEF;EACA;EACAH,EAAE,CAAC,+EAA+E,EAAE,MAAM;IACxFC,MAAM,CACJJ,cAAc,CAACE,IAAI,EAAEH,cAAc,CAACQ,OAAO,EAAE,sBAAsB,EAAE,EAAE,CACzE,CAAC,CAACD,IAAI,CAAC,IAAI,CAAC;IAEZF,MAAM,CACJJ,cAAc,CAACE,IAAI,EAAEH,cAAc,CAACQ,OAAO,EAAE,eAAe,EAAE,EAAE,CAClE,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;EACf,CAAC,CAAC;EAEFH,EAAE,CAAC,+CAA+C,EAAE,MAAM;IACxD,MAAMK,MAAM,GAAG,CACbT,cAAc,CAACU,WAAW,EAC1BV,cAAc,CAACW,cAAc,EAC7BX,cAAc,CAACY,iBAAiB,CACjC;IACDH,MAAM,CAACI,OAAO,CAACC,CAAC,IAAI;MAClBT,MAAM,CAACJ,cAAc,CAACE,IAAI,EAAEW,CAAC,EAAE,sBAAsB,EAAE,EAAE,CAAC,CAAC,CAACP,IAAI,CAAC,KAAK,CAAC;IACzE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}