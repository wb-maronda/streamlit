{"version":3,"file":"withFullScreenWrapper.test.js","names":["React","PureComponent","fireEvent","screen","render","withFullScreenWrapper","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TestComponent","constructor","arguments","children","props","label","isFullScreen","getProps","length","undefined","width","expand","jest","fn","collapse","WrappedTestComponent","describe","it","expect","getByTestId","toBeInTheDocument","toHaveStyle","height","getByText","click","NoFullScreenPropComponent","WrappedNoFullScreenPropComponent","displayName","toEqual"],"sources":["../../../../src/components/shared/FullScreenWrapper/withFullScreenWrapper.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent, ReactNode } from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { fireEvent, screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport withFullScreenWrapper from \"./withFullScreenWrapper\"\n\ninterface TestProps {\n  width: number\n  isFullScreen: boolean\n  label: string\n  height?: number\n  expand: () => void\n  collapse: () => void\n}\n\nclass TestComponent extends PureComponent<TestProps> {\n  public render = (): ReactNode => (\n    <>\n      <div>{this.props.label}</div>\n      <div>\n        {this.props.isFullScreen ? \"isFullScreen\" : \"NOT isFullScreen\"}\n      </div>\n    </>\n  )\n}\n\nconst getProps = (props: Partial<TestProps> = {}): TestProps => ({\n  width: 100,\n  isFullScreen: false,\n  expand: jest.fn(),\n  collapse: jest.fn(),\n  label: \"label\",\n  ...props,\n})\n\nconst WrappedTestComponent = withFullScreenWrapper(TestComponent)\n\ndescribe(\"withFullScreenWrapper HOC\", () => {\n  it(\"renders without crashing\", () => {\n    render(<WrappedTestComponent {...getProps()} />)\n\n    expect(screen.getByTestId(\"stFullScreenFrame\")).toBeInTheDocument()\n  })\n\n  it(\"renders a component wrapped with FullScreenWrapper\", () => {\n    const props = getProps()\n    render(<WrappedTestComponent {...props} />)\n\n    expect(screen.getByTestId(\"stFullScreenFrame\")).toHaveStyle(\n      `width: ${props.width}`\n    )\n  })\n\n  it(\"renders FullScreenWrapper with specified height\", () => {\n    const props = getProps({ width: 123, label: \"label\", height: 455 })\n    render(<WrappedTestComponent {...props} />)\n\n    expect(screen.getByTestId(\"stFullScreenFrame\")).toHaveStyle(\n      `width: ${props.width}`\n    )\n    expect(screen.getByTestId(\"stFullScreenFrame\")).toHaveStyle(\n      `height: ${props.height}`\n    )\n  })\n\n  it(\"passes unrelated props to wrapped component\", () => {\n    const props = getProps()\n    render(<WrappedTestComponent {...props} />)\n\n    expect(screen.getByTestId(\"stFullScreenFrame\")).toBeInTheDocument()\n    expect(screen.getByText(`${props.label}`)).toBeInTheDocument()\n  })\n\n  it(\"passes `isFullScreen` to wrapped component\", () => {\n    const props = getProps()\n    render(<WrappedTestComponent {...props} />)\n\n    // by default, isFullScreen == false\n    expect(screen.getByText(\"NOT isFullScreen\")).toBeInTheDocument()\n\n    // zoomIn sets FullScreenWrapper.expanded == true & isFullScreen == true\n    fireEvent.click(screen.getByTestId(\"StyledFullScreenButton\"))\n    expect(screen.getByText(\"isFullScreen\")).toBeInTheDocument()\n  })\n\n  it(\"works if wrapped component does not have `isFullScreen` prop\", () => {\n    // This test exists just to show that a component that does not take\n    // an \"isFullScreen\" property can still be wrapped with the FullScreenWrapper,\n    // and the typechecker won't complain. (The component instance will still\n    // receive \"isFullScreen\" in its props - but it won't \"know\" about it.)\n    class NoFullScreenPropComponent extends PureComponent<\n      Omit<TestProps, \"isFullScreen\">\n    > {\n      public render = (): ReactNode => this.props.label\n    }\n    const WrappedNoFullScreenPropComponent = withFullScreenWrapper(\n      NoFullScreenPropComponent\n    )\n\n    const props = getProps()\n    render(<WrappedNoFullScreenPropComponent {...props} />)\n    expect(screen.getByText(`${props.label}`)).toBeInTheDocument()\n  })\n\n  it(\"defines `displayName`\", () => {\n    expect(WrappedTestComponent.displayName).toEqual(\n      \"withFullScreenWrapper(TestComponent)\"\n    )\n  })\n})\n"],"mappings":"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"}