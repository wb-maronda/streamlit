{"version":3,"file":"AlertContainer.js","names":["React","KIND","Notification","useTheme","StyledAlertContent","jsx","_jsx","Kind","getNotificationKind","kind","ERROR","negative","INFO","info","SUCCESS","positive","WARNING","warning","Error","AlertContainer","_ref","width","children","theme","testid","charAt","toUpperCase","slice","overrides","Body","style","marginTop","spacing","none","marginBottom","marginLeft","marginRight","toString","undefined","border","borderTopRightRadius","radii","default","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","props","className","InnerContainer","lineHeight","lineHeights","alert"],"sources":["../../../../src/components/shared/AlertContainer/AlertContainer.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, ReactNode } from \"react\"\n\nimport { KIND, Notification } from \"baseui/notification\"\nimport { useTheme } from \"@emotion/react\"\n\nimport { EmotionTheme } from \"@streamlit/lib/src/theme\"\n\nimport { StyledAlertContent } from \"./styled-components\"\n\nexport enum Kind {\n  ERROR = \"error\",\n  INFO = \"info\",\n  SUCCESS = \"success\",\n  WARNING = \"warning\",\n}\n\nfunction getNotificationKind(\n  kind: Kind\n):\n  | typeof KIND.negative\n  | typeof KIND.info\n  | typeof KIND.positive\n  | typeof KIND.warning {\n  switch (kind) {\n    case Kind.ERROR:\n      return KIND.negative\n    case Kind.INFO:\n      return KIND.info\n    case Kind.SUCCESS:\n      return KIND.positive\n    case Kind.WARNING:\n      return KIND.warning\n    default:\n      throw new Error(`Unexpected alert type: ${kind}`)\n  }\n}\n\nexport interface AlertContainerProps {\n  width?: number\n  kind: Kind\n  children: ReactNode\n}\n\n/**\n * Provides Base Styles for any Alert Type UI. Used in the following cases:\n *   * Alert is the Streamlit specific alert component that users can use with\n *     any Markdown. Users have API access to generate these.\n *   * ExceptionElement is a special type of alert that formats an exception\n *     with a stack trace provided. Users have API access to generate these.\n *   * ErrorElement is an alert for an internal exception happening in\n *     Streamlit (likely a JS exception happening at runtime). Users do NOT\n *     have API access to generate these.\n */\nexport default function AlertContainer({\n  kind,\n  width,\n  children,\n}: AlertContainerProps): ReactElement {\n  const theme: EmotionTheme = useTheme()\n\n  const testid = kind.charAt(0).toUpperCase() + kind.slice(1)\n  return (\n    <Notification\n      kind={getNotificationKind(kind)}\n      overrides={{\n        Body: {\n          style: {\n            marginTop: theme.spacing.none,\n            marginBottom: theme.spacing.none,\n            marginLeft: theme.spacing.none,\n            marginRight: theme.spacing.none,\n            width: width ? width.toString() : undefined,\n            border: 0,\n            borderTopRightRadius: theme.radii.default,\n            borderBottomRightRadius: theme.radii.default,\n            borderTopLeftRadius: theme.radii.default,\n            borderBottomLeftRadius: theme.radii.default,\n          },\n          props: {\n            \"data-testid\": \"stAlertContainer\",\n            className: `stAlertContainer`,\n          },\n        },\n        InnerContainer: {\n          style: {\n            width: \"100%\",\n            lineHeight: theme.lineHeights.alert,\n          },\n        },\n      }}\n    >\n      <StyledAlertContent data-testid={`stAlertContent${testid}`}>\n        {children}\n      </StyledAlertContent>\n    </Notification>\n  )\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAmC,OAAO;AAEtD,SAASC,IAAI,EAAEC,YAAY,QAAQ,qBAAqB;AACxD,SAASC,QAAQ,QAAQ,gBAAgB;AAIzC,SAASC,kBAAkB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAExD,WAAYC,IAAI;AAKf,WALWA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;EAAJA,IAAI;AAAA,GAAJA,IAAI,KAAJA,IAAI;AAOhB,SAASC,mBAAmBA,CAC1BC,IAAU,EAKY;EACtB,QAAQA,IAAI;IACV,KAAKF,IAAI,CAACG,KAAK;MACb,OAAOT,IAAI,CAACU,QAAQ;IACtB,KAAKJ,IAAI,CAACK,IAAI;MACZ,OAAOX,IAAI,CAACY,IAAI;IAClB,KAAKN,IAAI,CAACO,OAAO;MACf,OAAOb,IAAI,CAACc,QAAQ;IACtB,KAAKR,IAAI,CAACS,OAAO;MACf,OAAOf,IAAI,CAACgB,OAAO;IACrB;MACE,MAAM,IAAIC,KAAK,CAAE,0BAAyBT,IAAK,EAAC,CAAC;EACrD;AACF;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASU,cAAcA,CAAAC,IAAA,EAIA;EAAA,IAJC;IACrCX,IAAI;IACJY,KAAK;IACLC;EACmB,CAAC,GAAAF,IAAA;EACpB,MAAMG,KAAmB,GAAGpB,QAAQ,CAAC,CAAC;EAEtC,MAAMqB,MAAM,GAAGf,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGjB,IAAI,CAACkB,KAAK,CAAC,CAAC,CAAC;EAC3D,oBACErB,IAAA,CAACJ,YAAY;IACXO,IAAI,EAAED,mBAAmB,CAACC,IAAI,CAAE;IAChCmB,SAAS,EAAE;MACTC,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,SAAS,EAAER,KAAK,CAACS,OAAO,CAACC,IAAI;UAC7BC,YAAY,EAAEX,KAAK,CAACS,OAAO,CAACC,IAAI;UAChCE,UAAU,EAAEZ,KAAK,CAACS,OAAO,CAACC,IAAI;UAC9BG,WAAW,EAAEb,KAAK,CAACS,OAAO,CAACC,IAAI;UAC/BZ,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACgB,QAAQ,CAAC,CAAC,GAAGC,SAAS;UAC3CC,MAAM,EAAE,CAAC;UACTC,oBAAoB,EAAEjB,KAAK,CAACkB,KAAK,CAACC,OAAO;UACzCC,uBAAuB,EAAEpB,KAAK,CAACkB,KAAK,CAACC,OAAO;UAC5CE,mBAAmB,EAAErB,KAAK,CAACkB,KAAK,CAACC,OAAO;UACxCG,sBAAsB,EAAEtB,KAAK,CAACkB,KAAK,CAACC;QACtC,CAAC;QACDI,KAAK,EAAE;UACL,aAAa,EAAE,kBAAkB;UACjCC,SAAS,EAAG;QACd;MACF,CAAC;MACDC,cAAc,EAAE;QACdlB,KAAK,EAAE;UACLT,KAAK,EAAE,MAAM;UACb4B,UAAU,EAAE1B,KAAK,CAAC2B,WAAW,CAACC;QAChC;MACF;IACF,CAAE;IAAA7B,QAAA,eAEFhB,IAAA,CAACF,kBAAkB;MAAC,eAAc,iBAAgBoB,MAAO,EAAE;MAAAF,QAAA,EACxDA;IAAQ,CACS;EAAC,CACT,CAAC;AAEnB"}