{"version":3,"file":"AlertContainer.test.js","names":["React","screen","render","AlertContainer","Kind","jsx","_jsx","getProps","propOverrides","arguments","length","undefined","kind","INFO","width","children","describe","it","alertContainer","getByTestId","expect","toBeInTheDocument","toHaveClass","className"],"sources":["../../../../src/components/shared/AlertContainer/AlertContainer.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport { screen } from \"@testing-library/react\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport \"@testing-library/jest-dom\"\n\nimport AlertContainer, { AlertContainerProps, Kind } from \"./AlertContainer\"\n\nconst getProps = (\n  propOverrides: Partial<AlertContainerProps> = {}\n): AlertContainerProps => ({\n  kind: Kind.INFO,\n  width: 100,\n  children: null,\n  ...propOverrides,\n})\n\ndescribe(\"AlertContainer element\", () => {\n  it(\"renders a Notification\", () => {\n    render(<AlertContainer {...getProps()} />)\n    const alertContainer = screen.getByTestId(\"stAlertContainer\")\n    expect(alertContainer).toBeInTheDocument()\n    expect(alertContainer).toHaveClass(\"stAlertContainer\")\n  })\n\n  it(\"renders its children\", () => {\n    render(\n      <AlertContainer {...getProps()}>\n        <div className=\"foo\" data-testid=\"foo\" />\n      </AlertContainer>\n    )\n\n    expect(screen.getByTestId(\"foo\")).toBeInTheDocument()\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,MAAM;AACf,OAAO,2BAA2B;AAElC,OAAOC,cAAc,IAAyBC,IAAI;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAE5E,MAAMC,QAAQ,GAAG,SAAAA,CAAA;EAAA,IACfC,aAA2C,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OACvB;IACzBG,IAAI,EAAER,IAAI,CAACS,IAAI;IACfC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,IAAI;IACd,GAAGP;EACL,CAAC;AAAA,CAAC;AAEFQ,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvCC,EAAE,CAAC,wBAAwB,EAAE,MAAM;IACjCf,MAAM,eAACI,IAAA,CAACH,cAAc;MAAA,GAAKI,QAAQ,CAAC;IAAC,CAAG,CAAC,CAAC;IAC1C,MAAMW,cAAc,GAAGjB,MAAM,CAACkB,WAAW,CAAC,kBAAkB,CAAC;IAC7DC,MAAM,CAACF,cAAc,CAAC,CAACG,iBAAiB,CAAC,CAAC;IAC1CD,MAAM,CAACF,cAAc,CAAC,CAACI,WAAW,CAAC,kBAAkB,CAAC;EACxD,CAAC,CAAC;EAEFL,EAAE,CAAC,sBAAsB,EAAE,MAAM;IAC/Bf,MAAM,eACJI,IAAA,CAACH,cAAc;MAAA,GAAKI,QAAQ,CAAC,CAAC;MAAAQ,QAAA,eAC5BT,IAAA;QAAKiB,SAAS,EAAC,KAAK;QAAC,eAAY;MAAK,CAAE;IAAC,CAC3B,CAClB,CAAC;IAEDH,MAAM,CAACnB,MAAM,CAACkB,WAAW,CAAC,KAAK,CAAC,CAAC,CAACE,iBAAiB,CAAC,CAAC;EACvD,CAAC,CAAC;AACJ,CAAC,CAAC"}