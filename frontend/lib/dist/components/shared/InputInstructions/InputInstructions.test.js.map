{"version":3,"file":"InputInstructions.test.js","names":["React","screen","render","InputInstructions","jsx","_jsx","getProps","props","arguments","length","undefined","dirty","value","inForm","describe","it","expect","getByTestId","textContent","toBeDefined","toBe","type","Object","defineProperty","navigator","writable","maxLength"],"sources":["../../../../src/components/shared/InputInstructions/InputInstructions.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport \"@testing-library/jest-dom\"\nimport { screen } from \"@testing-library/react\"\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport InputInstructions, { Props } from \"./InputInstructions\"\n\nconst getProps = (props: Partial<Props> = {}): Props => ({\n  dirty: true,\n  value: \"asd\",\n  inForm: false,\n  ...props,\n})\n\ndescribe(\"InputInstructions\", () => {\n  const props = getProps()\n\n  it(\"renders without crashing\", () => {\n    render(<InputInstructions {...props} />)\n\n    expect(screen.getByTestId(\"InputInstructions\").textContent).toBeDefined()\n  })\n\n  it(\"should show Enter instructions\", () => {\n    render(<InputInstructions {...props} />)\n\n    expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n      \"Press Enter to apply\"\n    )\n  })\n\n  describe(\"Multiline type\", () => {\n    const props = getProps({\n      type: \"multiline\",\n    })\n\n    it(\"should show Ctrl+Enter instructions\", () => {\n      render(<InputInstructions {...props} />)\n      expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n        \"Press Ctrl+Enter to apply\"\n      )\n    })\n\n    it(\"show ⌘+Enter instructions\", () => {\n      Object.defineProperty(navigator, \"platform\", {\n        value: \"MacIntel\",\n        writable: true,\n      })\n\n      const props = getProps({\n        type: \"multiline\",\n      })\n      render(<InputInstructions {...props} />)\n\n      expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n        \"Press ⌘+Enter to apply\"\n      )\n    })\n\n    it(\"should show instructions for max length\", () => {\n      const props = getProps({\n        type: \"multiline\",\n        maxLength: 3,\n      })\n      render(<InputInstructions {...props} />)\n\n      expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n        \"Press ⌘+Enter to apply3/3\"\n      )\n    })\n  })\n\n  it(\"should show instructions for max length\", () => {\n    const props = getProps({\n      maxLength: 3,\n    })\n    render(<InputInstructions {...props} />)\n\n    expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n      \"Press Enter to apply3/3\"\n    )\n  })\n\n  describe(\"Chat type\", () => {\n    const props = getProps({\n      type: \"chat\",\n    })\n\n    it(\"should not show instructions\", () => {\n      render(<InputInstructions {...props} />)\n      expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\"\")\n    })\n\n    it(\"should show instructions for max length\", () => {\n      const props = getProps({\n        type: \"chat\",\n        maxLength: 3,\n      })\n      render(<InputInstructions {...props} />)\n\n      expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\"3/3\")\n    })\n  })\n\n  describe(\"In Form\", () => {\n    it(\"should show correct instructions to submit form with single line input\", () => {\n      const props = getProps({\n        inForm: true,\n        type: \"single\",\n      })\n      render(<InputInstructions {...props} />)\n\n      expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n        \"Press Enter to submit form\"\n      )\n    })\n  })\n\n  it(\"should show correct instructions to submit form with multiline input\", () => {\n    const props = getProps({\n      inForm: true,\n      type: \"multiline\",\n    })\n    render(<InputInstructions {...props} />)\n\n    expect(screen.getByTestId(\"InputInstructions\").textContent).toBe(\n      \"Press ⌘+Enter to submit form\"\n    )\n  })\n})\n"],"mappings":"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"}