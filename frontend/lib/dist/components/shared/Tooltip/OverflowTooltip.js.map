{"version":3,"file":"OverflowTooltip.js","names":["React","useState","Tooltip","StyledEllipsizedDiv","StyledWrapper","jsx","_jsx","OverflowTooltip","_ref","content","placement","children","inline","style","childRef","useRef","allowTooltip","setAllowTooltip","useEffect","newAllowTooltip","current","offsetWidth","scrollWidth","ref"],"sources":["../../../../src/components/shared/Tooltip/OverflowTooltip.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, ReactNode, useState } from \"react\"\n\nimport Tooltip, { Placement } from \"./Tooltip\"\nimport { StyledEllipsizedDiv, StyledWrapper } from \"./styled-components\"\n\nexport interface OverflowTooltipProps {\n  content: ReactNode\n  placement: Placement\n  children: ReactNode\n  inline?: boolean\n  style?: React.CSSProperties\n}\n\n/**\n * Tooltip that only shows when the children are overflowing (in which case,\n * this also ellipsizes the children).\n */\nfunction OverflowTooltip({\n  content,\n  placement,\n  children,\n  inline,\n  style,\n}: OverflowTooltipProps): ReactElement {\n  const childRef = React.useRef<HTMLDivElement>(null)\n  const [allowTooltip, setAllowTooltip] = useState(false)\n\n  React.useEffect(() => {\n    const newAllowTooltip = childRef?.current\n      ? childRef.current.offsetWidth < childRef.current.scrollWidth\n      : false\n    if (newAllowTooltip !== allowTooltip) {\n      setAllowTooltip(newAllowTooltip)\n    }\n  }, [children, allowTooltip])\n\n  return (\n    <Tooltip\n      content={allowTooltip ? content : \"\"}\n      placement={placement}\n      inline={inline}\n    >\n      <StyledWrapper>\n        <StyledEllipsizedDiv ref={childRef} style={style}>\n          {children}\n        </StyledEllipsizedDiv>\n      </StyledWrapper>\n    </Tooltip>\n  )\n}\n\nexport default OverflowTooltip\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAA6BC,QAAQ,QAAQ,OAAO;AAEhE,OAAOC,OAAO;AACd,SAASC,mBAAmB,EAAEC,aAAa;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAUxE;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAAC,IAAA,EAMe;EAAA,IANd;IACvBC,OAAO;IACPC,SAAS;IACTC,QAAQ;IACRC,MAAM;IACNC;EACoB,CAAC,GAAAL,IAAA;EACrB,MAAMM,QAAQ,GAAGd,KAAK,CAACe,MAAM,CAAiB,IAAI,CAAC;EACnD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEvDD,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpB,MAAMC,eAAe,GAAGL,QAAQ,EAAEM,OAAO,GACrCN,QAAQ,CAACM,OAAO,CAACC,WAAW,GAAGP,QAAQ,CAACM,OAAO,CAACE,WAAW,GAC3D,KAAK;IACT,IAAIH,eAAe,KAAKH,YAAY,EAAE;MACpCC,eAAe,CAACE,eAAe,CAAC;IAClC;EACF,CAAC,EAAE,CAACR,QAAQ,EAAEK,YAAY,CAAC,CAAC;EAE5B,oBACEV,IAAA,CAACJ,OAAO;IACNO,OAAO,EAAEO,YAAY,GAAGP,OAAO,GAAG,EAAG;IACrCC,SAAS,EAAEA,SAAU;IACrBE,MAAM,EAAEA,MAAO;IAAAD,QAAA,eAEfL,IAAA,CAACF,aAAa;MAAAO,QAAA,eACZL,IAAA,CAACH,mBAAmB;QAACoB,GAAG,EAAET,QAAS;QAACD,KAAK,EAAEA,KAAM;QAAAF,QAAA,EAC9CA;MAAQ,CACU;IAAC,CACT;EAAC,CACT,CAAC;AAEd;AAEA,eAAeJ,eAAe"}