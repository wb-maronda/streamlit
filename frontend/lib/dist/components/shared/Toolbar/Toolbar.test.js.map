{"version":3,"file":"Toolbar.test.js","names":["React","screen","fireEvent","Info","render","Toolbar","ToolbarAction","jsx","_jsx","onExpand","jest","fn","onCollapse","getToolbarProps","propOverrides","arguments","length","undefined","isFullScreen","locked","getToolbarActionsProps","onClick","icon","label","show_label","describe","beforeEach","clearAllMocks","it","children","toolbar","getByTestId","expect","toBeInTheDocument","toBeVisible","toolbarButton","getAllByTestId","toHaveLength","not","getAllByRole","click","toHaveBeenCalled","disableFullscreenMode","toolbarButtonIcon","infoLabel","getByText","queryByTestId","toBeNull","onClickMock","getByRole"],"sources":["../../../../src/components/shared/Toolbar/Toolbar.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport { screen, fireEvent } from \"@testing-library/react\"\nimport { Info } from \"@emotion-icons/material-outlined\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\n\nimport Toolbar, {\n  ToolbarAction,\n  ToolbarProps,\n  ToolbarActionProps,\n} from \"./Toolbar\"\n\nconst onExpand = jest.fn()\nconst onCollapse = jest.fn()\n\nconst getToolbarProps = (\n  propOverrides: Partial<ToolbarProps> = {}\n): ToolbarProps => ({\n  onExpand: onExpand,\n  onCollapse: onCollapse,\n  isFullScreen: false,\n  locked: true,\n  ...propOverrides,\n})\n\nconst getToolbarActionsProps = (\n  propOverrides: Partial<ToolbarActionProps> = {}\n): ToolbarActionProps => ({\n  onClick: jest.fn(),\n  icon: Info,\n  label: \"info\",\n  show_label: false,\n  ...propOverrides,\n})\n\ndescribe(\"Toolbar element\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it(\"renders a Toolbar\", async () => {\n    render(\n      <Toolbar {...getToolbarProps()}>\n        <ToolbarAction {...getToolbarActionsProps()} />\n      </Toolbar>\n    )\n\n    const toolbar = screen.getByTestId(\"stElementToolbar\")\n    expect(toolbar).toBeInTheDocument()\n    expect(toolbar).toBeVisible()\n\n    // Check if toolbar buttons are rendered:\n    const toolbarButton = screen.getAllByTestId(\"stElementToolbarButton\")\n    expect(toolbarButton).toHaveLength(2)\n  })\n\n  it(\"doesn't show toolbar if not locked\", async () => {\n    render(\n      <Toolbar {...getToolbarProps({ locked: false })}>\n        <ToolbarAction {...getToolbarActionsProps()} />\n      </Toolbar>\n    )\n\n    const toolbar = screen.getByTestId(\"stElementToolbar\")\n    expect(toolbar).toBeInTheDocument()\n    // Should not be visible\n    expect(toolbar).not.toBeVisible()\n  })\n\n  it(\"allows expanding into fullscreen mode\", async () => {\n    render(\n      <Toolbar {...getToolbarProps()}>\n        <ToolbarAction {...getToolbarActionsProps()} />\n      </Toolbar>\n    )\n\n    const toolbar = screen.getByTestId(\"stElementToolbar\")\n    expect(toolbar).toBeInTheDocument()\n    // Toolbar is always visible in fullscreen:\n    expect(toolbar).toBeVisible()\n\n    const toolbarButton = screen.getAllByRole(\"button\")\n    expect(toolbarButton).toHaveLength(2)\n    // Clicking the second button should close the fullscreen mode\n    fireEvent.click(toolbarButton[1])\n\n    // Check that onCollapse was clicked\n    expect(onExpand).toHaveBeenCalled()\n  })\n\n  it(\"adapts to fullscreen mode\", async () => {\n    render(\n      <Toolbar {...getToolbarProps({ locked: false, isFullScreen: true })}>\n        <ToolbarAction {...getToolbarActionsProps()} />\n      </Toolbar>\n    )\n\n    const toolbar = screen.getByTestId(\"stElementToolbar\")\n    expect(toolbar).toBeInTheDocument()\n    // Toolbar is always visible in fullscreen:\n    expect(toolbar).toBeVisible()\n\n    const toolbarButton = screen.getAllByRole(\"button\")\n    expect(toolbarButton).toHaveLength(2)\n    // Clicking the second button should close the fullscreen mode\n    fireEvent.click(toolbarButton[1])\n\n    // Check that onCollapse was clicked\n    expect(onCollapse).toHaveBeenCalled()\n  })\n\n  it(\"deactivates fullscreen mode via props\", async () => {\n    render(\n      <Toolbar\n        {...getToolbarProps({ locked: false, disableFullscreenMode: true })}\n      >\n        <ToolbarAction {...getToolbarActionsProps()} />\n      </Toolbar>\n    )\n\n    // Check that there is only one toolbar button.\n    // The fullscreen actions should not be visible.\n    const toolbarButton = screen.getAllByTestId(\"stElementToolbarButton\")\n    expect(toolbarButton).toHaveLength(1)\n  })\n})\n\ndescribe(\"ToolbarAction Button element\", () => {\n  it(\"renders correctly\", async () => {\n    render(<ToolbarAction {...getToolbarActionsProps()} />)\n    // Check if toolbar button is rendered:\n    const toolbarButton = screen.getByTestId(\"stElementToolbarButton\")\n    expect(toolbarButton).toBeInTheDocument()\n\n    // Check if the toolbar icon is shown:\n    const toolbarButtonIcon = screen.getByTestId(\"stElementToolbarButtonIcon\")\n    expect(toolbarButtonIcon).toBeInTheDocument()\n  })\n\n  it(\"shows a label if show_labe=true\", async () => {\n    render(<ToolbarAction {...getToolbarActionsProps({ show_label: true })} />)\n    // Check that the info label is visible\n    const infoLabel = screen.getByText(\"info\")\n    expect(infoLabel).toBeVisible()\n  })\n\n  it(\"doesn't show an icon if icon=undefined\", async () => {\n    render(\n      <ToolbarAction\n        {...getToolbarActionsProps({ show_label: true, icon: undefined })}\n      />\n    )\n    // Check that the info label is visible\n    const infoLabel = screen.getByText(\"info\")\n    expect(infoLabel).toBeVisible()\n\n    // Check if the toolbar icon is not shown:\n    const toolbarButtonIcon = screen.queryByTestId(\n      \"stElementToolbarButtonIcon\"\n    )\n    expect(toolbarButtonIcon).toBeNull()\n  })\n\n  it(\"calls callback on click\", async () => {\n    const onClickMock = jest.fn()\n\n    render(\n      <ToolbarAction {...getToolbarActionsProps({ onClick: onClickMock })} />\n    )\n    // Check if toolbar button is rendered:\n    const toolbarButton = screen.getByRole(\"button\")\n    expect(toolbarButton).toBeInTheDocument()\n\n    fireEvent.click(toolbarButton)\n\n    // Check that onClick callback was clicked\n    expect(onClickMock).toHaveBeenCalled()\n  })\n})\n"],"mappings":"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"}