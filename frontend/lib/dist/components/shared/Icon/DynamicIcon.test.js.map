{"version":3,"file":"DynamicIcon.test.js","names":["React","render","screen","DynamicIcon","jsx","_jsx","getProps","props","arguments","length","undefined","iconValue","describe","it","testId","getByTestId","icon","getByText","expect","toBeInTheDocument","textContent","toEqual"],"sources":["../../../../src/components/shared/Icon/DynamicIcon.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\"\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport { screen } from \"@testing-library/react\"\nimport \"@testing-library/jest-dom\"\n\nimport { DynamicIcon, DynamicIconProps } from \"./DynamicIcon\"\n\nconst getProps = (\n  props: Partial<DynamicIconProps> = {}\n): DynamicIconProps => ({\n  iconValue: \":material/flag:\",\n  ...props,\n})\n\ndescribe(\"Dynamic icon\", () => {\n  it(\"renders without crashing with Material icon\", () => {\n    const props = getProps({ iconValue: \":material/add_circle:\" })\n    render(<DynamicIcon {...props} />)\n    const testId = screen.getByTestId(\"stIconMaterial\")\n    const icon = screen.getByText(\"add_circle\")\n\n    expect(testId).toBeInTheDocument()\n    expect(icon).toBeInTheDocument()\n    expect(testId.textContent).toEqual(icon.textContent)\n  })\n\n  it(\"renders without crashing with Emoji icon\", () => {\n    const props = getProps({ iconValue: \"⛰️\" })\n    render(<DynamicIcon {...props} />)\n    const testId = screen.getByTestId(\"stIconEmoji\")\n    const icon = screen.getByText(\"⛰️\")\n\n    expect(testId).toBeInTheDocument()\n    expect(icon).toBeInTheDocument()\n    expect(testId.textContent).toEqual(icon.textContent)\n  })\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM;AACf,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAO,2BAA2B;AAElC,SAASC,WAAW;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAE7D,MAAMC,QAAQ,GAAG,SAAAA,CAAA;EAAA,IACfC,KAAgC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OACf;IACtBG,SAAS,EAAE,iBAAiB;IAC5B,GAAGJ;EACL,CAAC;AAAA,CAAC;AAEFK,QAAQ,CAAC,cAAc,EAAE,MAAM;EAC7BC,EAAE,CAAC,6CAA6C,EAAE,MAAM;IACtD,MAAMN,KAAK,GAAGD,QAAQ,CAAC;MAAEK,SAAS,EAAE;IAAwB,CAAC,CAAC;IAC9DV,MAAM,eAACI,IAAA,CAACF,WAAW;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAClC,MAAMO,MAAM,GAAGZ,MAAM,CAACa,WAAW,CAAC,gBAAgB,CAAC;IACnD,MAAMC,IAAI,GAAGd,MAAM,CAACe,SAAS,CAAC,YAAY,CAAC;IAE3CC,MAAM,CAACJ,MAAM,CAAC,CAACK,iBAAiB,CAAC,CAAC;IAClCD,MAAM,CAACF,IAAI,CAAC,CAACG,iBAAiB,CAAC,CAAC;IAChCD,MAAM,CAACJ,MAAM,CAACM,WAAW,CAAC,CAACC,OAAO,CAACL,IAAI,CAACI,WAAW,CAAC;EACtD,CAAC,CAAC;EAEFP,EAAE,CAAC,0CAA0C,EAAE,MAAM;IACnD,MAAMN,KAAK,GAAGD,QAAQ,CAAC;MAAEK,SAAS,EAAE;IAAK,CAAC,CAAC;IAC3CV,MAAM,eAACI,IAAA,CAACF,WAAW;MAAA,GAAKI;IAAK,CAAG,CAAC,CAAC;IAClC,MAAMO,MAAM,GAAGZ,MAAM,CAACa,WAAW,CAAC,aAAa,CAAC;IAChD,MAAMC,IAAI,GAAGd,MAAM,CAACe,SAAS,CAAC,IAAI,CAAC;IAEnCC,MAAM,CAACJ,MAAM,CAAC,CAACK,iBAAiB,CAAC,CAAC;IAClCD,MAAM,CAACF,IAAI,CAAC,CAACG,iBAAiB,CAAC,CAAC;IAChCD,MAAM,CAACJ,MAAM,CAACM,WAAW,CAAC,CAACC,OAAO,CAACL,IAAI,CAACI,WAAW,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC,CAAC"}