{"version":3,"file":"StreamlitMarkdown.test.js","names":["React","ReactMarkdown","cleanup","screen","transparentize","render","IsSidebarContext","colors","IsDialogContext","StreamlitMarkdown","createAnchorFromText","CustomCodeTag","CustomPreTag","LinkWithTargetBlank","jsx","_jsx","getMarkdownElement","body","components","a","children","describe","it","cases","forEach","_ref","s","want","expect","toEqual","getByText","toHaveAttribute","link","not","HTMLAnchorElement","toBe","element","exact","toHaveTextContent","source","Provider","value","allowHTML","getByTestId","toBeInTheDocument","queryByTestId","h1","getByRole","isCaption","caption","validCases","input","tag","expected","test","each","_ref2","isLabel","markdownText","expectedTag","nodeName","toLowerCase","table","tableText","horizontalRule","invalidCases","_ref3","image","queryByAltText","disableLinks","isToast","textTag","toHaveStyle","largerLabel","boldLabel","colorMapping","Map","red80","blue80","green90","purple80","orange100","gray80","style","color","markdown","tagName","redbg","orangebg","yellow70","yellowbg","greenbg","green70","bluebg","blue70","violetbg","purple70","purplebg","purple90","graybg","gray70","getCustomCodeTagProps","props","arguments","length","undefined","node","type","stCode","className","innerHTML","indexOf","copyButton","getByTitle","toBeNull","queryByRole","inline","baseElement","preTag"],"sources":["../../../../src/components/shared/StreamlitMarkdown/StreamlitMarkdown.test.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport \"@testing-library/jest-dom\"\nimport ReactMarkdown from \"react-markdown\"\nimport { cleanup, screen } from \"@testing-library/react\"\nimport { transparentize } from \"color2k\"\n\nimport { render } from \"@streamlit/lib/src/test_util\"\nimport IsSidebarContext from \"@streamlit/lib/src/components/core/IsSidebarContext\"\nimport { colors } from \"@streamlit/lib/src/theme/primitives/colors\"\nimport IsDialogContext from \"@streamlit/lib/src/components/core/IsDialogContext\"\n\nimport StreamlitMarkdown, {\n  createAnchorFromText,\n  CustomCodeTag,\n  CustomCodeTagProps,\n  CustomPreTag,\n  LinkWithTargetBlank,\n} from \"./StreamlitMarkdown\"\n\n// Fixture Generator\nconst getMarkdownElement = (body: string): ReactElement => {\n  const components = {\n    a: LinkWithTargetBlank,\n  }\n  return <ReactMarkdown components={components}>{body}</ReactMarkdown>\n}\n\ndescribe(\"createAnchorFromText\", () => {\n  it(\"generates slugs correctly\", () => {\n    const cases = [\n      [\"some header\", \"some-header\"],\n      [\"some -24$35-9824  header\", \"some-24-35-9824-header\"],\n      [\"blah___blah___blah\", \"blah-blah-blah\"],\n    ]\n\n    cases.forEach(([s, want]) => {\n      expect(createAnchorFromText(s)).toEqual(want)\n    })\n  })\n})\n\ndescribe(\"linkReference\", () => {\n  it(\"renders a link with _blank target\", () => {\n    const body = \"Some random URL like [Streamlit](https://streamlit.io/)\"\n    render(getMarkdownElement(body))\n    expect(screen.getByText(\"Streamlit\")).toHaveAttribute(\n      \"href\",\n      \"https://streamlit.io/\"\n    )\n    expect(screen.getByText(\"Streamlit\")).toHaveAttribute(\"target\", \"_blank\")\n  })\n\n  it(\"renders a link without title\", () => {\n    const body =\n      \"Everybody loves [The Internet Archive](https://archive.org/).\"\n    render(getMarkdownElement(body))\n    const link = screen.getByText(\"The Internet Archive\")\n    expect(link).toHaveAttribute(\"href\", \"https://archive.org/\")\n    expect(link).not.toHaveAttribute(\"title\")\n  })\n\n  it(\"renders a link containing a title\", () => {\n    const body =\n      \"My favorite search engine is \" +\n      '[Duck Duck Go](https://duckduckgo.com/ \"The best search engine for privacy\").'\n    render(getMarkdownElement(body))\n    const link = screen.getByText(\"Duck Duck Go\")\n    expect(link).toHaveAttribute(\"href\", \"https://duckduckgo.com/\")\n    expect(link).toHaveAttribute(\"title\", \"The best search engine for privacy\")\n  })\n\n  it(\"renders a link containing parentheses\", () => {\n    const body =\n      \"Here's a link containing parentheses [Yikes](http://msdn.microsoft.com/en-us/library/aa752574(VS.85).aspx)\"\n    render(getMarkdownElement(body))\n    const link = screen.getByText(\"Yikes\")\n    expect(link instanceof HTMLAnchorElement).toBe(true)\n    expect(link).toHaveAttribute(\n      \"href\",\n      \"http://msdn.microsoft.com/en-us/library/aa752574(VS.85).aspx\"\n    )\n  })\n\n  it(\"does not render a link if only [text] and no (href)\", () => {\n    const body = \"Don't convert to a link if only [text] and missing (href)\"\n    render(getMarkdownElement(body))\n    const element = screen.getByText(\"text\", { exact: false })\n    expect(element).toHaveTextContent(\n      \"Don't convert to a link if only [text] and missing (href)\"\n    )\n    expect(element instanceof HTMLAnchorElement).toBe(false)\n  })\n})\n\ndescribe(\"StreamlitMarkdown\", () => {\n  it(\"renders header anchors when isInSidebar is false\", () => {\n    const source = \"# header\"\n    render(\n      <IsSidebarContext.Provider value={false}>\n        <StreamlitMarkdown source={source} allowHTML={false} />\n      </IsSidebarContext.Provider>\n    )\n    expect(\n      screen.getByTestId(\"stHeadingWithActionElements\")\n    ).toBeInTheDocument()\n  })\n\n  it(\"renders header anchors when isInDialog is false\", () => {\n    const source = \"# header\"\n    render(\n      <IsDialogContext.Provider value={false}>\n        <StreamlitMarkdown source={source} allowHTML={false} />\n      </IsDialogContext.Provider>\n    )\n    expect(\n      screen.getByTestId(\"stHeadingWithActionElements\")\n    ).toBeInTheDocument()\n  })\n\n  it(\"passes props properly\", () => {\n    const source =\n      \"<a class='nav_item' href='//0.0.0.0:8501/?p=some_page' target='_self'>Some Page</a>\"\n    render(<StreamlitMarkdown source={source} allowHTML={true} />)\n    expect(screen.getByText(\"Some Page\")).toHaveAttribute(\n      \"href\",\n      \"//0.0.0.0:8501/?p=some_page\"\n    )\n    expect(screen.getByText(\"Some Page\")).toHaveAttribute(\"target\", \"_self\")\n  })\n\n  it(\"doesn't render header anchors when isInSidebar is true\", () => {\n    const source = \"# header\"\n    render(\n      <IsSidebarContext.Provider value={true}>\n        <StreamlitMarkdown source={source} allowHTML={false} />\n      </IsSidebarContext.Provider>\n    )\n    expect(\n      screen.queryByTestId(\"stHeadingWithActionElements\")\n    ).not.toBeInTheDocument()\n  })\n\n  it(\"doesn't render header anchors when isInDialog is true\", () => {\n    const source = \"# header\"\n    render(\n      <IsDialogContext.Provider value={true}>\n        <StreamlitMarkdown source={source} allowHTML={false} />\n      </IsDialogContext.Provider>\n    )\n    expect(\n      screen.queryByTestId(\"stHeadingWithActionElements\")\n    ).not.toBeInTheDocument()\n  })\n\n  it(\"propagates header attributes to custom header\", () => {\n    const source = '<h1 data-test=\"lol\">alsdkjhflaf</h1>'\n    render(<StreamlitMarkdown source={source} allowHTML />)\n    const h1 = screen.getByRole(\"heading\")\n    expect(h1).toHaveAttribute(\"data-test\", \"lol\")\n  })\n\n  it(\"displays captions correctly\", () => {\n    const source = \"hello this is a caption\"\n    render(<StreamlitMarkdown allowHTML={false} source={source} isCaption />)\n    const caption = screen.getByTestId(\"stCaptionContainer\")\n    expect(caption).toHaveTextContent(\"hello this is a caption\")\n  })\n\n  // Valid Markdown - italics, bold, strikethrough, code, links, emojis, shortcodes\n  const validCases = [\n    { input: \"*Italicized Text*\", tag: \"em\", expected: \"Italicized Text\" },\n    { input: \"**Bold Text**\", tag: \"strong\", expected: \"Bold Text\" },\n    {\n      input: \"~Strikethough Text~\",\n      tag: \"del\",\n      expected: \"Strikethough Text\",\n    },\n    { input: \"`Code Block`\", tag: \"code\", expected: \"Code Block\" },\n    { input: \"[Link Text](www.example.com)\", tag: \"a\", expected: \"Link Text\" },\n    { input: \"🐶\", tag: \"p\", expected: \"🐶\" },\n    { input: \":joy:\", tag: \"p\", expected: \"😂\" },\n    { input: \":material/search:\", tag: \"span\", expected: \"search\" },\n  ]\n\n  test.each(validCases)(\n    \"renders valid markdown when isLabel is true - $tag\",\n    ({ input, tag, expected }) => {\n      render(<StreamlitMarkdown source={input} allowHTML={false} isLabel />)\n      const markdownText = screen.getByText(expected)\n      expect(markdownText).toBeInTheDocument()\n\n      const expectedTag = markdownText.nodeName.toLowerCase()\n      expect(expectedTag).toEqual(tag)\n\n      // Removes rendered StreamlitMarkdown component before next case run\n      cleanup()\n    }\n  )\n\n  // Invalid Markdown - images, table elements, headings, unordered/ordered lists, task lists, horizontal rules, & blockquotes\n  const table = `| Syntax | Description |\n  | ----------- | ----------- |\n  | Header      | Title       |\n  | Paragraph   | Text        |`\n  const tableText = \"Syntax Description Header Title Paragraph Text\"\n  const horizontalRule = `\n\n  ---\n\n  Horizontal rule\n  `\n\n  const invalidCases = [\n    { input: table, tag: \"table\", expected: tableText },\n    { input: table, tag: \"thead\", expected: tableText },\n    { input: table, tag: \"tbody\", expected: tableText },\n    { input: table, tag: \"tr\", expected: tableText },\n    { input: table, tag: \"th\", expected: tableText },\n    { input: table, tag: \"td\", expected: tableText },\n    { input: \"# Heading 1\", tag: \"h1\", expected: \"Heading 1\" },\n    { input: \"## Heading 2\", tag: \"h2\", expected: \"Heading 2\" },\n    { input: \"### Heading 3\", tag: \"h3\", expected: \"Heading 3\" },\n    { input: \"#### Heading 4\", tag: \"h4\", expected: \"Heading 4\" },\n    { input: \"##### Heading 5\", tag: \"h5\", expected: \"Heading 5\" },\n    { input: \"###### Heading 6\", tag: \"h6\", expected: \"Heading 6\" },\n    { input: \"- List Item 1\", tag: \"ul\", expected: \"List Item 1\" },\n    { input: \"- List Item 1\", tag: \"li\", expected: \"List Item 1\" },\n    { input: \"1. List Item 1\", tag: \"ol\", expected: \"List Item 1\" },\n    { input: \"1. List Item 1\", tag: \"li\", expected: \"List Item 1\" },\n    {\n      input: \"- [ ] Task List Item 1\",\n      tag: \"input\",\n      expected: \"Task List Item 1\",\n    },\n    { input: horizontalRule, tag: \"hr\", expected: \"Horizontal rule\" },\n    { input: \"> Blockquote\", tag: \"blockquote\", expected: \"Blockquote\" },\n  ]\n\n  test.each(invalidCases)(\n    \"does NOT render invalid markdown when isLabel is true - $tag\",\n    ({ input, tag, expected }) => {\n      render(<StreamlitMarkdown source={input} allowHTML={false} isLabel />)\n      const markdownText = screen.getByText(expected)\n      expect(markdownText).toBeInTheDocument()\n\n      const expectedTag = markdownText.nodeName.toLowerCase()\n      expect(expectedTag).not.toEqual(tag)\n\n      // Removes rendered StreamlitMarkdown component before next case run\n      cleanup()\n    }\n  )\n\n  it(\"doesn't render images when isLabel is true\", () => {\n    const source =\n      \"![Image Text](https://dictionary.cambridge.org/us/images/thumb/corgi_noun_002_08554.jpg?version=5.0.297)\"\n\n    render(<StreamlitMarkdown source={source} allowHTML={false} isLabel />)\n    const image = screen.queryByAltText(\"Image Text\")\n    expect(image).not.toBeInTheDocument()\n  })\n\n  it(\"doesn't render links when disableLinks is true\", () => {\n    // Valid markdown further restricted with buttons to eliminate links\n    const source = \"[Link text](www.example.com)\"\n    render(\n      <StreamlitMarkdown\n        source={source}\n        allowHTML={false}\n        isLabel\n        disableLinks\n      />\n    )\n    const tag = screen.getByText(\"Link text\")\n    expect(tag instanceof HTMLAnchorElement).toBe(false)\n  })\n\n  it(\"renders smaller text sizing when isToast is true\", () => {\n    const source = \"Here is some toast text\"\n    render(<StreamlitMarkdown source={source} allowHTML={false} isToast />)\n\n    const textTag = screen.getByText(\"Here is some toast text\")\n    expect(textTag).toHaveStyle(\"font-size: 14px\")\n  })\n\n  it(\"renders regular text sizing when largerLabel is true\", () => {\n    const source = \"Here is some checkbox label text\"\n    render(\n      <StreamlitMarkdown\n        source={source}\n        allowHTML={false}\n        isLabel\n        largerLabel\n      />\n    )\n\n    const textTag = screen.getByText(\"Here is some checkbox label text\")\n    expect(textTag).toHaveStyle(\"font-size: inherit\")\n  })\n\n  it(\"renders bold label text when boldLabel is true\", () => {\n    const source = \"Here is some checkbox label text\"\n    render(\n      <StreamlitMarkdown\n        source={source}\n        allowHTML={false}\n        isLabel\n        boldLabel\n        largerLabel\n      />\n    )\n\n    const textTag = screen.getByText(\"Here is some checkbox label text\")\n    expect(textTag).toHaveStyle(\"font-weight: 600\")\n  })\n\n  it(\"colours text properly\", () => {\n    const colorMapping = new Map([\n      [\"red\", colors.red80],\n      [\"blue\", colors.blue80],\n      [\"green\", colors.green90],\n      [\"violet\", colors.purple80],\n      [\"orange\", colors.orange100],\n      [\"gray\", colors.gray80],\n      [\"grey\", colors.gray80],\n      [\"rainbow\", \"transparent\"],\n    ])\n\n    colorMapping.forEach(function (style, color) {\n      const source = `:${color}[text]`\n      render(<StreamlitMarkdown source={source} allowHTML={false} />)\n      const markdown = screen.getByText(\"text\")\n      const tagName = markdown.nodeName.toLowerCase()\n      expect(tagName).toBe(\"span\")\n      expect(markdown).toHaveStyle(`color: ${style}`)\n\n      // Removes rendered StreamlitMarkdown component before next case run\n      cleanup()\n    })\n  })\n\n  it(\"properly adds custom material icon\", () => {\n    const source = `:material/search: Icon`\n    render(<StreamlitMarkdown source={source} allowHTML={false} />)\n    const markdown = screen.getByText(\"search\")\n    const tagName = markdown.nodeName.toLowerCase()\n    expect(tagName).toBe(\"span\")\n    expect(markdown).toHaveStyle(`font-family: Material Symbols Rounded`)\n    expect(markdown).toHaveStyle(`user-select: none`)\n    expect(markdown).toHaveStyle(`vertical-align: bottom`)\n    expect(markdown).toHaveStyle(`font-weight: normal`)\n  })\n\n  it(\"does not remove unknown directive\", () => {\n    const source = `test :foo test:test :`\n    render(<StreamlitMarkdown source={source} allowHTML={false} />)\n    const markdown = screen.getByText(\"test :foo test:test :\")\n    expect(markdown).toBeInTheDocument()\n  })\n\n  it(\"properly adds background colors\", () => {\n    const redbg = transparentize(colors.red80, 0.9)\n    const orangebg = transparentize(colors.yellow70, 0.9)\n    const yellowbg = transparentize(colors.yellow70, 0.9)\n    const greenbg = transparentize(colors.green70, 0.9)\n    const bluebg = transparentize(colors.blue70, 0.9)\n    const violetbg = transparentize(colors.purple70, 0.9)\n    const purplebg = transparentize(colors.purple90, 0.9)\n    const graybg = transparentize(colors.gray70, 0.9)\n\n    const colorMapping = new Map([\n      [\"red\", redbg],\n      [\"blue\", bluebg],\n      [\"green\", greenbg],\n      [\"violet\", violetbg],\n      [\"orange\", orangebg],\n      [\"gray\", graybg],\n      [\"grey\", graybg],\n      [\n        \"rainbow\",\n        `linear-gradient(to right, ${redbg}, ${orangebg}, ${yellowbg}, ${greenbg}, ${bluebg}, ${violetbg}, ${purplebg})`,\n      ],\n    ])\n\n    colorMapping.forEach(function (style, color) {\n      const source = `:${color}-background[text]`\n      render(<StreamlitMarkdown source={source} allowHTML={false} />)\n      const markdown = screen.getByText(\"text\")\n      const tagName = markdown.nodeName.toLowerCase()\n      expect(tagName).toBe(\"span\")\n      expect(markdown).toHaveStyle(`background-color: ${style}`)\n\n      // Removes rendered StreamlitMarkdown component before next case run\n      cleanup()\n    })\n  })\n})\n\nconst getCustomCodeTagProps = (\n  props: Partial<CustomCodeTagProps> = {}\n): CustomCodeTagProps => ({\n  children: [\n    `import streamlit as st\n\nst.write(\"Hello\")\n`,\n  ],\n  node: { type: \"element\", tagName: \"tagName\", children: [] },\n  ...props,\n})\n\ndescribe(\"CustomCodeTag Element\", () => {\n  it(\"should render without crashing\", () => {\n    const props = getCustomCodeTagProps()\n    render(<CustomCodeTag {...props} />)\n\n    const stCode = screen.getByTestId(\"stCode\")\n    expect(stCode).toBeInTheDocument()\n  })\n\n  it(\"should render as plaintext\", () => {\n    const props = getCustomCodeTagProps({ className: \"language-plaintext\" })\n    render(<CustomCodeTag {...props} />)\n\n    const stCode = screen.getByTestId(\"stCode\")\n    expect(stCode.innerHTML.indexOf(`class=\"language-plaintext\"`)).not.toBe(-1)\n  })\n\n  it(\"should render copy button when code block has content\", () => {\n    const props = getCustomCodeTagProps({\n      children: [\"i am not empty\"],\n    })\n    render(<CustomCodeTag {...props} />)\n    const copyButton = screen.getByTitle(\"Copy to clipboard\")\n\n    expect(copyButton).not.toBeNull()\n  })\n\n  it(\"should not render copy button when code block is empty\", () => {\n    const props = getCustomCodeTagProps({\n      children: [\"\"],\n    })\n    render(<CustomCodeTag {...props} />)\n    // queryBy returns null vs. error\n    const copyButton = screen.queryByRole(\"button\") // eslint-disable-line testing-library/prefer-presence-queries\n\n    expect(copyButton).toBeNull()\n  })\n\n  it(\"should render inline\", () => {\n    const props = getCustomCodeTagProps({ inline: true })\n    const { baseElement } = render(<CustomCodeTag {...props} />)\n    expect(baseElement.innerHTML).toBe(\n      \"<div><code>\" +\n        \"import streamlit as st\\n\\n\" +\n        'st.write(\"Hello\")\\n' +\n        \"</code></div>\"\n    )\n  })\n})\n\ndescribe(\"CustomPreTag\", () => {\n  it(\"should render without crashing\", () => {\n    const props = getCustomCodeTagProps()\n    render(<CustomPreTag {...props} />)\n\n    const preTag = screen.getByTestId(\"stMarkdownPre\")\n    const tagName = preTag.nodeName.toLowerCase()\n\n    expect(preTag).toBeInTheDocument()\n    expect(tagName).toBe(\"div\")\n    expect(preTag).toHaveTextContent(\n      'import streamlit as st st.write(\"Hello\")'\n    )\n  })\n})\n"],"mappings":"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"}