{"version":3,"file":"types.js","names":[],"sources":["../../src/hostComm/types.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IAppPage, ICustomThemeConfig } from \"@streamlit/lib/src/proto\"\nimport { ExportedTheme } from \"@streamlit/lib/src/theme\"\nimport { ScriptRunState } from \"@streamlit/lib/src/ScriptRunState\"\nimport { LibConfig } from \"@streamlit/lib/src/components/core/LibContext\"\nimport { PresetThemeName } from \"@streamlit/lib/src/theme/types\"\n\nexport type DeployedAppMetadata = {\n  hostedAt?: string\n  creatorId?: string\n  owner?: string\n  branch?: string\n  repo?: string\n  mainModule?: string\n  isOwner?: boolean\n}\n\nexport type IToolbarItem = {\n  borderless?: boolean\n  icon?: string\n  key: string\n  label?: string\n}\n\nexport type IMenuItem =\n  | {\n      type: \"text\"\n      label: string\n      key: string\n    }\n  | {\n      type: \"separator\"\n    }\n\nexport type IHostToGuestMessage = {\n  stCommVersion: number\n} & (\n  | {\n      type: \"CLOSE_MODALS\"\n    }\n  | {\n      type: \"REQUEST_PAGE_CHANGE\"\n      pageScriptHash: string\n    }\n  | {\n      type: \"SET_INPUTS_DISABLED\"\n      disabled: boolean\n    }\n  | {\n      type: \"SET_AUTH_TOKEN\"\n      authToken: string\n      jwtHeaderName?: string\n      jwtHeaderValue?: string\n    }\n  | {\n      type: \"SET_IS_OWNER\"\n      isOwner: boolean\n    }\n  | {\n      type: \"SET_MENU_ITEMS\"\n      items: IMenuItem[]\n    }\n  | {\n      type: \"SET_METADATA\"\n      metadata: DeployedAppMetadata\n    }\n  | {\n      type: \"SET_PAGE_LINK_BASE_URL\"\n      pageLinkBaseUrl: string\n    }\n  | {\n      type: \"SET_SIDEBAR_CHEVRON_DOWNSHIFT\"\n      sidebarChevronDownshift: number\n    }\n  | {\n      type: \"SET_SIDEBAR_NAV_VISIBILITY\"\n      hidden: boolean\n    }\n  | {\n      type: \"SET_TOOLBAR_ITEMS\"\n      items: IToolbarItem[]\n    }\n  | {\n      type: \"UPDATE_FROM_QUERY_PARAMS\"\n      queryParams: string\n    }\n  | {\n      type: \"UPDATE_HASH\"\n      hash: string\n    }\n  | {\n      type: \"STOP_SCRIPT\"\n    }\n  | {\n      type: \"RERUN_SCRIPT\"\n    }\n  | {\n      type: \"CLEAR_CACHE\"\n    }\n  | {\n      type: \"SET_CUSTOM_THEME_CONFIG\"\n      themeName?: PresetThemeName\n      // TODO: Consider removing themeInfo once stakeholders no longer use it\n      themeInfo?: ICustomThemeConfig\n    }\n  | {\n      type: \"SEND_APP_HEARTBEAT\"\n    }\n  | {\n      type: \"RESTART_WEBSOCKET_CONNECTION\"\n    }\n  | {\n      type: \"TERMINATE_WEBSOCKET_CONNECTION\"\n    }\n)\n\nexport type IGuestToHostMessage =\n  | {\n      type: \"GUEST_READY\"\n    }\n  | {\n      type: \"MENU_ITEM_CALLBACK\"\n      key: string\n    }\n  | {\n      type: \"TOOLBAR_ITEM_CALLBACK\"\n      key: string\n    }\n  | {\n      type: \"SET_APP_PAGES\"\n      appPages: IAppPage[]\n    }\n  | {\n      type: \"SET_CURRENT_PAGE_NAME\"\n      currentPageName: string\n      currentPageScriptHash: string\n    }\n  | {\n      type: \"SET_PAGE_FAVICON\"\n      favicon: string\n    }\n  | {\n      type: \"SET_PAGE_TITLE\"\n      title: string\n    }\n  | {\n      type: \"SET_QUERY_PARAM\"\n      queryParams: string\n    }\n  | {\n      type: \"SET_THEME_CONFIG\"\n      themeInfo: ExportedTheme\n    }\n  | {\n      type: \"UPDATE_HASH\"\n      hash: string\n    }\n  | {\n      type: \"SCRIPT_RUN_STATE_CHANGED\"\n      scriptRunState: ScriptRunState\n    }\n  | {\n      type: \"CUSTOM_PARENT_MESSAGE\"\n      message: string\n    }\n  | {\n      type: \"WEBSOCKET_DISCONNECTED\"\n      attemptingToReconnect: boolean\n      // TODO(vdonato): Maybe provide a reason the disconnect happened. This\n      // could either be a WS disconnect code or a flag signifying the host\n      // requested this websocket disconnect.\n    }\n  | {\n      type: \"WEBSOCKET_CONNECTED\"\n    }\n\nexport type VersionedMessage<Message> = {\n  stCommVersion: number\n} & Message\n\n/**\n * The app config contains various configurations that the host platform can\n * use to configure streamlit-app frontend behavior. This should to be treated as part of the public\n * API, and changes need to be backwards-compatible meaning that an old host configuration\n * should still work with a new frontend versions.\n *\n * TODO(lukasmasuch): Potentially refactor HostCommunicationManager and move this type\n * to AppContext.tsx.\n */\nexport type AppConfig = {\n  /**\n   * A list of origins that we're allowed to receive cross-iframe messages\n   * from via the browser's window.postMessage API.\n   */\n  allowedOrigins?: string[]\n  /**\n   * Whether to wait until we've received a SET_AUTH_TOKEN message before\n   * resolving deferredAuthToken.promise. The WebsocketConnection class waits\n   * for this promise to resolve before attempting to establish a connection\n   * with the Streamlit server.\n   */\n  useExternalAuthToken?: boolean\n  /**\n   * Enables custom string messages to be sent to the host\n   */\n  enableCustomParentMessages?: boolean\n}\n\n/**\n * The response structure of the `_stcore/host-config` endpoint.\n * This combines streamlit-lib specific configuration options with\n * streamlit-app specific options (e.g. allowed message origins).\n */\nexport type IHostConfigResponse = LibConfig & AppConfig\n"],"mappings":""}