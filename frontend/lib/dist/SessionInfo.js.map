{"version":3,"file":"SessionInfo.js","names":["hashString","notNullOrUndefined","SessionInfo","constructor","_current","_last","current","Error","last","setCurrent","props","undefined","clearCurrent","isSet","isHello","propsFromNewSessionMessage","newSession","initialize","config","userInfo","environmentInfo","appId","installationIdV3","mainScriptPath","sessionId","streamlitVersion","pythonVersion","installationId","maxCachedMessageAge"],"sources":["../src/SessionInfo.ts"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Config,\n  EnvironmentInfo,\n  Initialize,\n  NewSession,\n  UserInfo,\n} from \"./proto\"\nimport { hashString, notNullOrUndefined } from \"./util/utils\"\n\n/**\n * SessionInfo properties. These don't change during the lifetime of a session.\n */\nexport interface Props {\n  readonly appId: string\n  readonly sessionId: string\n  readonly streamlitVersion: string\n  readonly pythonVersion: string\n  readonly installationId: string\n  readonly installationIdV3: string\n  readonly maxCachedMessageAge: number\n  readonly commandLine?: string // Unused, but kept around for compatibility\n  readonly isHello: boolean\n}\n\nexport class SessionInfo {\n  /** Our current SessionInfo properties.*/\n  private _current?: Props\n\n  /**\n   * Our last SessionInfo props if there is no currently active session, or\n   * undefined if there is one.\n   */\n  private _last?: Props\n\n  /** Return the current SessionInfo props. Throw an error if the props are undefined. */\n  public get current(): Props {\n    if (!this._current) {\n      throw new Error(\"Tried to use SessionInfo before it was initialized\")\n    }\n    return this._current\n  }\n\n  /** Return the previous SessionInfo props. They may be undefined! */\n  public get last(): Props | undefined {\n    return this._last\n  }\n\n  /**\n   * Initialize `SessionInfo.current` with the given props and copy its\n   * previous props to `SessionInfo.last`.\n   */\n  public setCurrent(props?: Props): void {\n    this._last = notNullOrUndefined(this._current)\n      ? { ...this._current }\n      : undefined\n    this._current = notNullOrUndefined(props) ? { ...props } : undefined\n  }\n\n  /** Clear `SessionInfo.current` and copy its previous props to `SessionInfo.last`. */\n  public clearCurrent(): void {\n    this.setCurrent(undefined)\n  }\n\n  /** True if `SessionInfo.current` exists. */\n  public get isSet(): boolean {\n    return notNullOrUndefined(this._current)\n  }\n\n  /** True if `SessionInfo.current` refers to a \"streamlit hello\" session. */\n  public get isHello(): boolean {\n    return notNullOrUndefined(this._current) && this._current.isHello\n  }\n\n  /** Create SessionInfo Props from the relevant bits of an initialize message. */\n  public static propsFromNewSessionMessage(newSession: NewSession): Props {\n    const initialize = newSession.initialize as Initialize\n    const config = newSession.config as Config\n    const userInfo = initialize.userInfo as UserInfo\n    const environmentInfo = initialize.environmentInfo as EnvironmentInfo\n    return {\n      appId: hashString(userInfo.installationIdV3 + newSession.mainScriptPath),\n      sessionId: initialize.sessionId,\n      streamlitVersion: environmentInfo.streamlitVersion,\n      pythonVersion: environmentInfo.pythonVersion,\n      installationId: userInfo.installationId,\n      installationIdV3: userInfo.installationIdV3,\n      maxCachedMessageAge: config.maxCachedMessageAge,\n      isHello: initialize.isHello,\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,SAASA,UAAU,EAAEC,kBAAkB;;AAEvC;AACA;AACA;;AAaA,OAAO,MAAMC,WAAW,CAAC;EAAAC,YAAA;IAAA,KAEfC,QAAQ;IAAA,KAMRC,KAAK;EAAA;EAPb;EAGA;AACF;AACA;AACA;EAGE;EACA,IAAWC,OAAOA,CAAA,EAAU;IAC1B,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE;MAClB,MAAM,IAAIG,KAAK,CAAC,oDAAoD,CAAC;IACvE;IACA,OAAO,IAAI,CAACH,QAAQ;EACtB;;EAEA;EACA,IAAWI,IAAIA,CAAA,EAAsB;IACnC,OAAO,IAAI,CAACH,KAAK;EACnB;;EAEA;AACF;AACA;AACA;EACSI,UAAUA,CAACC,KAAa,EAAQ;IACrC,IAAI,CAACL,KAAK,GAAGJ,kBAAkB,CAAC,IAAI,CAACG,QAAQ,CAAC,GAC1C;MAAE,GAAG,IAAI,CAACA;IAAS,CAAC,GACpBO,SAAS;IACb,IAAI,CAACP,QAAQ,GAAGH,kBAAkB,CAACS,KAAK,CAAC,GAAG;MAAE,GAAGA;IAAM,CAAC,GAAGC,SAAS;EACtE;;EAEA;EACOC,YAAYA,CAAA,EAAS;IAC1B,IAAI,CAACH,UAAU,CAACE,SAAS,CAAC;EAC5B;;EAEA;EACA,IAAWE,KAAKA,CAAA,EAAY;IAC1B,OAAOZ,kBAAkB,CAAC,IAAI,CAACG,QAAQ,CAAC;EAC1C;;EAEA;EACA,IAAWU,OAAOA,CAAA,EAAY;IAC5B,OAAOb,kBAAkB,CAAC,IAAI,CAACG,QAAQ,CAAC,IAAI,IAAI,CAACA,QAAQ,CAACU,OAAO;EACnE;;EAEA;EACA,OAAcC,0BAA0BA,CAACC,UAAsB,EAAS;IACtE,MAAMC,UAAU,GAAGD,UAAU,CAACC,UAAwB;IACtD,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAgB;IAC1C,MAAMC,QAAQ,GAAGF,UAAU,CAACE,QAAoB;IAChD,MAAMC,eAAe,GAAGH,UAAU,CAACG,eAAkC;IACrE,OAAO;MACLC,KAAK,EAAErB,UAAU,CAACmB,QAAQ,CAACG,gBAAgB,GAAGN,UAAU,CAACO,cAAc,CAAC;MACxEC,SAAS,EAAEP,UAAU,CAACO,SAAS;MAC/BC,gBAAgB,EAAEL,eAAe,CAACK,gBAAgB;MAClDC,aAAa,EAAEN,eAAe,CAACM,aAAa;MAC5CC,cAAc,EAAER,QAAQ,CAACQ,cAAc;MACvCL,gBAAgB,EAAEH,QAAQ,CAACG,gBAAgB;MAC3CM,mBAAmB,EAAEV,MAAM,CAACU,mBAAmB;MAC/Cd,OAAO,EAAEG,UAAU,CAACH;IACtB,CAAC;EACH;AACF"}